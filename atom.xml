<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Jacky&#39;s Blog</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://fusijie.github.io/"/>
  <updated>2016-05-13T04:04:28.000Z</updated>
  <id>http://fusijie.github.io/</id>
  
  <author>
    <name>偶尔e网事</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>JavaScript-函数和标准对象</title>
    <link href="http://fusijie.github.io/2016/05/10/learn-javascript-function-and-standard-objects/"/>
    <id>http://fusijie.github.io/2016/05/10/learn-javascript-function-and-standard-objects/</id>
    <published>2016-05-10T13:46:47.000Z</published>
    <updated>2016-05-13T04:04:28.000Z</updated>
    
    <content type="html">&lt;p&gt;JavaScript 的函数是第一类对象，可以动态创建，可以做传参，可以做返回值等等，而且由于 JavaScript 函数级作用域的关系，匿名函数的使用十分广泛，所以使用起来非常的灵活。&lt;/p&gt;
&lt;h3 id=&quot;arguments&quot;&gt;&lt;a href=&quot;#arguments&quot; class=&quot;headerlink&quot; title=&quot;arguments&quot;&gt;&lt;/a&gt;arguments&lt;/h3&gt;&lt;p&gt;arguments 也是个奇葩的东西，类似 Array 又不是 Array，但是一般情况下当 Array 使用就可以了。&lt;/p&gt;
&lt;h3 id=&quot;return&quot;&gt;&lt;a href=&quot;#return&quot; class=&quot;headerlink&quot; title=&quot;return&quot;&gt;&lt;/a&gt;return&lt;/h3&gt;&lt;p&gt;因为句末分号的关系，return 后面的语句不要换行写。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;函数级别的变量作用域&quot;&gt;&lt;a href=&quot;#函数级别的变量作用域&quot; class=&quot;headerlink&quot; title=&quot;函数级别的变量作用域&quot;&gt;&lt;/a&gt;函数级别的变量作用域&lt;/h3&gt;&lt;p&gt;简简单单一个作用域，非要搞得这么恶心，还好 ES 6 引入了 let 关键字来处理块级作用域。但是不管怎样也没有 Python 的 变量作用域恶心。。。&lt;/p&gt;
&lt;h3 id=&quot;变量提升&quot;&gt;&lt;a href=&quot;#变量提升&quot; class=&quot;headerlink&quot; title=&quot;变量提升&quot;&gt;&lt;/a&gt;变量提升&lt;/h3&gt;&lt;p&gt;这个蛋疼的特性我也是无力吐槽了，所以请注意在函数的内部首先声明所有的变量。&lt;/p&gt;
&lt;h3 id=&quot;全局作用域&quot;&gt;&lt;a href=&quot;#全局作用域&quot; class=&quot;headerlink&quot; title=&quot;全局作用域&quot;&gt;&lt;/a&gt;全局作用域&lt;/h3&gt;&lt;p&gt;不在函数内声明的变量就具有全局作用域。默认所有全局作用域都绑到 window 上。&lt;/p&gt;
&lt;h3 id=&quot;this&quot;&gt;&lt;a href=&quot;#this&quot; class=&quot;headerlink&quot; title=&quot;this&quot;&gt;&lt;/a&gt;this&lt;/h3&gt;&lt;p&gt;相信我说 this 是 JavaScript 最恶心的东西没人会反对。。。不说啥了，自己体会。&lt;/p&gt;
&lt;h3 id=&quot;apply-call&quot;&gt;&lt;a href=&quot;#apply-call&quot; class=&quot;headerlink&quot; title=&quot;apply, call&quot;&gt;&lt;/a&gt;apply, call&lt;/h3&gt;&lt;p&gt;函数调用的两种方式，主要方便在可以控制 this 的指向，前者将参数打包为 Array 传入，后者将参数按序传入。&lt;/p&gt;
&lt;h3 id=&quot;高阶函数&quot;&gt;&lt;a href=&quot;#高阶函数&quot; class=&quot;headerlink&quot; title=&quot;高阶函数&quot;&gt;&lt;/a&gt;高阶函数&lt;/h3&gt;&lt;p&gt;map，reduce，filter，sort，和 python 基本上是一样的，都是对 Array 进行处理。&lt;/p&gt;
&lt;h3 id=&quot;闭包&quot;&gt;&lt;a href=&quot;#闭包&quot; class=&quot;headerlink&quot; title=&quot;闭包&quot;&gt;&lt;/a&gt;闭包&lt;/h3&gt;&lt;p&gt;本质上，闭包是一个携带环境状态的函数，所以在返回函数的时候不要引用任何的循环变量以及后续会发生变化的变量。&lt;/p&gt;
&lt;h3 id=&quot;delete&quot;&gt;&lt;a href=&quot;#delete&quot; class=&quot;headerlink&quot; title=&quot;delete&quot;&gt;&lt;/a&gt;delete&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;不是所有的属性和方法都能被删除。&lt;/li&gt;
&lt;li&gt;var 声明的变量，对象，数组都不能被删除。&lt;/li&gt;
&lt;li&gt;删除数组的某个索引，不会影响数组的长度。&lt;/li&gt;
&lt;li&gt;不要根据返回值判断是否删除成功。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;typeof&quot;&gt;&lt;a href=&quot;#typeof&quot; class=&quot;headerlink&quot; title=&quot;typeof&quot;&gt;&lt;/a&gt;typeof&lt;/h3&gt;&lt;p&gt;typeof 获取对象类型，返回小写字母开头的字符串。 &lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;typeof null === &amp;apos;object&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;typeof [] === &amp;apos;object&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;typeof undefined === &amp;apos;undefined&amp;apos; //判断某个变量是否有声明&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;Copy&quot;&gt;&lt;a href=&quot;#Copy&quot; class=&quot;headerlink&quot; title=&quot;Copy&quot;&gt;&lt;/a&gt;Copy&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/* 检测对象类型&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * @param: obj &amp;#123;JavaScript Object&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * @param: type &amp;#123;String&amp;#125; 以大写开头的 JS 类型名&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * @return: &amp;#123;Boolean&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;function is(obj, type)  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  return Object.prototype.toString.call(obj).slice(8, -1) === type;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/* 复制对象&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * @param: obj &amp;#123;JavaScript Object&amp;#125; 原始对象&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * @param: isDeep &amp;#123;Boolean&amp;#125; 是否为深拷贝&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * @return: &amp;#123;JavaScript Object&amp;#125; 返回一个新的对象&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;function copy(obj, isDeep) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  var ret = obj.slice ? [] : &amp;#123;&amp;#125;, p, prop;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  // 配合 is 函数使用&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  if(!isDeep &amp;amp;&amp;amp; is(obj, &amp;apos;Array&amp;apos;)) return obj.slice();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  for(p in obj) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if(!obj.hasOwnProperty(p)) continue;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    prop = obj[p];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ret[p] = (is(prop, &amp;apos;Object&amp;apos;) || is(prop, &amp;apos;Array&amp;apos;)) ? &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      copy(prop, isDeep) : prop;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  return ret;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;包装对象&quot;&gt;&lt;a href=&quot;#包装对象&quot; class=&quot;headerlink&quot; title=&quot;包装对象&quot;&gt;&lt;/a&gt;包装对象&lt;/h3&gt;&lt;p&gt;int 和 Integer 的关系。不要使用包装对象。数字和字符串的转换，使用 parseInt，parseFloat，减0，toString，加空串。&lt;/p&gt;
&lt;p&gt;另外对基础类型的处理需小心，如下，基础类型 string 会被&lt;strong&gt;临时&lt;/strong&gt;提升为 String 类。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;var a = &amp;apos;abcdefg&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a.pro = 100;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;console.log(a.pro);//undefined&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var b = new String(&amp;apos;abcdefg&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;b.pro = 100;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;console.log(b.pro);//100&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;Date&quot;&gt;&lt;a href=&quot;#Date&quot; class=&quot;headerlink&quot; title=&quot;Date&quot;&gt;&lt;/a&gt;Date&lt;/h3&gt;&lt;p&gt;特别注意月份索引从 0 开始。getTime() 返回从 1970.1.1 开始&lt;strong&gt;的毫秒时间&lt;/strong&gt;。&lt;/p&gt;
&lt;h3 id=&quot;JSON&quot;&gt;&lt;a href=&quot;#JSON&quot; class=&quot;headerlink&quot; title=&quot;JSON&quot;&gt;&lt;/a&gt;JSON&lt;/h3&gt;&lt;p&gt;JSON.stringify 可以带参数 replacer（函数）和 space（空格）&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;var obj = &amp;#123;x:1, y: &amp;#123;a:2, b: 3&amp;#125;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;JSON.stringify(obj, function(k,v)&amp;#123;return v;&amp;#125;, &amp;apos;    &amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;quot;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;x&amp;quot;: 1,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;y&amp;quot;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;quot;a&amp;quot;: 2,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;quot;b&amp;quot;: 3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;rest，let，const，箭头函数，generator&quot;&gt;&lt;a href=&quot;#rest，let，const，箭头函数，generator&quot; class=&quot;headerlink&quot; title=&quot;rest，let，const，箭头函数，generator&quot;&gt;&lt;/a&gt;rest，let，const，箭头函数，generator&lt;/h3&gt;&lt;p&gt;这些都是 ES6 标准，鉴于目前浏览器的支持情况，不介绍。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/rest_parameters&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;rest&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/let&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;let&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/const&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;const&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;箭头函数&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;generator&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;JavaScript 的函数是第一类对象，可以动态创建，可以做传参，可以做返回值等等，而且由于 JavaScript 函数级作用域的关系，匿名函数的使用十分广泛，所以使用起来非常的灵活。&lt;/p&gt;
&lt;h3 id=&quot;arguments&quot;&gt;&lt;a href=&quot;#arguments&quot; class=&quot;headerlink&quot; title=&quot;arguments&quot;&gt;&lt;/a&gt;arguments&lt;/h3&gt;&lt;p&gt;arguments 也是个奇葩的东西，类似 Array 又不是 Array，但是一般情况下当 Array 使用就可以了。&lt;/p&gt;
&lt;h3 id=&quot;return&quot;&gt;&lt;a href=&quot;#return&quot; class=&quot;headerlink&quot; title=&quot;return&quot;&gt;&lt;/a&gt;return&lt;/h3&gt;&lt;p&gt;因为句末分号的关系，return 后面的语句不要换行写。&lt;/p&gt;
    
    </summary>
    
      <category term="JavaScript" scheme="http://fusijie.github.io/categories/JavaScript/"/>
    
    
      <category term="函数" scheme="http://fusijie.github.io/tags/%E5%87%BD%E6%95%B0/"/>
    
      <category term="标准对象" scheme="http://fusijie.github.io/tags/%E6%A0%87%E5%87%86%E5%AF%B9%E8%B1%A1/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript-基础介绍</title>
    <link href="http://fusijie.github.io/2016/05/06/learn-javascript-introduction/"/>
    <id>http://fusijie.github.io/2016/05/06/learn-javascript-introduction/</id>
    <published>2016-05-05T16:26:23.000Z</published>
    <updated>2016-05-05T16:33:23.000Z</updated>
    
    <content type="html">&lt;p&gt;接触 JavaScript 也有快2年的时间了，因为工作的原因，涉猎的编程语言有点过多了（大概算算，有 c/c++，java，oc，js，lua，c#，python，shell），我本身是很喜欢研究编程语言的，特别在写了多门语言之后不自觉地就会进行比较，比较语言特性上的各种优劣，总归还是很有乐趣的。&lt;/p&gt;
&lt;p&gt;为什么我突然又开始写起 JavaScript 教程?主要是 JavaScript 的使用比重一直在上升，使得我必须全面严谨地再研究一遍，当然实话就是 JavaScript 要统一天下，这从雨后春笋般的框架就可以看到。而我主攻的 Cocos 引擎相关的业务也围绕 JavaScript。但是学的语言多，避免不了的问题就是精力的分散，很多东西都无法深入，同时在语法上，标准库的使用也很容易混淆。&lt;/p&gt;
&lt;p&gt;刚才说这是 JavaScript 教程，其实不能算，顶多就是个读书笔记，而且会很零散，可能会对一些回顾 JavaScript 的人会有空吧。最后补一句，云风说得对，JavaScript 真是一门恶心的语言。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;句末分号&quot;&gt;&lt;a href=&quot;#句末分号&quot; class=&quot;headerlink&quot; title=&quot;句末分号&quot;&gt;&lt;/a&gt;句末分号&lt;/h3&gt;&lt;p&gt;JavaScript 允许句末不用分号，实际上是浏览器中的 JavaScript 解析引擎会自动帮你加上，但是有过编程经验的人都知道，这些东西不能省就是不能省，不是规则，是规范。&lt;/p&gt;
&lt;h3 id=&quot;Number&quot;&gt;&lt;a href=&quot;#Number&quot; class=&quot;headerlink&quot; title=&quot;Number&quot;&gt;&lt;/a&gt;Number&lt;/h3&gt;&lt;p&gt;JavaScript 不区分整数和浮点数，统一采用 Number 数据类型。Number 有几个属性，需要注意下，其中 NaN 只能用 isNaN() 做判断。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1/0;//Infinity&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0/0;//NaN&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10.5%3;//1.5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;char&quot;&gt;&lt;a href=&quot;#char&quot; class=&quot;headerlink&quot; title=&quot;char&quot;&gt;&lt;/a&gt;char&lt;/h3&gt;&lt;p&gt;JavaScript 没有 char 类型，单个字符也是字符串，长度为1。&lt;/p&gt;
&lt;h3 id=&quot;两个感叹号&quot;&gt;&lt;a href=&quot;#两个感叹号&quot; class=&quot;headerlink&quot; title=&quot;两个感叹号&quot;&gt;&lt;/a&gt;两个感叹号&lt;/h3&gt;&lt;p&gt;两个感叹号可以强转为布尔型。&lt;/p&gt;
&lt;h3 id=&quot;和&quot;&gt;&lt;a href=&quot;#和&quot; class=&quot;headerlink&quot; title=&quot;== 和 ===&quot;&gt;&lt;/a&gt;== 和 ===&lt;/h3&gt;&lt;p&gt;前者会转换数据类型，后者不会，大部分情况下请使用 ===。要注意：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;isNaN === isNaN;// false&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;同时也要注意浮点的问题&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1/3 === (1 - 2/3); // false&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Math.abs(1/3 - (1 - 2/3)) &amp;lt; 0.0000001; // true&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;null-和-undefined&quot;&gt;&lt;a href=&quot;#null-和-undefined&quot; class=&quot;headerlink&quot; title=&quot;null 和 undefined&quot;&gt;&lt;/a&gt;null 和 undefined&lt;/h3&gt;&lt;p&gt;这也是一个很蛋疼的设计，主要的区别是 null 是存在的，而 undefined 是不存在的。&lt;/p&gt;
&lt;h3 id=&quot;数组&quot;&gt;&lt;a href=&quot;#数组&quot; class=&quot;headerlink&quot; title=&quot;数组&quot;&gt;&lt;/a&gt;数组&lt;/h3&gt;&lt;p&gt;创建数组可以使用 []，也可以使用 new Array()，从可读性和性能考虑，建议使用前者。&lt;/p&gt;
&lt;h3 id=&quot;var&quot;&gt;&lt;a href=&quot;#var&quot; class=&quot;headerlink&quot; title=&quot;var&quot;&gt;&lt;/a&gt;var&lt;/h3&gt;&lt;p&gt;允许不使用 var 来声明变量也是一个蛋疼的问题。如果一个变量没有通过 var 声明，那该变量就会被自动声明为全局变量。但是这句话的意思并不是说通过 var 声明了，就不是全局变量了，还是得看作用域。&lt;/p&gt;
&lt;h3 id=&quot;严格模式&quot;&gt;&lt;a href=&quot;#严格模式&quot; class=&quot;headerlink&quot; title=&quot;严格模式&quot;&gt;&lt;/a&gt;严格模式&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;use strict&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;严格模式要求变量必须用 var 声明，不然直接报错。当然还有一些其他限制，后面会谈到。&lt;/p&gt;
&lt;h3 id=&quot;对象&quot;&gt;&lt;a href=&quot;#对象&quot; class=&quot;headerlink&quot; title=&quot;对象&quot;&gt;&lt;/a&gt;对象&lt;/h3&gt;&lt;p&gt;JavaScript 的对象是一组由键值对组成的无序集合，其中键是字符串。&lt;/p&gt;
&lt;p&gt;如果键符合变量的命名要求，比如 abc，那么可以写成 obj[‘abc’]，但是一般我们习惯写成 obj.abc。当然键也可以不符合变量命名要求，比如 a-b-c，比如 1，这个时候就不能用点号了，只能写成 obj[‘a-b-b’] 和 obj[‘1’]。从这个意义上说，也可以理解数组是一种特殊的对象，arr[0] 只是 arr[‘0’] 的简写，而且数组可以在任意位置插入值。&lt;/p&gt;
&lt;h3 id=&quot;关键字-in&quot;&gt;&lt;a href=&quot;#关键字-in&quot; class=&quot;headerlink&quot; title=&quot;关键字 in&quot;&gt;&lt;/a&gt;关键字 in&lt;/h3&gt;&lt;p&gt;in 可以用于判断某个属性是否是某个对象所有，而 hasOwnProperty 可以判断某个属性是否是自身或者继承而来。&lt;/p&gt;
&lt;h3 id=&quot;字符串&quot;&gt;&lt;a href=&quot;#字符串&quot; class=&quot;headerlink&quot; title=&quot;字符串&quot;&gt;&lt;/a&gt;字符串&lt;/h3&gt;&lt;p&gt;记住字符串都是不可变的，所以所有对字符串的操作都是返回一个新字符串，如果对字符串某个索引赋值，不报错但也无效。&lt;/p&gt;
&lt;h3 id=&quot;Array&quot;&gt;&lt;a href=&quot;#Array&quot; class=&quot;headerlink&quot; title=&quot;Array&quot;&gt;&lt;/a&gt;Array&lt;/h3&gt;&lt;p&gt;数组是可变的，所以需要注意的是对数组的操作到底是修改了数组本身还是返回了一个新数组。&lt;/p&gt;
&lt;p&gt;如果判断一个对象是否是 Array？&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;var isArray = function(obj) &amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;return Object.prototype.toString.call(obj) === &amp;apos;[object Array]&amp;apos;; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;或者&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Array.isArray(obj);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;if…else…-多行条件判断&quot;&gt;&lt;a href=&quot;#if…else…-多行条件判断&quot; class=&quot;headerlink&quot; title=&quot;if…else… 多行条件判断&quot;&gt;&lt;/a&gt;if…else… 多行条件判断&lt;/h3&gt;&lt;p&gt;实际上 JavaScript 是没有 elseif 的，平时写的 else if 只是两层 if…else… 的嵌套，方便阅读。&lt;/p&gt;
&lt;h3 id=&quot;JavaScript-的循环&quot;&gt;&lt;a href=&quot;#JavaScript-的循环&quot; class=&quot;headerlink&quot; title=&quot;JavaScript 的循环&quot;&gt;&lt;/a&gt;JavaScript 的循环&lt;/h3&gt;&lt;p&gt;第一种是普通的 for 循环，由三个条件组成。&lt;/p&gt;
&lt;p&gt;第二种是 for…in 循环，for…in 循环可以把一个对象的所有属性遍历出来，注意输出的键值是 字符串，当然也可以把一个数组的所有属性都遍历出来，和对象一样的是输出的键值是字符串而不是数字，不一样的是它不输出继承下来的属性而对象会输出所有属性包括继承的。&lt;/p&gt;
&lt;p&gt;第三种是 forEach，但是只能遍历数组。（ES 5.1）&lt;/p&gt;
&lt;h3 id=&quot;Map，Set，for…of&quot;&gt;&lt;a href=&quot;#Map，Set，for…of&quot; class=&quot;headerlink&quot; title=&quot;Map，Set，for…of&quot;&gt;&lt;/a&gt;Map，Set，for…of&lt;/h3&gt;&lt;p&gt;这些都是 ES6 标准，鉴于目前浏览器的支持情况，不介绍。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Map&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Set&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for...of&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;for…of&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;接触 JavaScript 也有快2年的时间了，因为工作的原因，涉猎的编程语言有点过多了（大概算算，有 c/c++，java，oc，js，lua，c#，python，shell），我本身是很喜欢研究编程语言的，特别在写了多门语言之后不自觉地就会进行比较，比较语言特性上的各种优劣，总归还是很有乐趣的。&lt;/p&gt;
&lt;p&gt;为什么我突然又开始写起 JavaScript 教程?主要是 JavaScript 的使用比重一直在上升，使得我必须全面严谨地再研究一遍，当然实话就是 JavaScript 要统一天下，这从雨后春笋般的框架就可以看到。而我主攻的 Cocos 引擎相关的业务也围绕 JavaScript。但是学的语言多，避免不了的问题就是精力的分散，很多东西都无法深入，同时在语法上，标准库的使用也很容易混淆。&lt;/p&gt;
&lt;p&gt;刚才说这是 JavaScript 教程，其实不能算，顶多就是个读书笔记，而且会很零散，可能会对一些回顾 JavaScript 的人会有空吧。最后补一句，云风说得对，JavaScript 真是一门恶心的语言。&lt;/p&gt;
    
    </summary>
    
      <category term="JavaScript" scheme="http://fusijie.github.io/categories/JavaScript/"/>
    
    
      <category term="JavaScript" scheme="http://fusijie.github.io/tags/JavaScript/"/>
    
      <category term="基础" scheme="http://fusijie.github.io/tags/%E5%9F%BA%E7%A1%80/"/>
    
      <category term="读书笔记" scheme="http://fusijie.github.io/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>30分钟正则表达式快速入门</title>
    <link href="http://fusijie.github.io/2016/04/28/learn-regex-in-30-minutes/"/>
    <id>http://fusijie.github.io/2016/04/28/learn-regex-in-30-minutes/</id>
    <published>2016-04-28T13:54:28.000Z</published>
    <updated>2016-04-28T14:36:24.000Z</updated>
    
    <content type="html">&lt;p&gt;正则表达式在查找，解析，替换文本是非常管用的，这些常见的文本包含但不限于代码，日志，表格，甚至于文稿。但是很多人一看到正则表达式，反应通常是&lt;/p&gt;
&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;/images/posts/2016-04-28-learn-regex-in-30-minutes/ylmb.jpg&quot; alt=&quot;&quot; border=&quot;0&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;

&lt;p&gt;其实并没有这么难，本文就是带你30分钟快速入门正则表达式。&lt;/p&gt;
&lt;p&gt;本文改编自 &lt;a href=&quot;http://regexone.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://regexone.com/&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id=&quot;ABCs&quot;&gt;&lt;a href=&quot;#ABCs&quot; class=&quot;headerlink&quot; title=&quot;ABCs&quot;&gt;&lt;/a&gt;ABCs&lt;/h3&gt;&lt;p&gt;首先要明白的第一件事就是&lt;strong&gt;本质上一切都是字符&lt;/strong&gt;，正则表达式就是一串用于匹配字符串的字符串。&lt;/p&gt;
&lt;p&gt;一般情况下我们使用 ASCII 字符，也就是英文字符，数字，标点符号和一些特殊符号（%#$@!），当然 Unicode 字符也可以用作正则表达式&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;。&lt;br&gt;&lt;br&gt;先来试一试最简单的字符串直接匹配。&lt;br&gt;&lt;br&gt;练习：匹配字符串&lt;br&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;match      abcdefg&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;match      abcde&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;match      abc&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;答案：（正则表达式是没有唯一答案的，这和你需要的匹配程度有关）&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;regex      abc&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;123s&quot;&gt;&lt;a href=&quot;#123s&quot; class=&quot;headerlink&quot; title=&quot;123s&quot;&gt;&lt;/a&gt;123s&lt;/h3&gt;&lt;p&gt;字符包括英文字母，当然也包括数字。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;\d&lt;/code&gt; 通常用来表示单个数字（0~9），比如 &lt;code&gt;\d&lt;/code&gt; 可以是 0~9，&lt;code&gt;\d\d&lt;/code&gt; 可以是 00~99。&lt;/p&gt;
&lt;p&gt;练习：匹配数字&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;match      abc123xyz&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;match      define &amp;quot;123&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;match      var g = 123;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;答案：(当然你也可以写&lt;code&gt;\d\d\d&lt;/code&gt;，同样可以匹配123)&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;regex      123&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;点号&quot;&gt;&lt;a href=&quot;#点号&quot; class=&quot;headerlink&quot; title=&quot;点号&quot;&gt;&lt;/a&gt;点号&lt;/h3&gt;&lt;p&gt;正则表达式中点号（.）是做通配符使用，也就是说点号可以表示任意单个字符（字母，数字，空格，任何符号都是）。&lt;/p&gt;
&lt;p&gt;但是如果要准确适配点号本身，那如何表示呢？&lt;code&gt;\.&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;练习：使用通配符匹配&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;match      cat.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;match      896.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;match      ?=+.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;skip       abc1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;答案：(关键在于最后一个字符点号要能够准确适配)&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;regex      ...\.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;匹配指定字符&quot;&gt;&lt;a href=&quot;#匹配指定字符&quot; class=&quot;headerlink&quot; title=&quot;匹配指定字符&quot;&gt;&lt;/a&gt;匹配指定字符&lt;/h3&gt;&lt;p&gt;点号太给力了，但是给力不一定是万能的，比如我们要匹配一个电话号码，“abcd-efghijkl” 可以是一个有效是电话号码吗？&lt;/p&gt;
&lt;p&gt;所以我们需要一种能匹配指定字符的方法，这就是&lt;code&gt;[]&lt;/code&gt;。比如 &lt;code&gt;[abc]&lt;/code&gt; 只匹配 a 或 b 或 c。要注意 &lt;code&gt;[]&lt;/code&gt; 只匹配单个字符。&lt;/p&gt;
&lt;p&gt;练习：匹配字符串&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;match      can&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;match      man&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;match      fan&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;skip       dan&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;skip       ran&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;skip       pan&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;答案：(学了下一节之后你会发现还可以用[^drp]an)&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;regex      [cmf]an&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;匹配指定排除的字符&quot;&gt;&lt;a href=&quot;#匹配指定排除的字符&quot; class=&quot;headerlink&quot; title=&quot;匹配指定排除的字符&quot;&gt;&lt;/a&gt;匹配指定排除的字符&lt;/h3&gt;&lt;p&gt;有时候我们并不知道要匹配哪个字符，但是我们指定不匹配哪个字符。&lt;/p&gt;
&lt;p&gt;这时候 &lt;code&gt;^&lt;/code&gt; 就有用了。比如 &lt;code&gt;[^abc]&lt;/code&gt; 匹配除 a 和 b 和 c 以外的所有字符，注意也是单个。&lt;/p&gt;
&lt;p&gt;练习：匹配指定排除的字符&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;match      hog&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;match      dog&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;skip       bog&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;答案：（也可以使用上一节的 &lt;code&gt;[hd]og&lt;/code&gt;）&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;regex      [^b]og&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;范围字符&quot;&gt;&lt;a href=&quot;#范围字符&quot; class=&quot;headerlink&quot; title=&quot;范围字符&quot;&gt;&lt;/a&gt;范围字符&lt;/h3&gt;&lt;p&gt;如果需要指定的字符太多了，比如从 a 到 g，难道我们就要写 &lt;code&gt;[abcdefg]&lt;/code&gt; 么？当然有更方便的写法 &lt;code&gt;[a-g]&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;举个栗子，&lt;code&gt;[a-z]&lt;/code&gt; 表示匹配所有小写字母（注意大小写是区分的），&lt;code&gt;[0-9]&lt;/code&gt; 表示匹配所有数字，&lt;code&gt;[^n-p]&lt;/code&gt; 表示匹配除 n 到 p 以外的单个字符，而 &lt;code&gt;\w&lt;/code&gt; 其实就是 &lt;code&gt;[A-Za-z0-9_]&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;练习：匹配指定范围字符&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;match      Ana&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;match      Bob&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;match      Cpc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;skip       aax&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;skip       bby&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;skip       ccz&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;答案：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;regex      [A-Z][n-p][a-c]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;匹配重复次数&quot;&gt;&lt;a href=&quot;#匹配重复次数&quot; class=&quot;headerlink&quot; title=&quot;匹配重复次数&quot;&gt;&lt;/a&gt;匹配重复次数&lt;/h3&gt;&lt;p&gt;前面我们学习的是匹配字符，假如要匹配一个3位数的数字，那就是 &lt;code&gt;\d\d\d&lt;/code&gt;，但是如果是10位呢？如果是100位呢？&lt;/p&gt;
&lt;p&gt;这里就需要重复次数的语法了，&lt;code&gt;{}&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;a{3}&lt;/code&gt; 表示a重复3次，&lt;code&gt;a{2,6}&lt;/code&gt;表示a重复2次到6次之间都匹配。&lt;/p&gt;
&lt;p&gt;结合之前学习的，&lt;code&gt;[a-z]{5}&lt;/code&gt;表示某个小写字母重复5次，比如 bbbbb，而 &lt;code&gt;\d{3,8}&lt;/code&gt; 表示某个数字重复3到8次，比如 55555。&lt;/p&gt;
&lt;p&gt;练习：匹配重复字符&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;match      wazzzzup&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;match      wazzzup&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;skip       wazup&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;答案：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;regex      waz&amp;#123;3,4&amp;#125;up&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;另一种匹配重复次数&quot;&gt;&lt;a href=&quot;#另一种匹配重复次数&quot; class=&quot;headerlink&quot; title=&quot;另一种匹配重复次数&quot;&gt;&lt;/a&gt;另一种匹配重复次数&lt;/h3&gt;&lt;p&gt;除了使用 &lt;code&gt;{}&lt;/code&gt; 来匹配重复次数，还可以使用下面两种符号来匹配重复次数。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;*&lt;/code&gt;，表示0次到多次重复，比如 &lt;code&gt;.*&lt;/code&gt; 匹配任意字符串&lt;/p&gt;
&lt;p&gt;&lt;code&gt;+&lt;/code&gt;，表示1次到多次重复，比如 &lt;code&gt;a+&lt;/code&gt; 匹配超过一个包含 a 的字符串&lt;/p&gt;
&lt;p&gt;练习：匹配重复字符&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;match      aaaabcc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;match      aabbbbc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;match      aacc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;skip       a&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;答案：（也可以是上一节的 &lt;code&gt;a{2,4}b{0,4}c{1,2}&lt;/code&gt;）&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;regex      a+b*c+&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;可选字符&quot;&gt;&lt;a href=&quot;#可选字符&quot; class=&quot;headerlink&quot; title=&quot;可选字符&quot;&gt;&lt;/a&gt;可选字符&lt;/h3&gt;&lt;p&gt;可选字符是指某个字符可以是一个也可以没有，用 &lt;code&gt;?&lt;/code&gt; 表示。&lt;/p&gt;
&lt;p&gt;举个栗子，&lt;code&gt;ab?c&lt;/code&gt; 可以匹配 abc 或者 ac。&lt;/p&gt;
&lt;p&gt;需要注意的是，如果要准确匹配问号，则需要使用 &lt;code&gt;\?&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;练习：匹配可选字符&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;match      1 file found?&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;match      2 files found?&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;match      24 files found?&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;skip       no files found.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;答案：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;regex      \d+ files? found\?&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;匹配空白符&quot;&gt;&lt;a href=&quot;#匹配空白符&quot; class=&quot;headerlink&quot; title=&quot;匹配空白符&quot;&gt;&lt;/a&gt;匹配空白符&lt;/h3&gt;&lt;p&gt;空白符包含空格键（␣），制表符（\t），换行符（\n）和回车符（\r），使用 &lt;code&gt;\s&lt;/code&gt; 表示。&lt;/p&gt;
&lt;p&gt;练习：匹配空白字符&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;match      1.   abc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;match      2.    abc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;match      3.       abc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;skip       4.abc&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;答案：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;regex      \d\.\s+abc&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;开始和结束&quot;&gt;&lt;a href=&quot;#开始和结束&quot; class=&quot;headerlink&quot; title=&quot;开始和结束&quot;&gt;&lt;/a&gt;开始和结束&lt;/h3&gt;&lt;p&gt;到目前为止，我们写的正则表达式都是匹配片段文本，如果需要匹配完整的文本呢？&lt;/p&gt;
&lt;p&gt;所谓完整，就是有开头有结尾。正则表达式中使用 &lt;code&gt;^&lt;/code&gt; 和 &lt;code&gt;$&lt;/code&gt; 表示。&lt;/p&gt;
&lt;p&gt;练习：匹配行&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;match      Mission:successful&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;skip       Last Mission: unsuccessful&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;skip       Next Mission: successful upon capture of target&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;答案：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;regex      ^Mission: successful$&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;匹配组&quot;&gt;&lt;a href=&quot;#匹配组&quot; class=&quot;headerlink&quot; title=&quot;匹配组&quot;&gt;&lt;/a&gt;匹配组&lt;/h3&gt;&lt;p&gt;正则表达式不仅可以匹配文本，还允许我们取出部分信息做进一步的处理。&lt;/p&gt;
&lt;p&gt;如何取出我们想要的信息呢？使用&lt;code&gt;()&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;比如，有个图片的 url，可能是这样的 &lt;code&gt;https://noexist.com/IMG123.png&lt;/code&gt;，你希望取出文件名 &lt;code&gt;IMG_123&lt;/code&gt;。对应的正则表达式就是 &lt;code&gt;^(IMG\d+)\.png&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;练习：匹配组&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;capture       file_record_transcript.pdf      file_record_transcript&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;capture       file_07241999.pdf               file_07241999&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;skip          testfile_fake.pdf.tmp&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;答案：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;regex        ^(file.+)\.pdf$&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;嵌套组&quot;&gt;&lt;a href=&quot;#嵌套组&quot; class=&quot;headerlink&quot; title=&quot;嵌套组&quot;&gt;&lt;/a&gt;嵌套组&lt;/h3&gt;&lt;p&gt;有的时候你想要获得多层信息，还是以图片的 url（&lt;code&gt;https://noexist.com/IMG123.png&lt;/code&gt;）为例，你既想拿到完整的图片名（IMG123），也想得到图片的序号（123）。这时候嵌套组就可以派上用场了。&lt;/p&gt;
&lt;p&gt;嵌套组使用多个嵌套的 &lt;code&gt;()&lt;/code&gt; 来区分组。比如 &lt;code&gt;^(IMG(\d+))\.png$&lt;/code&gt; 就可以实现上述目的。&lt;/p&gt;
&lt;p&gt;练习：匹配嵌套组&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;capture       Jan 1987      Jan 1987       1987&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;capture       May 1969      May 1969       1969&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;capture       Aug 2011      Aug 2011       2011&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;答案：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;regex        (\w+ (\d+))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;匹配重复组&quot;&gt;&lt;a href=&quot;#匹配重复组&quot; class=&quot;headerlink&quot; title=&quot;匹配重复组&quot;&gt;&lt;/a&gt;匹配重复组&lt;/h3&gt;&lt;p&gt;之前我们了解到 &lt;code&gt;*&lt;/code&gt;，&lt;code&gt;+&lt;/code&gt;，&lt;code&gt;{m,n}&lt;/code&gt;，&lt;code&gt;?&lt;/code&gt; 可以用在单个字符上，同样的，它也可以用在组上。&lt;/p&gt;
&lt;p&gt;比如我们知道某个电话号码可能包含或者不包含一个区号，那么我们就可以写一个 &lt;code&gt;(\d{4})?&lt;/code&gt; 来处理区号。&lt;/p&gt;
&lt;p&gt;练习：匹配嵌套组&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;capture      1280x720      1280      720&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;capture      1920x1600     1920      1600&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;capture      1024x768      1024      768&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;答案：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;regex        (\d+)x(\d+)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;可选项匹配&quot;&gt;&lt;a href=&quot;#可选项匹配&quot; class=&quot;headerlink&quot; title=&quot;可选项匹配&quot;&gt;&lt;/a&gt;可选项匹配&lt;/h3&gt;&lt;p&gt;之前我们学习到了精确匹配，但是有时候我们在几个选项之间犹豫，这时候就可以使用 &lt;code&gt;|&lt;/code&gt; 来处理可选项的匹配。&lt;/p&gt;
&lt;p&gt;比如 &lt;code&gt;Buy more (milk|bread|juice)&lt;/code&gt; 可以匹配 Buy more milk，Buy more bread 和 Buy more juice。&lt;/p&gt;
&lt;p&gt;练习：匹配可选文本&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;match    I love cats&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;match    I love dogs&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;skip     I love logs&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;skip     I love cogs&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;答案：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;regex    I love (cats|dogs)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;其他特殊字符&quot;&gt;&lt;a href=&quot;#其他特殊字符&quot; class=&quot;headerlink&quot; title=&quot;其他特殊字符&quot;&gt;&lt;/a&gt;其他特殊字符&lt;/h3&gt;&lt;p&gt;之前我们已经学习了 &lt;code&gt;\d（数字）&lt;/code&gt;，&lt;code&gt;\s（空格）&lt;/code&gt;，&lt;code&gt;\w（字母数字下划线）&lt;/code&gt;。正则表达式也提供给我们一套相反的集合，用大写的 &lt;code&gt;\D（非数字）&lt;/code&gt;，&lt;code&gt;\S（非空格）&lt;/code&gt;，&lt;code&gt;\W（非字母数字下划线，比如标点符号）&lt;/code&gt; 来表示。&lt;/p&gt;
&lt;p&gt;另外 &lt;code&gt;\b&lt;/code&gt; 用于匹配单词和非单词字符之间的边界。比如我们要获取一个单词，就可以这么写 &lt;code&gt;\w+\b&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;还有一些系统是支持用 &lt;code&gt;\0&lt;/code&gt;，&lt;code&gt;\1&lt;/code&gt;，&lt;code&gt;\2&lt;/code&gt; 来表示组。&lt;/p&gt;
&lt;p&gt;练习：匹配特殊字符&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;match      The quick brown fox jumped over the lazy dog.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;match      There were 614 instances of students getting 90.0% or above.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;match      The FCC had to censor the network for saying &amp;amp;$#*@!.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;答案：自由发挥~&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;正则表达式在查找，解析，替换文本是非常管用的，这些常见的文本包含但不限于代码，日志，表格，甚至于文稿。但是很多人一看到正则表达式，反应通常是&lt;/p&gt;
&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;/images/posts/2016-04-28-learn-regex-in-30-minutes/ylmb.jpg&quot; alt=&quot;&quot; border=&quot;0&quot; /&gt;&lt;br&gt;&lt;/br&gt;&lt;/div&gt;

&lt;p&gt;其实并没有这么难，本文就是带你30分钟快速入门正则表达式。&lt;/p&gt;
&lt;p&gt;本文改编自 &lt;a href=&quot;http://regexone.com/&quot;&gt;http://regexone.com/&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id=&quot;ABCs&quot;&gt;&lt;a href=&quot;#ABCs&quot; class=&quot;headerlink&quot; title=&quot;ABCs&quot;&gt;&lt;/a&gt;ABCs&lt;/h3&gt;&lt;p&gt;首先要明白的第一件事就是&lt;strong&gt;本质上一切都是字符&lt;/strong&gt;，正则表达式就是一串用于匹配字符串的字符串。&lt;/p&gt;
&lt;p&gt;一般情况下我们使用 ASCII 字符，也就是英文字符，数字，标点符号和一些特殊符号（%#$@!），当然 Unicode 字符也可以用作正则表达式&lt;/p&gt;
    
    </summary>
    
      <category term="Others" scheme="http://fusijie.github.io/categories/Others/"/>
    
    
      <category term="正则表达式" scheme="http://fusijie.github.io/tags/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>Eclipse/AndroidStudio + NDK 单独编译 so 和 apk</title>
    <link href="http://fusijie.github.io/2015/08/24/eclipse-as-build-so-apk-seperate/"/>
    <id>http://fusijie.github.io/2015/08/24/eclipse-as-build-so-apk-seperate/</id>
    <published>2015-08-24T12:36:47.000Z</published>
    <updated>2016-04-30T12:58:28.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;概况&quot;&gt;&lt;a href=&quot;#概况&quot; class=&quot;headerlink&quot; title=&quot;概况&quot;&gt;&lt;/a&gt;概况&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;环境：Mac OSX/Cocos2d-x v3.7/NDK r10c/Ant v1.9.5/ADT v23.0.6/AndroidStudio v1.3.1&lt;/li&gt;
&lt;li&gt;注意：此教程与Cocos2d-x版本关系极大，不保证其他版本的Cocos2d-x可以正常应用此教程，但是原理都是一样的。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;从Cocos2d-x v3.4开始，考虑到维护成本，build_native.py脚本不再直接调用ndk-build，而是调用Cocos Console. 具体PR可见：&lt;a href=&quot;https://github.com/cocos2d/cocos2d-x/commit/a1e8dec3840b3042054f04b3197da81412b29cae&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Github&lt;/a&gt;。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;在Eclipse中编译so及apk&quot;&gt;&lt;a href=&quot;#在Eclipse中编译so及apk&quot; class=&quot;headerlink&quot; title=&quot;在Eclipse中编译so及apk&quot;&gt;&lt;/a&gt;在Eclipse中编译so及apk&lt;/h3&gt;&lt;h4 id=&quot;使用build-native-py脚本编译&quot;&gt;&lt;a href=&quot;#使用build-native-py脚本编译&quot; class=&quot;headerlink&quot; title=&quot;使用build_native.py脚本编译&quot;&gt;&lt;/a&gt;使用build_native.py脚本编译&lt;/h4&gt;&lt;p&gt;这一种方式是会直接调用Cocos Console的，所以会直接打包成apk。&lt;/p&gt;
&lt;h5 id=&quot;导入Cocos2d-x项目和libCocos2dx&quot;&gt;&lt;a href=&quot;#导入Cocos2d-x项目和libCocos2dx&quot; class=&quot;headerlink&quot; title=&quot;导入Cocos2d-x项目和libCocos2dx&quot;&gt;&lt;/a&gt;导入Cocos2d-x项目和libCocos2dx&lt;/h5&gt;&lt;h5 id=&quot;开启C-编译&quot;&gt;&lt;a href=&quot;#开启C-编译&quot; class=&quot;headerlink&quot; title=&quot;开启C++编译&quot;&gt;&lt;/a&gt;开启C++编译&lt;/h5&gt;&lt;p&gt;右键项目属性-&amp;gt;Builders-&amp;gt;勾选CDT Builder。&lt;/p&gt;
&lt;h5 id=&quot;C-C-Build-gt-Build-command&quot;&gt;&lt;a href=&quot;#C-C-Build-gt-Build-command&quot; class=&quot;headerlink&quot; title=&quot;C/C++ Build-&amp;gt;Build command&quot;&gt;&lt;/a&gt;C/C++ Build-&amp;gt;Build command&lt;/h5&gt;&lt;p&gt;默认是&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;python ${ProjDirPath}/build_native.py -b release
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;修改为&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;python ${ProjDirPath}/build_native.py -b debug
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;原因是采用release模式要求输入keystore，如果已经设置了keystore，这一步可以跳过，否则在最终打包apk会提示错误，因为这个模式下（非终端）无法输入keytore，注意这里的模式不是-m(mode)，是-b(build)。（如何设置keystore？往下看）&lt;/p&gt;
&lt;h5 id=&quot;设置环境变量&quot;&gt;&lt;a href=&quot;#设置环境变量&quot; class=&quot;headerlink&quot; title=&quot;设置环境变量&quot;&gt;&lt;/a&gt;设置环境变量&lt;/h5&gt;&lt;p&gt;因为Cocos console需要一些环境变量，而在Eclipse环境下无法读取到zsh或者bash的配置，所以需要在Eclipse的环境里设置这些变量：C/C++-&amp;gt;Environment&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;PATH -&amp;gt; ${PATH}:/Users/Jacky/Cocos2d-x/v3/tools/cocos2d-console/bin/
ANT_ROOT -&amp;gt; /usr/local/Cellar/ant/1.9.5/libexec/bin
ANDROID_SDK_ROOT -&amp;gt; /Users/Jacky/AndroidDev/sdk
NDK_ROOT -&amp;gt; /Users/Jacky/AndroidDev/android-ndk-r10c（如果你设置了全局的NDK_ROOT，你会发现这个变量已经存在）
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这些实际上也是第一次配置Cocos Console需要设置的值。&lt;/p&gt;
&lt;h5 id=&quot;如何设置keystore&quot;&gt;&lt;a href=&quot;#如何设置keystore&quot; class=&quot;headerlink&quot; title=&quot;如何设置keystore&quot;&gt;&lt;/a&gt;如何设置keystore&lt;/h5&gt;&lt;p&gt;在proj.android/ant.properties文件末尾，添加keystore信息&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;key.alias.password=xxx
key.store.password=yyy
key.store=/Users/Jacky/AndroidDev/cocos.keystore
key.alias=zzz
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&quot;使用ndk-build编译&quot;&gt;&lt;a href=&quot;#使用ndk-build编译&quot; class=&quot;headerlink&quot; title=&quot;使用ndk-build编译&quot;&gt;&lt;/a&gt;使用ndk-build编译&lt;/h4&gt;&lt;h5 id=&quot;导入Cocos2d-x项目和libCocos2dx-1&quot;&gt;&lt;a href=&quot;#导入Cocos2d-x项目和libCocos2dx-1&quot; class=&quot;headerlink&quot; title=&quot;导入Cocos2d-x项目和libCocos2dx&quot;&gt;&lt;/a&gt;导入Cocos2d-x项目和libCocos2dx&lt;/h5&gt;&lt;h5 id=&quot;开启C-编译-1&quot;&gt;&lt;a href=&quot;#开启C-编译-1&quot; class=&quot;headerlink&quot; title=&quot;开启C++编译&quot;&gt;&lt;/a&gt;开启C++编译&lt;/h5&gt;&lt;p&gt;右键项目属性-&amp;gt;Builders-&amp;gt;勾选CDT Builder。&lt;/p&gt;
&lt;h5 id=&quot;C-C-Build-gt-Build-command-1&quot;&gt;&lt;a href=&quot;#C-C-Build-gt-Build-command-1&quot; class=&quot;headerlink&quot; title=&quot;C/C++ Build-&amp;gt;Build command&quot;&gt;&lt;/a&gt;C/C++ Build-&amp;gt;Build command&lt;/h5&gt;&lt;p&gt;默认是&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;python ${ProjDirPath}/build_native.py -b release
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;修改为&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;/Users/Jacky/AndroidDev/android-ndk-r10c/ndk-build -j4
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;-j4表示编译使用的CPU核数，我这里是4核，Cocos console会自动获取CPU核数并且全开，这里需要你手动指定。&lt;/p&gt;
&lt;h5 id=&quot;指定NDK-Tool-Chain版本&quot;&gt;&lt;a href=&quot;#指定NDK-Tool-Chain版本&quot; class=&quot;headerlink&quot; title=&quot;指定NDK Tool Chain版本&quot;&gt;&lt;/a&gt;指定NDK Tool Chain版本&lt;/h5&gt;&lt;p&gt;设置NDK Tool Chain版本，proj.android/jni/Application.mk文件末尾，指定NDK Tool Chain版本。因为一些关键字如override是C++11新增的特性，GCC从4.7版本开始支持此特性。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;NDK_TOOLCHAIN_VERSION = 4.9
&lt;/code&gt;&lt;/pre&gt;&lt;h5 id=&quot;拷贝资源&quot;&gt;&lt;a href=&quot;#拷贝资源&quot; class=&quot;headerlink&quot; title=&quot;拷贝资源&quot;&gt;&lt;/a&gt;拷贝资源&lt;/h5&gt;&lt;p&gt;手动拷贝Resources目录下资源到proj.android/assets/目录下。&lt;/p&gt;
&lt;h4 id=&quot;总结&quot;&gt;&lt;a href=&quot;#总结&quot; class=&quot;headerlink&quot; title=&quot;总结&quot;&gt;&lt;/a&gt;总结&lt;/h4&gt;&lt;p&gt;这里介绍了2种在Eclipse中交叉编译的方式，第一种方式调用的是Cocos Console，它主要完成三件事：交叉编译，拷贝资源和打包apk。第二种方式调用的是ndk-build，它只做了交叉编译这件事，所以需要自己手动拷贝资源，打包apk。当然第一种方式交叉编译最终调用的也是ndk-build，因此以上两种方式也可以在终端运行。&lt;/p&gt;
&lt;h3 id=&quot;在Android-Studio中编译so及apk&quot;&gt;&lt;a href=&quot;#在Android-Studio中编译so及apk&quot; class=&quot;headerlink&quot; title=&quot;在Android Studio中编译so及apk&quot;&gt;&lt;/a&gt;在Android Studio中编译so及apk&lt;/h3&gt;&lt;h4 id=&quot;导入Cocos2d-x项目&quot;&gt;&lt;a href=&quot;#导入Cocos2d-x项目&quot; class=&quot;headerlink&quot; title=&quot;导入Cocos2d-x项目&quot;&gt;&lt;/a&gt;导入Cocos2d-x项目&lt;/h4&gt;&lt;h4 id=&quot;修改proj-android-studio-app-build-gradle&quot;&gt;&lt;a href=&quot;#修改proj-android-studio-app-build-gradle&quot; class=&quot;headerlink&quot; title=&quot;修改proj.android-studio/app/build.gradle&quot;&gt;&lt;/a&gt;修改proj.android-studio/app/build.gradle&lt;/h4&gt;&lt;p&gt;在文件开头导入&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;import org.apache.tools.ant.taskdefs.condition.Os
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;在文件末尾加入&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;android&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   //ndk-build&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   task ndkBuild(type: Exec,  dependsOn: &amp;apos;copyRes&amp;apos;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       workingDir file(&amp;apos;jni&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       commandLine getNdkBuildCmd(), &amp;apos;-j4&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   tasks.withType(JavaCompile) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       compileTask -&amp;gt; compileTask.dependsOn ndkBuild&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   //ndk-clean&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   task ndkClean(type: Exec) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       workingDir file(&amp;apos;jni&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       commandLine getNdkBuildCmd(), &amp;apos;clean&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   clean.dependsOn ndkClean&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   //copy resource&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   task createDir&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       doLast&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           delete &amp;apos;assets&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           mkdir(&amp;apos;assets&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   task copyRes(type: Copy, dependsOn: &amp;apos;createDir&amp;apos;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       from &amp;apos;../../Resources&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       into &amp;apos;assets&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;def getNdkDir() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (System.env.ANDROID_NDK_ROOT != null)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return System.env.ANDROID_NDK_ROOT&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Properties properties = new Properties()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    properties.load(project.rootProject.file(&amp;apos;local.properties&amp;apos;).newDataInputStream())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def ndkdir = properties.getProperty(&amp;apos;ndk.dir&amp;apos;, null)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (ndkdir == null)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        throw new GradleException(&amp;quot;NDK location not found. Define location with ndk.dir in the local.properties file or with an ANDROID_NDK_ROOT environment variable.&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return ndkdir&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;def getNdkBuildCmd() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def ndkbuild = getNdkDir() + &amp;quot;/ndk-build&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (Os.isFamily(Os.FAMILY_WINDOWS))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ndkbuild += &amp;quot;.cmd&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return ndkbuild&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;添加NDK路径&quot;&gt;&lt;a href=&quot;#添加NDK路径&quot; class=&quot;headerlink&quot; title=&quot;添加NDK路径&quot;&gt;&lt;/a&gt;添加NDK路径&lt;/h4&gt;&lt;p&gt;在proj.android-studio/local.properties末尾加入ndk路径。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ndk.dir=/Users/Jacky/AndroidDev/android-ndk-r10c
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&quot;指定NDK-ToolChain版本&quot;&gt;&lt;a href=&quot;#指定NDK-ToolChain版本&quot; class=&quot;headerlink&quot; title=&quot;指定NDK ToolChain版本&quot;&gt;&lt;/a&gt;指定NDK ToolChain版本&lt;/h4&gt;&lt;p&gt;在proj.android-studio/app/jni/Application.mk末尾指定NDK ToolChain版本。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;NDK_TOOLCHAIN_VERSION = 4.9
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;使用Cocos-Console在编译过程中插入自定义步骤&quot;&gt;&lt;a href=&quot;#使用Cocos-Console在编译过程中插入自定义步骤&quot; class=&quot;headerlink&quot; title=&quot;使用Cocos Console在编译过程中插入自定义步骤&quot;&gt;&lt;/a&gt;使用Cocos Console在编译过程中插入自定义步骤&lt;/h3&gt;&lt;p&gt;如果希望在编译过程中插入一些自定义的脚本，比如拷贝一些第三方库的依赖，那可以采用如下方式进行设置。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.cocos2d-x.org/wiki/Cocos2d-console#Add-custom-steps-during-compiling&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.cocos2d-x.org/wiki/Cocos2d-console#Add-custom-steps-during-compiling&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;不想看英文版，也可以看中文的&lt;a href=&quot;http://www.cocoachina.com/bbs/read.php?tid-319299.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.cocoachina.com/bbs/read.php?tid-319299.html&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;常见问题&quot;&gt;&lt;a href=&quot;#常见问题&quot; class=&quot;headerlink&quot; title=&quot;常见问题&quot;&gt;&lt;/a&gt;常见问题&lt;/h3&gt;&lt;p&gt;Q.Eclipse出现An internal error occurred during: “C/C++ Indexer”. java.lang.NullPointerException或者Serializing CDT project settings错误？&lt;/p&gt;
&lt;p&gt;A.先关闭Eclipse，删除proj.android/.cproject文件中的类似如下内容后重启Eclipse。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;cconfiguration id=&amp;quot;0.1230402123.1377291156&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;storageModule buildSystemId=&amp;quot;org.eclipse.cdt.managedbuilder.core.configurationDataProvider&amp;quot; id=&amp;quot;0.1230402123.1377291156&amp;quot; moduleId=&amp;quot;org.eclipse.cdt.core.settings&amp;quot; name=&amp;quot;Debug&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;externalSettings/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;extensions&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;lt;extension id=&amp;quot;org.eclipse.cdt.core.VCErrorParser&amp;quot; point=&amp;quot;org.eclipse.cdt.core.ErrorParser&amp;quot;/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;lt;extension id=&amp;quot;org.eclipse.cdt.core.GmakeErrorParser&amp;quot; point=&amp;quot;org.eclipse.cdt.core.ErrorParser&amp;quot;/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;lt;extension id=&amp;quot;org.eclipse.cdt.core.CWDLocator&amp;quot; point=&amp;quot;org.eclipse.cdt.core.ErrorParser&amp;quot;/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;lt;extension id=&amp;quot;org.eclipse.cdt.core.GCCErrorParser&amp;quot; point=&amp;quot;org.eclipse.cdt.core.ErrorParser&amp;quot;/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;lt;extension id=&amp;quot;org.eclipse.cdt.core.GASErrorParser&amp;quot; point=&amp;quot;org.eclipse.cdt.core.ErrorParser&amp;quot;/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;lt;extension id=&amp;quot;org.eclipse.cdt.core.GLDErrorParser&amp;quot; point=&amp;quot;org.eclipse.cdt.core.ErrorParser&amp;quot;/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;/extensions&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;/storageModule&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;storageModule moduleId=&amp;quot;org.eclipse.cdt.core.externalSettings&amp;quot;/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/cconfiguration&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果还不行，建个新项目，把proj.android/.cproject和proj.android/.project替换到项目中，版本控制回退这两个文件也行，再次进入需要重新配置。&lt;/p&gt;
&lt;p&gt;参考&lt;a href=&quot;http://http//stackoverflow.com/questions/25384264/after-import-an-cocos2d-project-eclipse-raise-an-two-weird-errors-android-lib&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;StackOverflow&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;Q.即使没有更改C++源码，ndk-build每一次都重新进行编译？&lt;/p&gt;
&lt;p&gt;A.这个问题应该是存在于旧版本（r8c就有这个bug），新的ndk貌似还没遇到这样的问题，本教程应该不会涉及这个问题。&lt;/p&gt;
&lt;p&gt;参考&lt;a href=&quot;http://http//stackoverflow.com/questions/13885400/every-ndk-build-is-a-full-rebuild&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;StackOverflow&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;Q.要进行ndk-gbd调试发现没有生成gdbserver及gdb.setup怎么办？&lt;/p&gt;
&lt;p&gt;A.在使用ndk-buld的时候加入 NDK_DEBUG=1，即&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ndk-build -j4 NDK_DEBUG=1
&lt;/code&gt;&lt;/pre&gt;</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;概况&quot;&gt;&lt;a href=&quot;#概况&quot; class=&quot;headerlink&quot; title=&quot;概况&quot;&gt;&lt;/a&gt;概况&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;环境：Mac OSX/Cocos2d-x v3.7/NDK r10c/Ant v1.9.5/ADT v23.0.6/AndroidStudio v1.3.1&lt;/li&gt;
&lt;li&gt;注意：此教程与Cocos2d-x版本关系极大，不保证其他版本的Cocos2d-x可以正常应用此教程，但是原理都是一样的。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;从Cocos2d-x v3.4开始，考虑到维护成本，build_native.py脚本不再直接调用ndk-build，而是调用Cocos Console. 具体PR可见：&lt;a href=&quot;https://github.com/cocos2d/cocos2d-x/commit/a1e8dec3840b3042054f04b3197da81412b29cae&quot;&gt;Github&lt;/a&gt;。&lt;/p&gt;
    
    </summary>
    
      <category term="cocos2d-x" scheme="http://fusijie.github.io/categories/cocos2d-x/"/>
    
    
      <category term="单独编译" scheme="http://fusijie.github.io/tags/%E5%8D%95%E7%8B%AC%E7%BC%96%E8%AF%91/"/>
    
      <category term="so" scheme="http://fusijie.github.io/tags/so/"/>
    
      <category term="apk" scheme="http://fusijie.github.io/tags/apk/"/>
    
  </entry>
  
  <entry>
    <title>SpriteWithHue，通过修改色调实现资源复用</title>
    <link href="http://fusijie.github.io/2015/05/27/sprite-with-hue/"/>
    <id>http://fusijie.github.io/2015/05/27/sprite-with-hue/</id>
    <published>2015-05-27T12:12:05.000Z</published>
    <updated>2016-04-30T12:22:23.000Z</updated>
    
    <content type="html">&lt;p&gt;这个类主要实现的功能是对 cocos2d::Sprite 色调的修改，从而达到一套纹理可以重复利用的目的，特别对于一些只需在颜色上换装的游戏来说，真是大大的福利。&lt;/p&gt;
&lt;p&gt;这是我从 &lt;a href=&quot;https://github.com/alex314/CCSpriteWithHue&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CCSpriteWithHue Github&lt;/a&gt; 扒过来，从 Cocos2d-iphone 移植到 Cocos2d-x，并进行了适当的修改。&lt;/p&gt;
&lt;p&gt;感谢原作者 &lt;a href=&quot;https://github.com/alex314&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Alex314&lt;/a&gt;。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;实现的效果如图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/fusijie/SpriteWithHue/master/Images/effect.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;支持 Sprite 以及 Animtion 。使用的引擎版本是 Cocos2d-x v3.5 Final。&lt;/p&gt;
&lt;p&gt;测试例如图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/fusijie/SpriteWithHue/master/Images/SpriteWithHue.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/fusijie/SpriteWithHue/master/Images/SpriteWithHueAnimation.gif&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;使用方式很简单，和 cocos2d::Sprite 一样，只是多了一个 &lt;code&gt;setHue(float hue)&lt;/code&gt; 接口用于设置色调，范围处于 0~2π。&lt;/p&gt;
&lt;p&gt;示例代码：&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;auto&lt;/span&gt; alien = SpriteWithHue::create(&lt;span class=&quot;string&quot;&gt;&quot;alien.png&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;alien-&amp;gt;setPosition(Vec2(&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;alien-&amp;gt;setHue(M_PI);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;-&amp;gt;addChild(alien);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;实现以及测试例在：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/fusijie/SpriteWithHue&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/fusijie/SpriteWithHue&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;这个类主要实现的功能是对 cocos2d::Sprite 色调的修改，从而达到一套纹理可以重复利用的目的，特别对于一些只需在颜色上换装的游戏来说，真是大大的福利。&lt;/p&gt;
&lt;p&gt;这是我从 &lt;a href=&quot;https://github.com/alex314/CCSpriteWithHue&quot;&gt;CCSpriteWithHue Github&lt;/a&gt; 扒过来，从 Cocos2d-iphone 移植到 Cocos2d-x，并进行了适当的修改。&lt;/p&gt;
&lt;p&gt;感谢原作者 &lt;a href=&quot;https://github.com/alex314&quot;&gt;Alex314&lt;/a&gt;。&lt;/p&gt;
    
    </summary>
    
      <category term="cocos2d-x" scheme="http://fusijie.github.io/categories/cocos2d-x/"/>
    
    
      <category term="opengl" scheme="http://fusijie.github.io/tags/opengl/"/>
    
      <category term="shader" scheme="http://fusijie.github.io/tags/shader/"/>
    
      <category term="SpriteWithHue" scheme="http://fusijie.github.io/tags/SpriteWithHue/"/>
    
      <category term="色调" scheme="http://fusijie.github.io/tags/%E8%89%B2%E8%B0%83/"/>
    
  </entry>
  
  <entry>
    <title>(译)第三部分：什么是rebase?</title>
    <link href="http://fusijie.github.io/2014/11/18/what-is-a-rebase/"/>
    <id>http://fusijie.github.io/2014/11/18/what-is-a-rebase/</id>
    <published>2014-11-18T15:44:00.000Z</published>
    <updated>2016-04-24T14:44:18.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;strong&gt;内容提要&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第一部分：&lt;a href=&quot;http://fusijie.github.io/2014/10/08/what-is-a-commit-hash/&quot;&gt;commit hash是什么？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第二部分：&lt;a href=&quot;http://fusijie.github.io/2014/10/15/what-is-a-merge/&quot;&gt;merge是什么？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第三部分：rebase是什么？&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在&lt;a href=&quot;http://fusijie.github.io/2014/10/08/what-is-a-commit-hash/&quot;&gt;第一部分&lt;/a&gt;中，我们讨论了什么是commit hash，其中一个很重要的特点就是commit无法被修改。hash值是根据存储在commit中的信息生成的，所以修改一个commit或者commit hash，你必须要创建一个全新的commit。我们还讨论了每一个commit存储了它的前一个commit的hash值。我们所没有讨论的是它对我们Git历史的影响。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;实际上，commit hash是基于他们本身存储的信息生成的，而这些信息其中就包含了前一个commit的hash值，所以想修改你的commit历史基本上是不可能的。每一个commit就像是链条上的一环，紧紧连接着上一环。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/cXvBMnk.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;如果你有如上图一样的一条金属链，在不打断他们的前提下是不可能把前一环和后一环连接起来的。然而，在Git环境中这将会更糟。这样的类比在这里是不靠谱的，因为在一条金属链上你可以焊接一个新环来把前一环和后一环重新连接起来。但是在Git中，你无法做到这一点。&lt;/p&gt;
&lt;p&gt;如果你想要在commit历史的中间删除某一个commit，那后一个commit将会指向一个不存在的commit hash。因为你无法在不改变hash的情况下来修改commit，所以你不能简单地生成一个新的commit来引用前一个commit，而后一个commit仍然引用了最原始的commit hash。&lt;/p&gt;
&lt;p&gt;如果你改变了一个commit的某个属性，那生成的hash值将不再一样，后一个commit也不会引用到新的commit。结果就是你不得不去修改后一个commit来引用到新的commit hash，这同样会引起commit hash的改变，就这样一路下去直到链条的末尾。&lt;/p&gt;
&lt;p&gt;这时候轮到&lt;a href=&quot;http://git-scm.com/docs/git-rebase&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;rebase&lt;/a&gt;上场了。如果你还记得&lt;a href=&quot;http://fusijie.github.io/2014/10/15/what-is-a-merge/&quot;&gt;第二部分&lt;/a&gt;，当我们将&lt;code&gt;feature1&lt;/code&gt;分支合并到&lt;code&gt;master&lt;/code&gt;分支后，有一副图展示了各个commit之间的关系。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/S0av3NM.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;Merge可以很好地工作，但是伴随着所有的fork和横纵交叉的commit关系，Git仓库的图形很快就会失控。下图只是一个我平时工作的Git仓库的小片段。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/z28Y4sX.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;如果你使用一个Git GUI软件，很有可能你也见识过类似的东西。Merge是在不同分支之间移动差异的最简单的方式，因为它避免了破坏commit历史和所引发的蛋疼。然而，一旦你对rebase的工作方式有了比较深刻的理解，你将会从中收益。举个栗子，如果我们在demo仓库中rebase &lt;code&gt;feature1&lt;/code&gt;分支到&lt;code&gt;master&lt;/code&gt;分支(译者注：这句话的意思是切换到&lt;code&gt;feature1&lt;/code&gt;分支，执行&lt;code&gt;git rebase master&lt;/code&gt;命令)，将会得到一个非常漂亮干净的历史，如图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/pBvTytu.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;注意到没？现在的历史是一条直线了。Git到底是怎么做到的呢？如果你还记得的话，我们的&lt;code&gt;Commit 3&lt;/code&gt;和&lt;code&gt;Commit 4&lt;/code&gt;是共享&lt;code&gt;Commit 2&lt;/code&gt;作为其共同父节点的，&lt;code&gt;Commit 3&lt;/code&gt;引用了&lt;code&gt;Commit 2&lt;/code&gt;作为其前一个commit。现在你也许会疑惑为什么看起来&lt;code&gt;Commit 3&lt;/code&gt;像是将&lt;code&gt;Commit 4&lt;/code&gt;作为其前一个commit。&lt;/p&gt;
&lt;p&gt;还记得我刚说过的，如果想从中间打断链条，你必须从这个点上开始重现创建其之后的commit，直到结尾。没错，这实际上就是rebase做的事情。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/1nPXWq1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;仔细看的话，你会发现&lt;code&gt;Commit 3&lt;/code&gt;，&lt;code&gt;Commit 5&lt;/code&gt;，&lt;code&gt;Commit 6&lt;/code&gt;的commit hash已经全部改变了。这3个commit是在&lt;code&gt;feature 1&lt;/code&gt;分支上提交的。通过将&lt;code&gt;feature 1&lt;/code&gt;分支rebase操作到&lt;code&gt;master&lt;/code&gt;分支上，从&lt;code&gt;master&lt;/code&gt;分支分叉出来的的第一个commit开始，git重写了&lt;code&gt;feature 1&lt;/code&gt;所有的commit，直到结束。它将分之上的每一个commit之间的差异存储在一个临时文件中，然后开始重写我们的分支历史。而这一次，分支是从&lt;code&gt;master&lt;/code&gt;，&lt;code&gt;Commit 4&lt;/code&gt;开始的。&lt;/p&gt;
&lt;p&gt;Git给分支上的每一个commit创建了一个新的commit，当然跟着修改的还有commit hash值。当它创建新的commit的时候，第一个commit被改为引用到&lt;code&gt;master&lt;/code&gt;分支的最新的commit（&lt;code&gt;Commit 4&lt;/code&gt;），而不是原来的（&lt;code&gt;Commit 2&lt;/code&gt;）了。这个重新提交你的变更作为新的commit的流程被称为“你的commits在&lt;code&gt;master&lt;/code&gt;分支上的重播”。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注意：不要让术语混淆。Rebase到&lt;code&gt;master&lt;/code&gt;分支不会修改&lt;code&gt;master&lt;/code&gt;分支本身，它的意思是你的分支commits将会紧跟着&lt;code&gt;master&lt;/code&gt;分支上最新的commits（译者注：这里的&lt;code&gt;你的分支&lt;/code&gt;指的是&lt;code&gt;feature 1&lt;/code&gt;）。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/pBvTytu.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;你会注意到上图中&lt;code&gt;master&lt;/code&gt;分支仍然指向&lt;code&gt;Commit 4&lt;/code&gt;，它的commit hash值是没有改变的。如果我们现在切换到&lt;code&gt;master&lt;/code&gt;分支，然后把&lt;code&gt;feature 1&lt;/code&gt;分支合并到&lt;code&gt;master&lt;/code&gt;分支，这将不会产生一个合并commit。这仅仅是一个快进提交，意思就是git将会简单地将指向&lt;code&gt;master&lt;/code&gt;分支的指针笔直地移到指向&lt;code&gt;feature 1&lt;/code&gt;分支的指针位置上。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/rLdDgw3.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;如果不把&lt;code&gt;feature 1&lt;/code&gt;分支合并到&lt;code&gt;master&lt;/code&gt;分支，我们还有更多的事要做，更多的commit要提交，我们可能会再fork一个仓库。我们的下一个&lt;code&gt;master&lt;/code&gt;分支的commit将会指向&lt;code&gt;Commit 4&lt;/code&gt;作为它的父节点，而&lt;code&gt;feature 1&lt;/code&gt;分支的第一个commit也是指向&lt;code&gt;Commit 4&lt;/code&gt;作为它的父节点。为了得到一条笔直的提交历史，我们需要再切换到&lt;code&gt;feature1&lt;/code&gt;分支，然后再次rebase到&lt;code&gt;master&lt;/code&gt;分支。这种情况很常出现，比如你在github上提交了一个pull request然后它过期了。如果项目的维护者没有合并你 的pull request，而是在这个项目上继续做一些其他工作，那么你的pull request就需要再来一次rebase操作以获取一个干净的git历史。把你做的工作rebase到原仓库分支上才可以让这个pull request能够在合并进去的时候采用简单的快进方式。接受一个pull request只是一个简单的合并。如果在提交pull request之前就rebase了你做的工作，那么这个merge就是一个快进方式的merge，这也能保证原仓库的干净。（译者注：这里的&lt;code&gt;干净&lt;/code&gt;指的是没有额外的合并信息。）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;危险！！！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这部分内容是对rebase的使用进行一些警告，主要还是在多人协作上需要注意。因为rebase是一种改写commit的操作，所以相对比较危险，作者给出的意见是：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Undoing a rebase is not easy, and often impossible so you really need to pay attention to what you’re doing. The benefits of rebasing are great, but not if you don’t know what you’re doing.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;撤销一个rebase操作不简单，而且经常是不可能的。你必须很注意自己在干什么。rebase让人受益，当时如果你不知道你在干什么的话，别用reabse。&lt;/p&gt;
&lt;p&gt;这部分内容不翻译了，有兴趣自己看原文吧。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;英文地址:&lt;a href=&quot;http://codetunnel.com/merge-vs-rebase-part-3-what-is-a-rebase/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://codetunnel.com/merge-vs-rebase-part-3-what-is-a-rebase/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;内容提要&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第一部分：&lt;a href=&quot;http://fusijie.github.io/2014/10/08/what-is-a-commit-hash/&quot;&gt;commit hash是什么？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第二部分：&lt;a href=&quot;http://fusijie.github.io/2014/10/15/what-is-a-merge/&quot;&gt;merge是什么？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第三部分：rebase是什么？&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在&lt;a href=&quot;http://fusijie.github.io/2014/10/08/what-is-a-commit-hash/&quot;&gt;第一部分&lt;/a&gt;中，我们讨论了什么是commit hash，其中一个很重要的特点就是commit无法被修改。hash值是根据存储在commit中的信息生成的，所以修改一个commit或者commit hash，你必须要创建一个全新的commit。我们还讨论了每一个commit存储了它的前一个commit的hash值。我们所没有讨论的是它对我们Git历史的影响。&lt;/p&gt;
    
    </summary>
    
      <category term="git" scheme="http://fusijie.github.io/categories/git/"/>
    
    
      <category term="rebase" scheme="http://fusijie.github.io/tags/rebase/"/>
    
  </entry>
  
  <entry>
    <title>(译)第二部分：什么是merge?</title>
    <link href="http://fusijie.github.io/2014/10/15/what-is-a-merge/"/>
    <id>http://fusijie.github.io/2014/10/15/what-is-a-merge/</id>
    <published>2014-10-14T16:03:00.000Z</published>
    <updated>2016-04-24T14:45:55.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;strong&gt;内容提要&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第一部分：&lt;a href=&quot;http://fusijie.github.io/2014/10/08/what-is-a-commit-hash/&quot;&gt;commit hash是什么？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第二部分：merge是什么？&lt;/li&gt;
&lt;li&gt;第三部分：&lt;a href=&quot;http://fusijie.github.io/2014/11/18/what-is-a-rebase/&quot;&gt;rebase是什么？&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在&lt;a href=&quot;http://fusijie.github.io/2014/10/08/what-is-a-commit-hash/&quot;&gt;第一部分&lt;/a&gt;我们创建了一个小的demo仓库，它拥有着一个&lt;code&gt;feature1&lt;/code&gt;分支，而且这个分支已经准备好要merge到&lt;code&gt;master&lt;/code&gt;分支中了。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/kxDIgKl.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;此时，我们可以选择merge或者rebase &lt;code&gt;feature1&lt;/code&gt;分支到&lt;code&gt;master&lt;/code&gt;分支。关于rebase将会在&lt;a href=&quot;http://fusijie.github.io/2014/11/18/what-is-a-rebase/&quot;&gt;第三部分&lt;/a&gt;进行介绍。现在我们来看一下，采用merge的方式到底发生了什么。把分支合并到一起是非常直接的。首先需要将切换到要合并进去的分支，在这里，因为我们要将&lt;code&gt;feature1&lt;/code&gt;合并到&lt;code&gt;master&lt;/code&gt;分支，所以需要切换到&lt;code&gt;master&lt;/code&gt;分支。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/S0av3NM.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;我切换到&lt;code&gt;master&lt;/code&gt;分支，然后将&lt;code&gt;feature1&lt;/code&gt;分支合并进去。回过头来再看一下这之中发生了什么，为什么Source Tree生成的图形是这个样子的。&lt;/p&gt;
&lt;p&gt;还记得&lt;a href=&quot;http://fusijie.github.io/2014/10/08/what-is-a-commit-hash/&quot;&gt;第一部分&lt;/a&gt;中&lt;code&gt;Commit 3&lt;/code&gt;和&lt;code&gt;Commit 4&lt;/code&gt;引用着同一个先前commit吗？&lt;code&gt;Commit 2&lt;/code&gt;是这两个commit共同的祖先，因为&lt;code&gt;Commit 3&lt;/code&gt;是在另一个分支上创建的，而&lt;code&gt;Commit 4&lt;/code&gt;是在&lt;code&gt;master&lt;/code&gt;分支上创建的，所以它完全不知道&lt;code&gt;Commit 3&lt;/code&gt;的存在。在&lt;code&gt;feature1&lt;/code&gt;上我们添加了更多的commit。&lt;code&gt;Commit 5&lt;/code&gt;直接引用了&lt;code&gt;Commit 3&lt;/code&gt;，因为&lt;code&gt;Commit 4&lt;/code&gt;只在&lt;code&gt;master&lt;/code&gt;分支上有效，&lt;code&gt;Commit 6&lt;/code&gt;直接引用了&lt;code&gt;Commit 5&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;当我们将&lt;code&gt;feature1&lt;/code&gt;合并到&lt;code&gt;master&lt;/code&gt;中，它并不是通过某种方式神奇地把这些commit都移到&lt;code&gt;master&lt;/code&gt;分支上。实际上，它创建了一个包含了&lt;code&gt;feature1&lt;/code&gt;分支上&lt;strong&gt;所有的&lt;/strong&gt;变更的全新commit。这个commit叫&lt;code&gt;Merge branch &amp;#39;feature1&amp;#39;&lt;/code&gt;，就像这样：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/RECAHy7.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;如果你注意到上图中的commit差异，就会看到我添加到&lt;code&gt;index.txt&lt;/code&gt;中二了吧唧的这几行。你应该会注意到这几行是通过各个commit分开地添加进去的。然而，现在你看到的是所有的这些改变都在单一的一个差异中。&lt;/p&gt;
&lt;p&gt;Git所做的只是把&lt;code&gt;feature1&lt;/code&gt;中所有的commit的所有差异汇聚到一个单一的commit中。这个新的commit干了一些我们之前没有讨论过的事。从上图可以看到它拥有2个祖先，也就拥有着从&lt;code&gt;Commit 4&lt;/code&gt;和&lt;code&gt;Commit 6&lt;/code&gt;过来的两条线。为什么呢？commit可以保存多个先前commit的索引。我现在才来讲这个话题是因为我不想太早地引起混淆。&lt;/p&gt;
&lt;p&gt;当一个commit被创建的时候，它所引用的之前commit数量可以是一个，多个，甚至没有。通常只有仓库中第一个commit才会没有先前commit，而merge commit一般都拥有超过一个的先前commit。&lt;/p&gt;
&lt;p&gt;如果你还记得&lt;a href=&quot;http://fusijie.github.io/2014/10/08/what-is-a-commit-hash/&quot;&gt;第一部分&lt;/a&gt;的话，分支，其实实际上只是一个指向一个指定commit的指针而已。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/S0av3NM.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;你可能会注意到&lt;code&gt;feature1&lt;/code&gt;仍然指向了&lt;code&gt;Commit 6&lt;/code&gt;，而&lt;code&gt;master&lt;/code&gt;分支指向了新的merge commit，很简单，因为我们是将&lt;code&gt;feature1&lt;/code&gt; 合并到&lt;code&gt;master&lt;/code&gt;。如果我们将分支切换到&lt;code&gt;feature1&lt;/code&gt;，然后再把&lt;code&gt;master&lt;/code&gt;合并进来，那么Git所做的就是一个&lt;em&gt;fast-forward&lt;/em&gt; marge（快进合并），这会把&lt;code&gt;feature1&lt;/code&gt;的指针指向最新的commit。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/Ggvb3UK.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;如果我们完全删除了&lt;code&gt;feature1&lt;/code&gt;分支，你可能会以为粉色的线消失，但是你错了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/rcSSPFa.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;记住，Source Tree和其他的Git可视工具是通过遍历你的commit，用索引的commit hash连接各个commit来生成图形的。分支只是一个指向指定commit的指针。当你从一个远程仓库拉取更新（pull）时，Git所做的是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1.下载所有你本地机器上没有的commit&lt;/li&gt;
&lt;li&gt;2.合并丢失的commit到你的本地仓库，或是通过一个merge commit，或是通过一个&lt;em&gt;fast-forward&lt;/em&gt; merge，前提是你在最后一次拉取更新后没有做任何的修改。&lt;/li&gt;
&lt;li&gt;3.把你的本地分支指向最新的commit。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果你曾经混淆过&lt;code&gt;master&lt;/code&gt;和&lt;code&gt;origin/master&lt;/code&gt;指针，那现在你应该知道它们是是啥了。&lt;code&gt;origin/master&lt;/code&gt;告诉你你的&lt;code&gt;origin&lt;/code&gt;远程&lt;code&gt;master&lt;/code&gt;分支指向哪。如果我给这个demo仓库添加了一个远程仓库叫&lt;code&gt;origin&lt;/code&gt;，然后在本地仓库上做了一些commit，Git的历史可能会像这样：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/hSizNJB.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;你会看到&lt;code&gt;master&lt;/code&gt;分支指向了最新的commit，而&lt;code&gt;origin/master&lt;/code&gt;指向了前一个merge commit。Source Tree甚至提示我们说有一个commit可以推送（push）到远程仓库。如果我们推送上去，Git将会上传丢失的commit，然后更新你的远程分支指针，此时&lt;code&gt;origin/master&lt;/code&gt;已经和你的本地&lt;code&gt;master&lt;/code&gt;分支指向了相同的commit。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/pmyLiFb.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;希望你现在对Git的合并功能有了更好的理解。跳到&lt;a href=&quot;&quot;&gt;第三部分&lt;/a&gt;让我们深究下rebase，看看它和merge有什么区别吧唧。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;英文地址:&lt;a href=&quot;http://codetunnel.com/merge-vs-rebase-part-2-what-is-a-merge/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://codetunnel.com/merge-vs-rebase-part-2-what-is-a-merge/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;内容提要&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第一部分：&lt;a href=&quot;http://fusijie.github.io/2014/10/08/what-is-a-commit-hash/&quot;&gt;commit hash是什么？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第二部分：merge是什么？&lt;/li&gt;
&lt;li&gt;第三部分：&lt;a href=&quot;http://fusijie.github.io/2014/11/18/what-is-a-rebase/&quot;&gt;rebase是什么？&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在&lt;a href=&quot;http://fusijie.github.io/2014/10/08/what-is-a-commit-hash/&quot;&gt;第一部分&lt;/a&gt;我们创建了一个小的demo仓库，它拥有着一个&lt;code&gt;feature1&lt;/code&gt;分支，而且这个分支已经准备好要merge到&lt;code&gt;master&lt;/code&gt;分支中了。&lt;/p&gt;
    
    </summary>
    
      <category term="git" scheme="http://fusijie.github.io/categories/git/"/>
    
    
      <category term="merge" scheme="http://fusijie.github.io/tags/merge/"/>
    
  </entry>
  
  <entry>
    <title>(译)第一部分：什么是commit hash?</title>
    <link href="http://fusijie.github.io/2014/10/08/what-is-a-commit-hash/"/>
    <id>http://fusijie.github.io/2014/10/08/what-is-a-commit-hash/</id>
    <published>2014-10-08T14:25:00.000Z</published>
    <updated>2016-04-24T14:46:06.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;strong&gt;内容提要&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第一部分：commit hash是什么？&lt;/li&gt;
&lt;li&gt;第二部分：&lt;a href=&quot;http://fusijie.github.io/2014/10/15/what-is-a-merge/&quot;&gt;merge是什么？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第三部分：&lt;a href=&quot;http://fusijie.github.io/2014/11/18/what-is-a-rebase/&quot;&gt;rebase是什么？&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;最近一段时间我在学习如何使用&lt;a href=&quot;http://git-scm.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Git&lt;/a&gt;，碰到的一个难点：如何区别&lt;a href=&quot;http://git-scm.com/docs/git-merge&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;merge&lt;/a&gt;和&lt;a href=&quot;http://git-scm.com/docs/git-rebase&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;rebase&lt;/a&gt;？大部分人都能理解merge的概念，但是对于rebase就不是很清楚了。在这三篇博文中我将尽可能用最简单的方式来解释它们的异同。不过在此之前，我们需要先了解一下什么是commit hash。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;如果你看过自己的commit历史，那么对于下面的内容肯定不会陌生：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;commit a9ca2c9f4e1e0061075aa47cbb97201a43b0f66f &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Author: Alex Ford &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Date: Mon Sep 8 6:49:17 2014&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Initial commit.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;你也许会认为这个由字母和数字组成的长长的字符串是一个单独commit的唯一的ID。虽然你是对的，但是你可能不知道它是一个&lt;a href=&quot;http://en.wikipedia.org/wiki/SHA-1&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SHA-1&lt;/a&gt;生成的哈希码，用于表示一个git commit对象。如果不去深入理解git &lt;a href=&quot;http://git-scm.com/book/en/Git-Internals-Git-Objects#Commit-Objects&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;commit object&lt;/a&gt;，那顶多就只知道这是一个基于它所表示的信息直接生成的一个很大的加密字符串。改变一个commit hash的唯一方式就是改变commit的细节，本质上来说，其实是生成了一个全新的commit对象。&lt;/p&gt;
&lt;p&gt;除了一些明显的信息，比如commit的作者，时间，存储的数据，commit通常还包含了在它之前的一个commit的hash，这正是你的commit历史产生的原因。每一个commit都知道紧跟它之前的commit hash。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/mljhFlh.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;上图可以看到我的&lt;a href=&quot;https://www.atlassian.com/software/sourcetree/overview&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SourceTree&lt;/a&gt;窗口，打开了一个我创建的demo仓库。我做了3次commit。SourceTree相当智能，它可以读取仓库中的每一个commit，然后用图形的方式展现出commit历史。可以看到，&lt;code&gt;Commit 2&lt;/code&gt;直接引用了&lt;code&gt;Commit 1&lt;/code&gt;，而&lt;code&gt;Commit 1&lt;/code&gt;直接引用了&lt;code&gt;Commit 0&lt;/code&gt;。需要注意的是，在这里，我直接使用Commit字样作为commit描述，为的是尽可能简单地谈论这个话题。实际上，每一个commit信息都应该正确地描述它们所做的改变。&lt;/p&gt;
&lt;p&gt;因为我的demo仓库master分支上只包含了这3个commit，所以SourceTree的图形从头到尾就是一条简单直线。好，现在我们就做点稍微复杂一点的事情，为了一个新的功能，我们需要创建一个独立的分支。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/S5o9qWL.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;从上图可以看到我创建了一个叫&lt;code&gt;feature1&lt;/code&gt;的分支，但是图形仍然是一样的。这是因为在创建完新的分支后，我并没有进行任何新的commit。分支实际上只是指向一个特殊commit的指针。现在，&lt;code&gt;master&lt;/code&gt;和&lt;code&gt;feature1&lt;/code&gt;都指向了同一个commit。好了，我们往&lt;code&gt;feature1&lt;/code&gt;分支添加一个新的commit&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/qjIWl7F.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;可以看到，我们的&lt;code&gt;feature1&lt;/code&gt;分支移动了它的指针来指向一个新的commit，&lt;code&gt;Commit 3&lt;/code&gt;。你可以看到，我们的图形&lt;em&gt;仍然&lt;/em&gt;是一条简单的直线。这是因为到目前为止，仅有4个commit，而每一个commit都是引用了紧跟它的前一个commit。如果我现在将&lt;code&gt;feature1&lt;/code&gt;合并到&lt;code&gt;master&lt;/code&gt;，只会发生一件事，就是&lt;code&gt;master&lt;/code&gt;分支会直接跳到和&lt;code&gt;feature1&lt;/code&gt;指向的相同commit，也就是&lt;code&gt;Commit 3&lt;/code&gt;。这个叫做&lt;em&gt;fast-forward&lt;/em&gt;合并（快进合并），因为它只是简单地将&lt;code&gt;master&lt;/code&gt;分支的移动到指向最新的commit。&lt;/p&gt;
&lt;p&gt;OK，当我们兴高采烈地在&lt;code&gt;feature1&lt;/code&gt;上赶工，突然老板一个电话说一个新的Bug需要被马上解决，这是重中之重。这需要暂停&lt;code&gt;feature1&lt;/code&gt;上的工作，然后马上在&lt;code&gt;master&lt;/code&gt;分支上修复bug并提交。这个时候，我们不得不切换到&lt;code&gt;master&lt;/code&gt;分支，然后进行一个commit。如果bug很大，可能得考虑是否要创建另一个分支，然后在这个分支上进行多个commit，现在假装bug很小，只要一个commit就能搞定。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/8MFZLBi.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;好了，现在看起来就有点不一样了，请注意上图的图形，&lt;code&gt;feature1&lt;/code&gt;分支上的&lt;code&gt;Commit 3&lt;/code&gt;在自己封闭的路径上了。原因很简单，&lt;code&gt;Commit 4&lt;/code&gt;和&lt;code&gt;Commit 3&lt;/code&gt;有相同的祖先。还记得commit是如何存储紧跟它之前的commit吗？当切换到&lt;code&gt;master&lt;/code&gt;分支的时候，我们将会返回到&lt;code&gt;Commit 2&lt;/code&gt;，因为&lt;code&gt;Commit 3&lt;/code&gt;只由&lt;code&gt;feature1&lt;/code&gt;分支指针引用。而&lt;code&gt;master&lt;/code&gt;分支指针仍然指向&lt;code&gt;Commit 2&lt;/code&gt;。因为我们的修复commit（&lt;code&gt;Commit 4&lt;/code&gt;）将&lt;code&gt;Commit 2&lt;/code&gt;视为它的前一个commit。&lt;/p&gt;
&lt;p&gt;现在的图形告诉我们，&lt;code&gt;Commit 4&lt;/code&gt;和&lt;code&gt;Commit 3&lt;/code&gt;同时都引用了&lt;code&gt;Commit 2&lt;/code&gt;作为他的前一个commit。在这种情况下，可以将&lt;code&gt;Commit 2&lt;/code&gt;视为&lt;code&gt;Commit 3&lt;/code&gt;和&lt;code&gt;Commit 4&lt;/code&gt;共有的祖先。现在我们的修复已经被提交了，所以可以回到&lt;code&gt;feature1&lt;/code&gt;分支继续工作了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/kxDIgKl.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;现在我在&lt;code&gt;feature1&lt;/code&gt;分支上创建了2个新的commit，&lt;code&gt;Commit 5&lt;/code&gt;和&lt;code&gt;Commit 6&lt;/code&gt;。新功能已经完成了，也是时候合并&lt;code&gt;feature1&lt;/code&gt;分支到&lt;code&gt;master&lt;/code&gt;分支中了。这时，我们可以选择merge &lt;code&gt;feature1&lt;/code&gt;分支到&lt;code&gt;master&lt;/code&gt;分支，也可以reabse &lt;code&gt;feature1&lt;/code&gt;分支到&lt;code&gt;master&lt;/code&gt;分支，让我们在&lt;a href=&quot;http://fusijie.github.io/2014/10/15/what-is-a-merge/&quot;&gt;第二部分&lt;/a&gt;中探究一下merge是什么？&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;英文地址:&lt;a href=&quot;http://codetunnel.com/merge-vs-rebase-part-1-what-is-a-commit-hash/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://codetunnel.com/merge-vs-rebase-part-1-what-is-a-commit-hash/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;内容提要&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第一部分：commit hash是什么？&lt;/li&gt;
&lt;li&gt;第二部分：&lt;a href=&quot;http://fusijie.github.io/2014/10/15/what-is-a-merge/&quot;&gt;merge是什么？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第三部分：&lt;a href=&quot;http://fusijie.github.io/2014/11/18/what-is-a-rebase/&quot;&gt;rebase是什么？&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;最近一段时间我在学习如何使用&lt;a href=&quot;http://git-scm.com/&quot;&gt;Git&lt;/a&gt;，碰到的一个难点：如何区别&lt;a href=&quot;http://git-scm.com/docs/git-merge&quot;&gt;merge&lt;/a&gt;和&lt;a href=&quot;http://git-scm.com/docs/git-rebase&quot;&gt;rebase&lt;/a&gt;？大部分人都能理解merge的概念，但是对于rebase就不是很清楚了。在这三篇博文中我将尽可能用最简单的方式来解释它们的异同。不过在此之前，我们需要先了解一下什么是commit hash。&lt;/p&gt;
    
    </summary>
    
      <category term="git" scheme="http://fusijie.github.io/categories/git/"/>
    
    
      <category term="commit hash" scheme="http://fusijie.github.io/tags/commit-hash/"/>
    
  </entry>
  
  <entry>
    <title>Smali和逆向分析</title>
    <link href="http://fusijie.github.io/2014/09/08/smali-introduction/"/>
    <id>http://fusijie.github.io/2014/09/08/smali-introduction/</id>
    <published>2014-09-08T12:37:00.000Z</published>
    <updated>2016-04-24T14:37:29.000Z</updated>
    
    <content type="html">&lt;p&gt;这篇文章其实2个月前就想写了，但并不好写，就懒得写了，所以拖到现在～其实接触smali这门语法是件蛮偶然的事，接触后发现，次奥，这货在某些领域太有用了，至于为什么我想看完这篇文章应该都明白了。&lt;/p&gt;
&lt;p&gt;我自己也只是接触了皮毛，大概用了2个礼拜多一点，也不是很系统的学习，写这篇的目的主要还是想把知道的东西记下来，以后好追溯。&lt;/p&gt;
&lt;h3 id=&quot;Smali简介&quot;&gt;&lt;a href=&quot;#Smali简介&quot; class=&quot;headerlink&quot; title=&quot;Smali简介&quot;&gt;&lt;/a&gt;Smali简介&lt;/h3&gt;&lt;p&gt;Smali是Dalvik的寄存器语言，它与Java的关系，简单理解就是汇编之于C。假如你对汇编有足够的驾驭能力，那你可以通过修改汇编代码来改变C/C++代码的走向。当然，学过汇编的都清楚，汇编比&lt;a href=&quot;http://www.muppetlabs.com/~breadbox/bf/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;BrainFuck&lt;/a&gt;还难学，更不用说去反编译修改了。&lt;/p&gt;
&lt;p&gt;但是Smali有一点不一样，就是它很简单，只有一点点的语法，只要你会java，了解Android的相关知识，那你完全可以通过修改Smali代码来反向修改java代码，虽然绕了一点，但是在某些情况下你不得不这么做。还好，Smali很简单。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;apktool&quot;&gt;&lt;a href=&quot;#apktool&quot; class=&quot;headerlink&quot; title=&quot;apktool&quot;&gt;&lt;/a&gt;apktool&lt;/h3&gt;&lt;p&gt;说了这么多，还没有说Smali哪来？没错。Smali代码是安卓APK反编译而来的，所以Smali文件和Java文件一一对应。获取Smali文件，我们需要下载一个辅助工具：&lt;a href=&quot;https://code.google.com/p/android-apktool/downloads/list&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ApkTool&lt;/a&gt;。apktool这个命令行工具如果详细使用功能参数是比较多的，但是这里我们只需要用到2个最基础的功能：&lt;/p&gt;
&lt;p&gt;一个是反编译decode：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;apktool d xxx.apk
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;另一个是打包build：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;apktool b
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这里要注意的是路径问题，apktool如果没有加入到环境变量中，记得cd到apktool的目录去使用它。另一个是打包，如果只是简单的使用参数b，那要求是要在反编译出来的项目目录下执行，而打包好的文件会保存在这个项目目录下的dist目录。&lt;/p&gt;
&lt;p&gt;这是一个HelloWorld的应用程序反编译和打包的目录结构：&lt;/p&gt;
&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;http://www-fusijie-com.qiniudn.com/smali_Screen%20Shot%202014-09-08%20at%209.42.35%20PM.png&quot; alt=&quot;&quot; border=&quot;0&quot; title=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;

&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;http://www-fusijie-com.qiniudn.com/smali_Screen%20Shot%202014-09-08%20at%209.43.37%20PM.png&quot; alt=&quot;&quot; border=&quot;0&quot; title=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;

&lt;h3 id=&quot;Smali语法&quot;&gt;&lt;a href=&quot;#Smali语法&quot; class=&quot;headerlink&quot; title=&quot;Smali语法&quot;&gt;&lt;/a&gt;Smali语法&lt;/h3&gt;&lt;p&gt;这里仍然以一个默认的HelloWorld的应用程序进行解释吧。新建一个HelloWorld安卓项目，在MainActivity中只保留onCreate函数。代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;figcaption&gt;&lt;span&gt;MainActivity.java&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; com.fusijie.helloworld;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; android.app.Activity;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; android.os.Bundle;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;MainActivity&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Activity&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Bundle savedInstanceState)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.onCreate(savedInstanceState);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	setContentView(R.layout.activity_main);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;反编译后的Smali文件如下：&lt;/p&gt;
&lt;figure class=&quot;highlight smali&quot;&gt;&lt;figcaption&gt;&lt;span&gt;MainActivity.smali&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;.class&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt; public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;Lcom/fusijie/helloworld/MainActivity;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;.super&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;Landroid/app/Activity;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;.source&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;MainActivity.java&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# direct methods&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;.method&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt; public&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt; constructor&lt;/span&gt; &amp;lt;init&amp;gt;()V&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;   .locals&lt;/span&gt; 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;   .prologue&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;   .line&lt;/span&gt; 14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt; invoke-direct &lt;/span&gt;&amp;#123;p0&amp;#125;, &lt;span class=&quot;class&quot;&gt;Landroid/app/Activity;&lt;/span&gt;-&amp;gt;&amp;lt;init&amp;gt;()V&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt; return-void&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;.end method&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# virtual methods&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;.method&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt; protected&lt;/span&gt; onCreate(&lt;span class=&quot;class&quot;&gt;Landroid/os/Bundle;&lt;/span&gt;)V&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;   .locals&lt;/span&gt; 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;   .parameter&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;savedInstanceState&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;   .prologue&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;   .line&lt;/span&gt; 18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt; invoke-super &lt;/span&gt;&amp;#123;p0, p1&amp;#125;, &lt;span class=&quot;class&quot;&gt;Landroid/app/Activity;&lt;/span&gt;-&amp;gt;onCreate(&lt;span class=&quot;class&quot;&gt;Landroid/os/Bundle;&lt;/span&gt;)V&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;   .line&lt;/span&gt; 19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt; const/high16 &lt;/span&gt;v0, 0x7f03&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt; invoke-virtual &lt;/span&gt;&amp;#123;p0, v0&amp;#125;, &lt;span class=&quot;class&quot;&gt;Lcom/fusijie/helloworld/MainActivity;&lt;/span&gt;-&amp;gt;setContentView(I)V&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;   .line&lt;/span&gt; 20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt; return-void&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;.end method&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;对比一下，可以比较清楚的看出来，smali代码其实就是对java代码一个翻译，只是没有java看起来那么简单，smali把很多应该复杂的东西还原成复杂的状态了。简单解释下这段代码。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;前三行指明了类名，父类名，和源文件名。&lt;/li&gt;
&lt;li&gt;类名以“L”开头相信熟悉Jni的童鞋都比较清楚。&lt;/li&gt;
&lt;li&gt;“#”是smali中的注释。&lt;/li&gt;
&lt;li&gt;“.method”和“.end method”类似于Java中的大括号，包含了方法的实现代码段。&lt;/li&gt;
&lt;li&gt;方法的括号后面指明了返回类型，这同样类似与Jni的调用。&lt;/li&gt;
&lt;li&gt;“.locals”指明了这个方法用到的寄存器数量，当然寄存器可以重复利用，从“V0”起算。&lt;/li&gt;
&lt;li&gt;“.prologue”指定了代码开始处。&lt;/li&gt;
&lt;li&gt;“.line”表明这是在java源码中的第几行，其实这个值无所谓是多少，可以任意修改，主要用于调试。&lt;/li&gt;
&lt;li&gt;“invoke-direct”这是对方法的调用，可以看到这里调用了是Android.app.Activity的init方法，这在java里是隐式调用的。&lt;/li&gt;
&lt;li&gt;“return-void”表明了返回类型，这和java不一样，即使没有返回值，也需要这样写。&lt;/li&gt;
&lt;li&gt;接下来是onCreate方法，“.parameter”指明了参数名，但是一般没有用，需要注意的是p0代表的是this，p1开始代表函数参数，静态函数没有this，所以从p0开始就代表参数。&lt;/li&gt;
&lt;li&gt;在实现里先是调用了父类的方法，然后再调用setContentView，注意这里给了一个传参。整形的传参，这个值是先赋给寄存器v0，然后再调用的使用传递进去的。smali中都是这么使用，所有的值必须通过寄存器来中转。这点和汇编很像。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对比了Java代码和Smali代码，可以很清楚的看到，原本只有几行的代码到了Smali，内容被大大扩充了。Smali还原了Java隐藏的东西，同时显式地指定了很多细节。这还只是个最基本的HelloWorld的onCreate函数，如果有内部类，还会分文件显示。&lt;/p&gt;
&lt;p&gt;这样看来，其实Smali只能说复杂，不能说难。我这里不打算把Smali的语法再贴一次，这里给出几个链接，算是总结的相对好一点的（其实我都没看到有系统总结的。。。如果你有好的资料，欢迎跟帖分享）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://liuzhichao.com/p/tag/smali&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Smali语法–数据类型、方法、字段和寄存器&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://book.2cto.com/201212/12468.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Android软件安全与逆向分析–Smali文件格式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.csdn.net/wdaming1986/article/details/8299996&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Smali–Dalvik虚拟机指令语言&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://bbs.pediy.com/showthread.php?t=151769&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;看雪论坛–关于Smali语法&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这里顺便提供2个利器：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://liuzhichao.com/p/1476.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Smali Sublime Text语法高亮插件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://code.google.com/p/dex2jar/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;dex2jar，配合Smali事半功倍&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;小试牛刀&quot;&gt;&lt;a href=&quot;#小试牛刀&quot; class=&quot;headerlink&quot; title=&quot;小试牛刀&quot;&gt;&lt;/a&gt;小试牛刀&lt;/h3&gt;&lt;p&gt;了解了Smali的基本语法，那我们要动手试一下，Smali能做什么？仍然以HelloWorld为例，假如我们没有Android项目的源代码，只有一个APK，给他加个新功能吧！&lt;/p&gt;
&lt;p&gt;这个功能很简单，只是在HelloWorld中输出一个“Hello, Smali”。&lt;/p&gt;
&lt;p&gt;(1)第一步还是先使用apktool来反编译HelloWorld.apk。&lt;/p&gt;
&lt;p&gt;(2)打开smali下的com/fusijie/helloworld/MainActivity.smali文件。&lt;/p&gt;
&lt;p&gt;(3)原本我们在Java中要写的代码是：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;figcaption&gt;&lt;span&gt;Toast&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Toast.makeText(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;Hello, Smali&quot;&lt;/span&gt;, Toast.LENGTH_LONG).show();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;翻译成Smali就是：&lt;/p&gt;
&lt;figure class=&quot;highlight smali&quot;&gt;&lt;figcaption&gt;&lt;span&gt;Toast&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;.line&lt;/span&gt; xx&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt; const-string &lt;/span&gt;v0, &lt;span class=&quot;string&quot;&gt;&quot;Hello, Smali&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt; const/4 &lt;/span&gt;v1, 0x1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt; invoke-static &lt;/span&gt;&amp;#123;p0, v0, v1&amp;#125;, &lt;span class=&quot;class&quot;&gt;Landroid/widget/Toast;&lt;/span&gt;-&amp;gt;makeText(&lt;span class=&quot;class&quot;&gt;Landroid/content/Context;&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;Ljava/lang/CharSequence;&lt;/span&gt;I)&lt;span class=&quot;class&quot;&gt;Landroid/widget/Toast;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt; move-result-object &lt;/span&gt;v0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt; invoke-virtual &lt;/span&gt;&amp;#123;v0&amp;#125;, &lt;span class=&quot;class&quot;&gt;Landroid/widget/Toast;&lt;/span&gt;-&amp;gt;show()V&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;(4)最后在插入Smali的时候，我们需要修改2个地方：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;“.locals 1”，因为本来只用到了v0，现在多用了一个v1，所以改为“.locals 2”。&lt;/li&gt;
&lt;li&gt;“.line xx” xx随意改为一个不重复的值即可。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(5)使用apktool打包成apk，因为打包完后原有的密钥会丢失，所以需要重新打上我们自己的密钥，可以参考&lt;a href=&quot;http://www.eoeandroid.com/forum.php?mod=viewthread&amp;amp;tid=300764&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;很早以前我写的一个帖子&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;(6)最后的效果是这样的。&lt;/p&gt;
&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;http://www-fusijie-com.qiniudn.com/smali_Screen%20Shot%202014-09-08%20at%2011.00.38%20PM.png&quot; alt=&quot;&quot; border=&quot;0&quot; title=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;

&lt;h3 id=&quot;干点坏事&quot;&gt;&lt;a href=&quot;#干点坏事&quot; class=&quot;headerlink&quot; title=&quot;干点坏事&quot;&gt;&lt;/a&gt;干点坏事&lt;/h3&gt;&lt;p&gt;从上面一个例子对Smali的用途就很清楚了，没错，Smali注入。现在常见的除了测试以外的用途，Smali注入明显是带有黑客性质的，小的如破解游戏，替换游戏广告，大的甚至利用漏洞去破解密码，偷窃个人资料，财产等等。对Smali，安卓逆向分析，安卓系统安全比较清楚的，这些事其实都不算事。&lt;/p&gt;
&lt;p&gt;我这里以一个实际上线的游戏破解为例，看看我们平时在写代码时要注意哪些问题，避免辛辛苦苦写游戏，却在帮人家数钱。这里的破解不是重点，反破解才是重点。&lt;/p&gt;
&lt;p&gt;以市场上很火的一款单机游戏《消灭小星星》为例，下载地址是：&lt;a href=&quot;http://apk.91.com/Soft/Android/com.brianbaek.popstar-340.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://apk.91.com/Soft/Android/com.brianbaek.popstar-340.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;相同的方法反编译，在/smali/com/zplay/android/sdk/pay/ZplayPay.smali文件的dopay函数开头，注入如下代码：&lt;/p&gt;
&lt;figure class=&quot;highlight smali&quot;&gt;&lt;figcaption&gt;&lt;span&gt;popstar_crack&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;const/4 v0, 0x1	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt; invoke-static &lt;/span&gt;&amp;#123;v0&amp;#125;, &lt;span class=&quot;class&quot;&gt;Lcom/zplay/iap/ZplayJNI;&lt;/span&gt;-&amp;gt;sendMessage(I)V&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   return-void&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;原理很简单，这个游戏使用了Zplay的支付系统，在Java层的处理了支付逻辑，如果觉得Smali读起来费劲，那么直接使用dex2jar就能很清楚的看到，支付提醒甚至是中文的。Java层处理完支付逻辑后会给C++层丢个消息，调用C++层的代码去处理游戏逻辑，比如成功支付，那么幸运星就会相应地增加。这里使用native方法进行处理。&lt;/p&gt;
&lt;p&gt;所以注入的代码是，一旦进入支付逻辑，直接返回成功，同时强制返回函数，这就实现了支付的破解。当然作为一个有节操，有逼格的游戏从业者，这里就不放出破解版了（不过说得也够明白了）。查找注入点这东西靠的是耐心，细心和运气。&lt;/p&gt;
&lt;p&gt;为了方便，一般会先用正常的java写一些调试类，然后反编译出静态的smali放入目标文件夹中以供调试使用。&lt;/p&gt;
&lt;p&gt;再放张图，星星用不完了：&lt;/p&gt;
&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;http://www-fusijie-com.qiniudn.com/smali_crack_popstar.jpg&quot; alt=&quot;&quot; border=&quot;0&quot; title=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;

&lt;h3 id=&quot;总结&quot;&gt;&lt;a href=&quot;#总结&quot; class=&quot;headerlink&quot; title=&quot;总结&quot;&gt;&lt;/a&gt;总结&lt;/h3&gt;&lt;p&gt;就像上面说的，Smali能做的不仅仅是这些。有兴趣的可以看看这篇文章&lt;a href=&quot;http://blog.csdn.net/hu3167343/article/details/36418063&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《支付宝钱包手势密码破解实战》&lt;/a&gt;，我没有去验证过真伪，但是如作者所描述的应该是可行无误。这里用到的一个更高级的功能是将支付宝的加密解密逻辑Smali的jar包导入自己新建的工程，进而直接在自己的程序中集成支付宝的加密解密功能。&lt;/p&gt;
&lt;p&gt;在逆向分析游戏的过程中，我也发现了几个重要的点能帮助开发者提高自己程序的安全性。&lt;/p&gt;
&lt;p&gt;首先，完全避免破解是不可能的，我们能做的工作就是尽最大可能去妨碍破解者破解游戏，提高破解成本。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一定要使用混淆。不单单是第三方SDK，你的代码也是。破解游戏很重要一点就是要抓住游戏的逻辑。代码混淆后，Smali更加晦涩难懂，逻辑也更难掌握。&lt;/li&gt;
&lt;li&gt;回到开头的话，解读汇编比解读Smali难度大的多得多。所以重要的逻辑可以放到C/C++层去处理就不要放在Java层上去处理。&lt;/li&gt;
&lt;li&gt;多用连续调用的方式。这样出来的效果是Java只有一行，Smali可能有好几十行，看着都蛋疼。当然这对熟练的破解老手无效～&lt;/li&gt;
&lt;li&gt;在一些关键的点上，比如支付，多绕一下。而不是像《消灭小星星》这样，直接在Java内用中文显示“支付成功”，同时去调用JNI方法。用dex2jar看一眼就暴露了。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;哈哈，总之，小心你的艳照。。。&lt;/p&gt;
&lt;p&gt;哇咔咔，竟然写了快4个小时～&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;这篇文章其实2个月前就想写了，但并不好写，就懒得写了，所以拖到现在～其实接触smali这门语法是件蛮偶然的事，接触后发现，次奥，这货在某些领域太有用了，至于为什么我想看完这篇文章应该都明白了。&lt;/p&gt;
&lt;p&gt;我自己也只是接触了皮毛，大概用了2个礼拜多一点，也不是很系统的学习，写这篇的目的主要还是想把知道的东西记下来，以后好追溯。&lt;/p&gt;
&lt;h3 id=&quot;Smali简介&quot;&gt;&lt;a href=&quot;#Smali简介&quot; class=&quot;headerlink&quot; title=&quot;Smali简介&quot;&gt;&lt;/a&gt;Smali简介&lt;/h3&gt;&lt;p&gt;Smali是Dalvik的寄存器语言，它与Java的关系，简单理解就是汇编之于C。假如你对汇编有足够的驾驭能力，那你可以通过修改汇编代码来改变C/C++代码的走向。当然，学过汇编的都清楚，汇编比&lt;a href=&quot;http://www.muppetlabs.com/~breadbox/bf/&quot;&gt;BrainFuck&lt;/a&gt;还难学，更不用说去反编译修改了。&lt;/p&gt;
&lt;p&gt;但是Smali有一点不一样，就是它很简单，只有一点点的语法，只要你会java，了解Android的相关知识，那你完全可以通过修改Smali代码来反向修改java代码，虽然绕了一点，但是在某些情况下你不得不这么做。还好，Smali很简单。&lt;/p&gt;
    
    </summary>
    
      <category term="Android" scheme="http://fusijie.github.io/categories/Android/"/>
    
    
      <category term="Smali" scheme="http://fusijie.github.io/tags/Smali/"/>
    
      <category term="游戏破解" scheme="http://fusijie.github.io/tags/%E6%B8%B8%E6%88%8F%E7%A0%B4%E8%A7%A3/"/>
    
      <category term="逆向分析" scheme="http://fusijie.github.io/tags/%E9%80%86%E5%90%91%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>【玩转cocos2d-x之四十二】Android JavaActivity 程序背景透明</title>
    <link href="http://fusijie.github.io/2014/09/05/play-cocos2dx-42/"/>
    <id>http://fusijie.github.io/2014/09/05/play-cocos2dx-42/</id>
    <published>2014-09-05T10:32:12.000Z</published>
    <updated>2016-04-30T10:13:26.000Z</updated>
    
    <content type="html">&lt;p&gt;之前发过一篇&lt;a href=&quot;http://www.cocoachina.com/bbs/read.php?tid=196780&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《如何在Cocos2d-x 3.0rc0中让程序背景透明》&lt;/a&gt;，但是由于3.0rc0后Cocos2d-x更改为Java Activity，而不再是Native Activity，使得这种方法失效。&lt;/p&gt;
&lt;p&gt;这里以最新的Cocos2d-x 3.2 release为例，介绍如何在Cocos2d-x中让程序背景透明。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;一样，先上图。&lt;/p&gt;
&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;http://cdn.cocimg.com/bbs/attachment/Fid_41/41_300874_9730e6a12007216.png&quot; alt=&quot;&quot; border=&quot;0&quot; title=&quot;CCAction&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;

&lt;p&gt;修改的东西不多。主要有3步。&lt;/p&gt;
&lt;p&gt;1.在AndroidManifest.xml中设置Activity背景透明&lt;/p&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;android:theme=&quot;@android:style/Theme.Translucent.NoTitleBar.Fullscreen&quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如图，&lt;/p&gt;
&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;http://cdn.cocimg.com/bbs/attachment/Fid_41/41_300874_85c2ef59f40166f.png&quot; alt=&quot;&quot; border=&quot;0&quot; title=&quot;CCAction&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;

&lt;p&gt;2.在libcocos2dx项目的org.cocos2dx.lib项目中的Cocos2dxActivity.java文件中，修改init()方法。&lt;br&gt;增加如下代码：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.mGLSurfaceView.setZOrderOnTop(&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.mGLSurfaceView.getHolder().setFormat(PixelFormat.TRANSLUCENT);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.mGLSurfaceView.setEGLConfigChooser(&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;删除如下代码（如果不删除的话，顶部会有一个Cocos2dxEditText的白条，Cocos2dxEditText封装了EditText，主要用于TextField，如果程序中有使用到它，那建议更换为EditBox）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//mFrameLayout.addView(edittext);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//this.mGLSurfaceView.setCocos2dxEditText(edittext);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如图，&lt;/p&gt;
&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;http://cdn.cocimg.com/bbs/attachment/Fid_41/41_300874_8f72035ce3d5c35.png&quot; alt=&quot;&quot; border=&quot;0&quot; title=&quot;CCAction&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;

&lt;p&gt;3.在libcocos2dx项目的org.cocos2dx.lib项目中的Cocos2dxRenderer.java文件中，修改onSurfaceCreated()方法。&lt;br&gt;增加如下代码：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;pGL10.glDisable(GL10.GL_DITHER);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pGL10.glHint(GL10.GL_PERSPECTIVE_CORRECTION_HINT, GL10.GL_FASTEST);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pGL10.glClearColor(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pGL10.glEnable(GL10.GL_CULL_FACE);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pGL10.glShadeModel(GL10.GL_SMOOTH);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如图，&lt;/p&gt;
&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;http://cdn.cocimg.com/bbs/attachment/Fid_41/41_300874_9ef377e1b8ed402.png&quot; alt=&quot;&quot; border=&quot;0&quot; title=&quot;CCAction&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;

&lt;p&gt;好了，如果有更好的办法欢迎提出。&lt;/p&gt;
&lt;p&gt;本工程的下载地址：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/fusijie/Cocos2d-x-Transparent&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/fusijie/Cocos2d-x-Transparent&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;之前发过一篇&lt;a href=&quot;http://www.cocoachina.com/bbs/read.php?tid=196780&quot;&gt;《如何在Cocos2d-x 3.0rc0中让程序背景透明》&lt;/a&gt;，但是由于3.0rc0后Cocos2d-x更改为Java Activity，而不再是Native Activity，使得这种方法失效。&lt;/p&gt;
&lt;p&gt;这里以最新的Cocos2d-x 3.2 release为例，介绍如何在Cocos2d-x中让程序背景透明。&lt;/p&gt;
    
    </summary>
    
      <category term="cocos2d-x" scheme="http://fusijie.github.io/categories/cocos2d-x/"/>
    
    
      <category term="安卓" scheme="http://fusijie.github.io/tags/%E5%AE%89%E5%8D%93/"/>
    
      <category term="背景" scheme="http://fusijie.github.io/tags/%E8%83%8C%E6%99%AF/"/>
    
      <category term="透明" scheme="http://fusijie.github.io/tags/%E9%80%8F%E6%98%8E/"/>
    
  </entry>
  
  <entry>
    <title>【玩转cocos2d-x之四十一】在Cocos2d-x 3.0中使用opengl shader</title>
    <link href="http://fusijie.github.io/2014/09/03/play-cocos2dx-41/"/>
    <id>http://fusijie.github.io/2014/09/03/play-cocos2dx-41/</id>
    <published>2014-09-03T09:38:14.000Z</published>
    <updated>2016-04-30T10:13:36.000Z</updated>
    
    <content type="html">&lt;p&gt;有小伙伴提出了这个问题，其实GLProgram Cocos2d-x引擎自带了。完全可以直接拿来用。&lt;br&gt;先上图吧。使用opengl前后的对比：&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;http://img.blog.csdn.net/20140417233227906?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvamFja3lzdHVkaW8=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast&quot; alt=&quot;&quot; border=&quot;0&quot; title=&quot;CCAction&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;

&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;http://img.blog.csdn.net/20140417233248078?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvamFja3lzdHVkaW8=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast&quot; alt=&quot;&quot; border=&quot;0&quot; title=&quot;CCAction&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;

&lt;h3 id=&quot;在cpp中使用openGL-shader&quot;&gt;&lt;a href=&quot;#在cpp中使用openGL-shader&quot; class=&quot;headerlink&quot; title=&quot;在cpp中使用openGL shader&quot;&gt;&lt;/a&gt;在cpp中使用openGL shader&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;添加gray.vsh和gray.fsh到资源目录（见附件）。&lt;/li&gt;
&lt;li&gt;添加如下代码：&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; HelloWorld::init()  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ( !Layer::init() )  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ize visibleSize = Director::getInstance()-&amp;gt;getVisibleSize();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;auto&lt;/span&gt; sprite = Sprite::create(&lt;span class=&quot;string&quot;&gt;&quot;HelloWorld.png&quot;&lt;/span&gt;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sprite-&amp;gt;setAnchorPoint(Point(&lt;span class=&quot;number&quot;&gt;0.5&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0.5&lt;/span&gt;));  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sprite-&amp;gt;setPosition(Point(visibleSize.width / &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, visibleSize.height / &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;));  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;-&amp;gt;addChild(sprite);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    graySprite(sprite);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; HelloWorld::graySprite(Sprite * sprite)  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(sprite)  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        GLProgram * p = new GLProgram();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        p-&amp;gt;initWithFilenames(&lt;span class=&quot;string&quot;&gt;&quot;gray.vsh&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;gray.fsh&quot;&lt;/span&gt;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        p-&amp;gt;bindAttribLocation(GLProgram::ATTRIBUTE_NAME_POSITION, GLProgram::VERTEX_ATTRIB_POSITION);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        p-&amp;gt;bindAttribLocation(GLProgram::ATTRIBUTE_NAME_COLOR, GLProgram::VERTEX_ATTRIB_COLOR);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        p-&amp;gt;bindAttribLocation(GLProgram::ATTRIBUTE_NAME_TEX_COORD, GLProgram::VERTEX_ATTRIB_TEX_COORDS);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        p-&amp;gt;link();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        p-&amp;gt;updateUniforms();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sprite-&amp;gt;setShaderProgram(p);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;在js中使用opengl-shader&quot;&gt;&lt;a href=&quot;#在js中使用opengl-shader&quot; class=&quot;headerlink&quot; title=&quot;在js中使用opengl shader&quot;&gt;&lt;/a&gt;在js中使用opengl shader&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;添加gray.vsh和gray.fsh到资源目录。&lt;/li&gt;
&lt;li&gt;添加如下代码：&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; HelloWorldLayer = cc.Layer.extend(&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sprite:&lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;,  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ctor:&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;._super();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; size = cc.director.getWinSize();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.sprite = cc.Sprite.create(res.HelloWorld_png);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.sprite.attr(&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            x: size.width / &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            y: size.height / &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            scale: &lt;span class=&quot;number&quot;&gt;0.5&lt;/span&gt;,  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            rotation: &lt;span class=&quot;number&quot;&gt;180&lt;/span&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.addChild(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.sprite, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        graySprite(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.sprite);                         &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;graySprite&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;sprite&lt;/span&gt;)  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(sprite)  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; shader = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; cc.GLProgram();&lt;span class=&quot;comment&quot;&gt;//cc.GLProgram.create(&quot;gray.vsh&quot;, &quot;gray.fsh&quot;);  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        shader.retain();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//shader.initWithByteArrays(&quot;res/gray.vsh&quot;, &quot;res/gray.fsh&quot;);  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        shader.initWithFilenames(&lt;span class=&quot;string&quot;&gt;&quot;res/gray.vsh&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;res/gray.fsh&quot;&lt;/span&gt;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        shader.addAttribute(cc.ATTRIBUTE_NAME_POSITION, cc.VERTEX_ATTRIB_POSITION);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        shader.addAttribute(cc.ATTRIBUTE_NAME_COLOR, cc.VERTEX_ATTRIB_COLOR);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        shader.addAttribute(cc.ATTRIBUTE_NAME_TEX_COORD, cc.VERTEX_ATTRIB_TEX_COORDS);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        shader.link();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        shader.updateUniforms();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sprite.setShaderProgram(shader);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;      &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;附件：&lt;a href=&quot;http://download.csdn.net/detail/jackyvincefu/7210721&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;gray.vsh和gray.fsh&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;翻译自：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.cocos2d-x.org/forums/6/topics/49035&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.cocos2d-x.org/forums/6/topics/49035&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.cocos2d-x.org/forums/19/topics/49038&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.cocos2d-x.org/forums/19/topics/49038&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;有小伙伴提出了这个问题，其实GLProgram Cocos2d-x引擎自带了。完全可以直接拿来用。&lt;br&gt;先上图吧。使用opengl前后的对比：&lt;/p&gt;
    
    </summary>
    
      <category term="cocos2d-x" scheme="http://fusijie.github.io/categories/cocos2d-x/"/>
    
    
      <category term="opengl" scheme="http://fusijie.github.io/tags/opengl/"/>
    
      <category term="shader" scheme="http://fusijie.github.io/tags/shader/"/>
    
      <category term="灰化" scheme="http://fusijie.github.io/tags/%E7%81%B0%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>Cocos2dx-FAQ-2</title>
    <link href="http://fusijie.github.io/2014/09/02/cocos2dx-faq-2/"/>
    <id>http://fusijie.github.io/2014/09/02/cocos2dx-faq-2/</id>
    <published>2014-09-02T09:34:00.000Z</published>
    <updated>2016-04-24T14:35:47.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;Q-Cocos2d-x-v2-2-5-进行Android交叉编译的时候报错“’transform’-is-not-a-member-of-‘std’”，如何解决？&quot;&gt;&lt;a href=&quot;#Q-Cocos2d-x-v2-2-5-进行Android交叉编译的时候报错“’transform’-is-not-a-member-of-‘std’”，如何解决？&quot; class=&quot;headerlink&quot; title=&quot;Q:Cocos2d-x v2.2.5 进行Android交叉编译的时候报错“’transform’ is not a member of ‘std’”，如何解决？&quot;&gt;&lt;/a&gt;Q:Cocos2d-x v2.2.5 进行Android交叉编译的时候报错“’transform’ is not a member of ‘std’”，如何解决？&lt;/h3&gt;&lt;p&gt;由于没有添加标准算法库导致的问题，在&lt;a href=&quot;https://github.com/cocos2d/cocos2d-x/blob/v2/extensions/CocoStudio/Reader/WidgetReader/LabelReader/LabelReader.cpp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;extensions/CocoStudio/Reader/LabelReader.cpp&lt;/a&gt;增加头文件的引用即可。官方仓库已修复，可以直接拉取更新。&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;figcaption&gt;&lt;span&gt;包含头文件&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;algorithm&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/cocos2d/cocos2d-x/commit/70cbb91ea88a65be34e223c93f00edfdbfc11975&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;参考链接&lt;/a&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3 id=&quot;Q-Cocos2d-x有哪些可用的粒子编辑器？&quot;&gt;&lt;a href=&quot;#Q-Cocos2d-x有哪些可用的粒子编辑器？&quot; class=&quot;headerlink&quot; title=&quot;Q:Cocos2d-x有哪些可用的粒子编辑器？&quot;&gt;&lt;/a&gt;Q:Cocos2d-x有哪些可用的粒子编辑器？&lt;/h3&gt;&lt;p&gt;Mac平台：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://71squared.com/particledesigner&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Particle Designer，收费&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://itunes.apple.com/us/app/id600661093?mt=8&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Particle Playground，收费&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Windows平台：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;code.google.com/p/cocos2d-windows-particle-editor/&quot;&gt;Particle Editor，基于C#，开源，免费&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://bbs.csdn.net/topics/390627359&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ParticleDesigner，不开源，免费&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.csdn.net/jebe7282/article/details/8051899&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Cocos2d Particle Builder，基于QT，不开源，免费&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Web平台：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://particle2dx.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Particle2dx，免费&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3 id=&quot;Q-点击按钮菜单的时候如何让它具有放大效果？&quot;&gt;&lt;a href=&quot;#Q-点击按钮菜单的时候如何让它具有放大效果？&quot; class=&quot;headerlink&quot; title=&quot;Q:点击按钮菜单的时候如何让它具有放大效果？&quot;&gt;&lt;/a&gt;Q:点击按钮菜单的时候如何让它具有放大效果？&lt;/h3&gt;&lt;p&gt;以Cocos2d-x v3.2为例。&lt;/p&gt;
&lt;p&gt;如果使用Menu的话，手动去设置将按下图片放大（使用MenuItemSprite），那么按钮的放大效果会保持坐下坐标不变，往右上角放大，而不是从中心往四周放大。&lt;/p&gt;
&lt;p&gt;解决的方法是，使用Button控件。设置按下动作有效即可，目前放大倍数是1.1。v3.3版本会开放这个倍数设置接口。&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;figcaption&gt;&lt;span&gt;setPressedActionEnabled&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;auto&lt;/span&gt; btn = Button::create(&lt;span class=&quot;string&quot;&gt;&quot;CloseNormal.png&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;btn-&amp;gt;setPressedActionEnabled(&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;btn-&amp;gt;setPosition(Vec2(&lt;span class=&quot;number&quot;&gt;200&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;200&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;-&amp;gt;addChild(btn);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3 id=&quot;Q-Cocos2d-x支持视频播放吗？为什么TestCpp看不到相关测试例？&quot;&gt;&lt;a href=&quot;#Q-Cocos2d-x支持视频播放吗？为什么TestCpp看不到相关测试例？&quot; class=&quot;headerlink&quot; title=&quot;Q:Cocos2d-x支持视频播放吗？为什么TestCpp看不到相关测试例？&quot;&gt;&lt;/a&gt;Q:Cocos2d-x支持视频播放吗？为什么TestCpp看不到相关测试例？&lt;/h3&gt;&lt;p&gt;从Cocos2d-x v3.1开始，Cocos2d-x加入视频播放模块&lt;a href=&quot;https://github.com/cocos2d/cocos2d-x/blob/v3/cocos/ui/UIVideoPlayer.h&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;VideoPlayer&lt;/a&gt;，暂只支持iOS和Android平台。&lt;/p&gt;
&lt;p&gt;因此只有在iOS和Android平台上才能在看到TestCpp的VideoPlayer菜单，其他平台是隐藏的。具体位置是：&lt;br&gt;Node::UI/GUI Dynamic Create Test/VideoPlayerTest。&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3 id=&quot;Q-如何下载Cocos2d-x的历史版本？&quot;&gt;&lt;a href=&quot;#Q-如何下载Cocos2d-x的历史版本？&quot; class=&quot;headerlink&quot; title=&quot;Q:如何下载Cocos2d-x的历史版本？&quot;&gt;&lt;/a&gt;Q:如何下载Cocos2d-x的历史版本？&lt;/h3&gt;&lt;p&gt;最简单的方式就是克隆官方git仓库。通过标签来创建本地分支，并进行切换。这样就可以不用每个版本都去下载一个引擎了。&lt;/p&gt;
&lt;p&gt;比如要获取Cocos2d-x v3.2（注：这里不处理submodule）&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/cocos2d/cocos2d-x.git
cd cocos2d-x/
git checkout -b v3.2 cocos2d-x-3.2
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这样就在本地创建了3.2的分支。查看版本标签可以使用&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git tag
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;当然也可以采用直接下载的方式&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://www.cocos2d-x.org/download&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.cocos2d-x.org/download&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://www.cocos2d-x.org/download/version#Cocos2d-x&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.cocos2d-x.org/download/version#Cocos2d-x&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://code.google.com/p/cocos2d-x/downloads/list&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://code.google.com/p/cocos2d-x/downloads/list&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Q-Cocos2d-x-v2-2-5-进行Android交叉编译的时候报错“’transform’-is-not-a-member-of-‘std’”，如何解决？&quot;&gt;&lt;a href=&quot;#Q-Cocos2d-x-v2-2-5-进行Android交叉编译的时候报错“’transform’-is-not-a-member-of-‘std’”，如何解决？&quot; class=&quot;headerlink&quot; title=&quot;Q:Cocos2d-x v2.2.5 进行Android交叉编译的时候报错“’transform’ is not a member of ‘std’”，如何解决？&quot;&gt;&lt;/a&gt;Q:Cocos2d-x v2.2.5 进行Android交叉编译的时候报错“’transform’ is not a member of ‘std’”，如何解决？&lt;/h3&gt;&lt;p&gt;由于没有添加标准算法库导致的问题，在&lt;a href=&quot;https://github.com/cocos2d/cocos2d-x/blob/v2/extensions/CocoStudio/Reader/WidgetReader/LabelReader/LabelReader.cpp&quot;&gt;extensions/CocoStudio/Reader/LabelReader.cpp&lt;/a&gt;增加头文件的引用即可。官方仓库已修复，可以直接拉取更新。&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;figcaption&gt;&lt;span&gt;包含头文件&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;algorithm&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/cocos2d/cocos2d-x/commit/70cbb91ea88a65be34e223c93f00edfdbfc11975&quot;&gt;参考链接&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Cocos2dx-FAQ" scheme="http://fusijie.github.io/categories/Cocos2dx-FAQ/"/>
    
    
  </entry>
  
  <entry>
    <title>【玩转cocos2d-x之四十】Cocos2d-x 3.0截屏功能集成</title>
    <link href="http://fusijie.github.io/2014/09/01/play-cocos2dx-40/"/>
    <id>http://fusijie.github.io/2014/09/01/play-cocos2dx-40/</id>
    <published>2014-09-01T09:18:14.000Z</published>
    <updated>2016-04-30T10:13:53.000Z</updated>
    
    <content type="html">&lt;p&gt;3.0的截屏和2.x的截屏基本上相同，都是利用RenderTexture来处理，在渲染之前调用call函数，然后调用Cocos的场景visit函数对其进行渲染，渲染结束后调用end函数即可。只是3.0截屏需要在截完屏的下一帧才能处理RenderTexture，这点要注意。关于2.x的RenderTexture的API和demo可以参见&lt;a href=&quot;http://blog.csdn.net/jackystudio/article/details/15498083&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://blog.csdn.net/jackystudio/article/details/15498083&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;本文的重点在于如何将截图功能继承到Cocos2d-x 3.0引擎。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;http://img.blog.csdn.net/20140417212334312?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvamFja3lzdHVkaW8=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast&quot; alt=&quot;&quot; border=&quot;0&quot; title=&quot;CCAction&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;

&lt;h3 id=&quot;集成到Director&quot;&gt;&lt;a href=&quot;#集成到Director&quot; class=&quot;headerlink&quot; title=&quot;集成到Director&quot;&gt;&lt;/a&gt;集成到Director&lt;/h3&gt;&lt;p&gt;这里选择把截屏功能继承到Director中，让全局的导演来执行截屏功能是一个很好的主意。&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; Director::saveScreenshot(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt;&amp;amp; fileName,&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::function&amp;lt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;(const std::string&amp;amp;)&amp;gt;&amp;amp; callback)  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Image::Format format;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//进行后缀判断  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt;::npos != fileName.find_last_of(&lt;span class=&quot;string&quot;&gt;&quot;.&quot;&lt;/span&gt;))&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;auto&lt;/span&gt; extension = fileName.substr(fileName.find_last_of(&lt;span class=&quot;string&quot;&gt;&quot;.&quot;&lt;/span&gt;),fileName.length());  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!extension.compare(&lt;span class=&quot;string&quot;&gt;&quot;.png&quot;&lt;/span&gt;)) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            format = Image::Format::PNG;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(!extension.compare(&lt;span class=&quot;string&quot;&gt;&quot;.jpg&quot;&lt;/span&gt;)) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            format = Image::Format::JPG;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            CCLOG(&lt;span class=&quot;string&quot;&gt;&quot;cocos2d: the image can only be saved as JPG or PNG format&quot;&lt;/span&gt;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        CCLOG(&lt;span class=&quot;string&quot;&gt;&quot;cocos2d: the image can only be saved as JPG or PNG format&quot;&lt;/span&gt;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return ;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;comment&quot;&gt;//获取屏幕尺寸，初始化一个空的渲染纹理对象  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;auto&lt;/span&gt; renderTexture = RenderTexture::create(getWinSize().width, getWinSize().height, Texture2D::PixelFormat::RGBA8888);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;comment&quot;&gt;//清空并开始获取  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    renderTexture-&amp;gt;beginWithClear(&lt;span class=&quot;number&quot;&gt;0.0f&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0.0f&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0.0f&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0.0f&lt;/span&gt;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;comment&quot;&gt;//遍历场景节点对象，填充纹理到RenderTexture中  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    getRunningScene()-&amp;gt;visit();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;comment&quot;&gt;//结束获取  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    renderTexture-&amp;gt;end();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;comment&quot;&gt;//保存文件  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    renderTexture-&amp;gt;saveToFile(fileName , format);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;comment&quot;&gt;//使用schedule在下一帧中调用callback函数  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;auto&lt;/span&gt; fullPath = FileUtils::getInstance()-&amp;gt;getWritablePath() + fileName;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;auto&lt;/span&gt; scheduleCallback = [&amp;amp;,fullPath,callback](float dt)&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        callback(fullPath);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;auto&lt;/span&gt; _schedule = getRunningScene()-&amp;gt;getScheduler();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    _schedule-&amp;gt;schedule(scheduleCallback, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0.0f&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0.0f&lt;/span&gt;, &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;screenshot&quot;&lt;/span&gt;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;如何使用saveScreenshot&quot;&gt;&lt;a href=&quot;#如何使用saveScreenshot&quot; class=&quot;headerlink&quot; title=&quot;如何使用saveScreenshot&quot;&gt;&lt;/a&gt;如何使用saveScreenshot&lt;/h3&gt;&lt;p&gt;截屏功能使用起来也很简单，直接调用saveSecreenshot，其中第一个参数为文件名（支持png和jpg格式，不带后缀名默认为png格式），第二个参数为回调函数，你可以在回调函数中处理这个文件。&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; ScreenshotTest::saveImage(Ref *pSender)&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; counter = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; png[&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;];  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;sprintf&lt;/span&gt;(png, &lt;span class=&quot;string&quot;&gt;&quot;image-%d.png&quot;&lt;/span&gt;, counter);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; jpg[&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;];  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;sprintf&lt;/span&gt;(jpg, &lt;span class=&quot;string&quot;&gt;&quot;image-%d.jpg&quot;&lt;/span&gt;, counter);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;comment&quot;&gt;//截屏后的回调函数，这里显示在左下角  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;auto&lt;/span&gt; callback = [&amp;amp;](const std::string&amp;amp; fullPath)&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;auto&lt;/span&gt; sprite = Sprite::create(fullPath);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        CCASSERT(sprite!=&lt;span class=&quot;literal&quot;&gt;nullptr&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;Failed to create sprite.&quot;&lt;/span&gt;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        addChild(sprite);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sprite-&amp;gt;setScale(&lt;span class=&quot;number&quot;&gt;0.3f&lt;/span&gt;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sprite-&amp;gt;setPosition(Point(&lt;span class=&quot;number&quot;&gt;40&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;40&lt;/span&gt;));  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sprite-&amp;gt;setRotation(counter * &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        CCLOG(&lt;span class=&quot;string&quot;&gt;&quot;Image saved %s&quot;&lt;/span&gt;, fullPath.c_str());  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;comment&quot;&gt;//调用Director的截屏功能  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Director::getInstance()-&amp;gt;saveScreenshot(png, callback);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    counter++;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;源码下载&quot;&gt;&lt;a href=&quot;#源码下载&quot; class=&quot;headerlink&quot; title=&quot;源码下载&quot;&gt;&lt;/a&gt;源码下载&lt;/h3&gt;&lt;p&gt;该功能已提交pull request到Cocos2d-x Github上了，有需求的童鞋们可以自己集成了。源码具体可以参见：&lt;a href=&quot;https://github.com/cocos2d/cocos2d-x/pull/5978&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/cocos2d/cocos2d-x/pull/5978&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;3.0的截屏和2.x的截屏基本上相同，都是利用RenderTexture来处理，在渲染之前调用call函数，然后调用Cocos的场景visit函数对其进行渲染，渲染结束后调用end函数即可。只是3.0截屏需要在截完屏的下一帧才能处理RenderTexture，这点要注意。关于2.x的RenderTexture的API和demo可以参见&lt;a href=&quot;http://blog.csdn.net/jackystudio/article/details/15498083&quot;&gt;http://blog.csdn.net/jackystudio/article/details/15498083&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;本文的重点在于如何将截图功能继承到Cocos2d-x 3.0引擎。&lt;/p&gt;
    
    </summary>
    
      <category term="cocos2d-x" scheme="http://fusijie.github.io/categories/cocos2d-x/"/>
    
    
      <category term="截屏" scheme="http://fusijie.github.io/tags/%E6%88%AA%E5%B1%8F/"/>
    
      <category term="截图" scheme="http://fusijie.github.io/tags/%E6%88%AA%E5%9B%BE/"/>
    
  </entry>
  
  <entry>
    <title>如何在Windows平台使用VS搭建C++/Lua的开发环境</title>
    <link href="http://fusijie.github.io/2014/08/31/how-to-complie-cpp-with-lua-in-the-vs/"/>
    <id>http://fusijie.github.io/2014/08/31/how-to-complie-cpp-with-lua-in-the-vs/</id>
    <published>2014-08-30T16:28:00.000Z</published>
    <updated>2016-04-24T14:34:50.000Z</updated>
    
    <content type="html">&lt;p&gt;本文主要介绍如何在Windows平台利用VS搭建C++/Lua开发环境。这里的“C++/Lua开发环境”主要指的是C++调用Lua，以及Lua调用C++。Mac平台相对会比较方便，但是VS也不是很麻烦就是了。Mac上利用XCode搭建的教程可以参考&lt;a href=&quot;http://4gamers.cn/archives/242&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;子龙山人的教程&lt;/a&gt;，当然也可以利用其他IDE，比如Eclipse+CDT+LDT来搭建，这都没有问题。&lt;/p&gt;
&lt;p&gt;另外，本文不谈及Lua/C++的交互，相关内容可以参考&lt;a href=&quot;http://book.luaer.cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《Lua程序设计》&lt;/a&gt;，或者&lt;a href=&quot;http://4gamers.cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;子龙山人的Lua系列教程&lt;/a&gt;。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;环境&quot;&gt;&lt;a href=&quot;#环境&quot; class=&quot;headerlink&quot; title=&quot;环境&quot;&gt;&lt;/a&gt;环境&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Windows 8.1&lt;/li&gt;
&lt;li&gt;VS2012&lt;/li&gt;
&lt;li&gt;Lua5.2.3&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;搭建步骤&quot;&gt;&lt;a href=&quot;#搭建步骤&quot; class=&quot;headerlink&quot; title=&quot;搭建步骤&quot;&gt;&lt;/a&gt;搭建步骤&lt;/h3&gt;&lt;h4 id=&quot;生成Lua静态库&quot;&gt;&lt;a href=&quot;#生成Lua静态库&quot; class=&quot;headerlink&quot; title=&quot;生成Lua静态库&quot;&gt;&lt;/a&gt;生成Lua静态库&lt;/h4&gt;&lt;p&gt;(1)下载lua src。&lt;/p&gt;
&lt;p&gt;最新版本是5.2.3。 &lt;a href=&quot;http://www.lua.org/download.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;下载地址&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;(2)新建VS Win32控制台应用程序，取名为Lua。在应用程序设置中选择应用程序类型为静态库，附加选项中取消预编译头的勾选。&lt;/p&gt;
&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;http://www-fusijie-com.qiniudn.com/vslua_pic_1.png&quot; alt=&quot;&quot; border=&quot;0&quot; title=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;


&lt;p&gt;(3)在Lua的VS项目文件夹中新建LuaSrc目录，用于存放Lua源码。解压下载的lua src，拷贝src目录下所有 &lt;em&gt; .c和 &lt;/em&gt; .h文件到LuaSrc。&lt;/p&gt;
&lt;p&gt;(4)在Lua的VS项目文件夹中新建bin目录，用于存放Lua.lib。&lt;/p&gt;
&lt;p&gt;(5)在VS环境中，右键点击Lua项目，选择添加-&amp;gt;现有项，导入LuaSrc目录下所有的文件。&lt;/p&gt;
&lt;p&gt;(6)右键点击Lua项目，选择属性，在顶部选择所有配置，然后修改配置属性-&amp;gt;常规-&amp;gt;输出目录为&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$(SolutionDir)bin
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;(7)为了禁止一些安全警告（Windows程序员知道为什么），需要再修改配置属性-&amp;gt;C/C++-&amp;gt;预处理器-&amp;gt;预处理器定义，在末尾添加&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;;_CRT_SECURE_NO_DEPRECATE;_SCL_SECURE_NO_DEPRECATE
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;(8)选择release模式，点击项目，生成Lua.lib即可。Lua.lib生成在bin目录下。&lt;/p&gt;
&lt;h4 id=&quot;调用Lua静态库&quot;&gt;&lt;a href=&quot;#调用Lua静态库&quot; class=&quot;headerlink&quot; title=&quot;调用Lua静态库&quot;&gt;&lt;/a&gt;调用Lua静态库&lt;/h4&gt;&lt;p&gt;(1)在Lua解决方案下新建名字为HelloLua的Win32控制台程序，采用默认选项，不做修改。&lt;/p&gt;
&lt;p&gt;(2)右键点击HelloLua项目，选择属性，修改配置属性-&amp;gt;C/C++-&amp;gt;附加包含目录，新增&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;..\LuaSrc
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;(3)在修改配置属性-&amp;gt;链接器-&amp;gt;输入-&amp;gt;附加依赖项，新增&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;..\bin\Lua.lib
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;或者使用代码链接lua库，即在HeloLua.cpp中添加如下代码，&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;figcaption&gt;&lt;span&gt;调用lua.lib&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;pragma&lt;/span&gt; comment (lib,&lt;span class=&quot;string&quot;&gt;&quot;../bin/Lua.lib&quot;&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;(4)设置HelloLua项目为默认启动项，点击生成项目即可。&lt;/p&gt;
&lt;p&gt;(5)因为此时main函数并没有执行任何代码，所以控制台一闪而过。右键HelloLua项目的源文件，添加新建项，取名hellolua.lua。&lt;/p&gt;
&lt;p&gt;(6)一个简单的调用示例：&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;figcaption&gt;&lt;span&gt;demo&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;*hellolua.lua*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	print(&quot;Hello, Lua&quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*HelloLua.cpp*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	#include &quot;stdafx.h&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	#pragma comment (lib,&quot;Lua.lib&quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	#include &quot;lua.hpp&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	int _tmain(int argc, _TCHAR* argv[])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		lua_State* lua_state = luaL_newstate(); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		luaL_openlibs(lua_state);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		luaL_dofile(lua_state,&quot;hellolua.lua&quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		lua_close(lua_state);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		getchar();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		return 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;em&gt;效果&lt;/em&gt;&lt;/p&gt;
&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;http://www-fusijie-com.qiniudn.com/vslua_pic_2.png&quot; alt=&quot;&quot; border=&quot;0&quot; title=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;

&lt;h4 id=&quot;生成Lua-exe和Luac-exe&quot;&gt;&lt;a href=&quot;#生成Lua-exe和Luac-exe&quot; class=&quot;headerlink&quot; title=&quot;生成Lua.exe和Luac.exe&quot;&gt;&lt;/a&gt;生成Lua.exe和Luac.exe&lt;/h4&gt;&lt;p&gt;由于下载的lua源码中包含lua.c和luac.c，这两个文件都有main入口，同时编译的话会出错，所以只要删除其中一个，另一个就可以正常编译。&lt;/p&gt;
&lt;p&gt;(1)新建VS空项目，取名为Lua。&lt;/p&gt;
&lt;p&gt;(2)在Lua的VS项目文件夹中新建LuaSrc目录，用于存放Lua源码。解压下载的lua src，拷贝src目录下是所有 &lt;em&gt; .c和 &lt;/em&gt; .h文件。&lt;/p&gt;
&lt;p&gt;(3)在VS环境中，右键点击Lua项目，选择添加-&amp;gt;现有项，导入LuaSrc目录下所有的文件。&lt;/p&gt;
&lt;p&gt;(4)右键点击Lua项目，选择属性，在顶部选择所有配置，然后修改配置属性-&amp;gt;C/C++-&amp;gt;预处理器-&amp;gt;预处理器定义，在末尾添加&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;;_CRT_SECURE_NO_DEPRECATE;_SCL_SECURE_NO_DEPRECATE
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;(5)在Lua项目的源文件，找到luac.c，右键移除。&lt;/p&gt;
&lt;p&gt;(6)选择release模式，点击项目生成lua.exe即可。&lt;/p&gt;
&lt;p&gt;(7)同理在同个解决方案下创建LuaC空项目，按以上步骤生成luac.exe。只是第五步要改为“找到lua.c，右键移除”。&lt;/p&gt;
&lt;p&gt;(8)lua.exe和luac.exe生成在Lua项目目录下的release目录。&lt;/p&gt;
&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;http://www-fusijie-com.qiniudn.com/vslua_pic_3.png&quot; alt=&quot;&quot; border=&quot;0&quot; title=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;

&lt;p&gt;C++调用Lua项目：&lt;a href=&quot;https://github.com/fusijie/Cpp_Lua_VS2012&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/fusijie/Cpp_Lua_VS2012&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Lua和LuaC项目：&lt;a href=&quot;https://github.com/fusijie/Lua_LuaC_exe&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/fusijie/Lua_LuaC_exe&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;如果你不想这么麻烦，也可以直接从上述2个github地址直接clone我的项目。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要介绍如何在Windows平台利用VS搭建C++/Lua开发环境。这里的“C++/Lua开发环境”主要指的是C++调用Lua，以及Lua调用C++。Mac平台相对会比较方便，但是VS也不是很麻烦就是了。Mac上利用XCode搭建的教程可以参考&lt;a href=&quot;http://4gamers.cn/archives/242&quot;&gt;子龙山人的教程&lt;/a&gt;，当然也可以利用其他IDE，比如Eclipse+CDT+LDT来搭建，这都没有问题。&lt;/p&gt;
&lt;p&gt;另外，本文不谈及Lua/C++的交互，相关内容可以参考&lt;a href=&quot;http://book.luaer.cn/&quot;&gt;《Lua程序设计》&lt;/a&gt;，或者&lt;a href=&quot;http://4gamers.cn/&quot;&gt;子龙山人的Lua系列教程&lt;/a&gt;。&lt;/p&gt;
    
    </summary>
    
      <category term="Lua" scheme="http://fusijie.github.io/categories/Lua/"/>
    
    
      <category term="VS2012" scheme="http://fusijie.github.io/tags/VS2012/"/>
    
      <category term="C++" scheme="http://fusijie.github.io/tags/C/"/>
    
      <category term="Lua" scheme="http://fusijie.github.io/tags/Lua/"/>
    
  </entry>
  
  <entry>
    <title>【玩转cocos2d-x之三十九】NDK-STACK tool 的使用</title>
    <link href="http://fusijie.github.io/2014/08/27/play-cocos2dx-39/"/>
    <id>http://fusijie.github.io/2014/08/27/play-cocos2dx-39/</id>
    <published>2014-08-27T09:18:14.000Z</published>
    <updated>2016-04-30T09:33:31.000Z</updated>
    
    <content type="html">&lt;p&gt;很多童鞋在纠结在Cocos2d-x中安卓项目如何调试JNI部分的C++代码，在吃完2个茶叶蛋后我决定放大招。。。介绍一下如何使用NDK-STACK tool来恢复Cocos2d-x安卓错误堆栈信息。&lt;/p&gt;
&lt;p&gt;本文翻译自：&lt;a href=&quot;http://www.cocos2d-x.org/forums/6/topics/46225&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.cocos2d-x.org/forums/6/topics/46225&lt;/a&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;安卓-NDK-STACK-tool&quot;&gt;&lt;a href=&quot;#安卓-NDK-STACK-tool&quot; class=&quot;headerlink&quot; title=&quot;安卓 NDK-STACK tool&quot;&gt;&lt;/a&gt;安卓 NDK-STACK tool&lt;/h3&gt;&lt;p&gt;NDK-Stack 是一个非常易用的工具，它通过将信息显示到adb logcat中来辅助你分析堆栈追踪，然后用相应的值（哪篇源码的哪一行）来替代静态链接库中的地址。&lt;br&gt;在adb logcat的输出区，你可以看到类似下面的信息，但是在此之前我们必须先先对它进行解析。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;I/DEBUG   (   31): *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;I/DEBUG   (   31): Build fingerprint: &amp;apos;generic/google_sdk/generic/:2.2/FRF91/43546:eng/test-keys&amp;apos;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;I/DEBUG   (   31): pid: 351, tid: 351  %gt;%gt;%gt; /data/local/ndk-tests/crasher &amp;lt;&amp;lt;&amp;lt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;I/DEBUG   (   31): signal 11 (SIGSEGV), fault addr 0d9f00d8  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;I/DEBUG   (   31):  r0 0000af88  r1 0000a008  r2 baadf00d  r3 0d9f00d8  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;I/DEBUG   (   31):  r4 00000004  r5 0000a008  r6 0000af88  r7 00013c44  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;I/DEBUG   (   31):  r8 00000000  r9 00000000  10 00000000  fp 00000000  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;I/DEBUG   (   31):  ip 0000959c  sp be956cc8  lr 00008403  pc 0000841e  cpsr 60000030  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;I/DEBUG   (   31):          #00  pc 0000841e  /data/local/ndk-tests/crasher  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;I/DEBUG   (   31):          #01  pc 000083fe  /data/local/ndk-tests/crasher  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;I/DEBUG   (   31):          #02  pc 000083f6  /data/local/ndk-tests/crasher  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;I/DEBUG   (   31):          #03  pc 000191ac  /system/lib/libc.so  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;I/DEBUG   (   31):          #04  pc 000083ea  /data/local/ndk-tests/crasher  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;I/DEBUG   (   31):          #05  pc 00008458  /data/local/ndk-tests/crasher  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;I/DEBUG   (   31):          #06  pc 0000d362  /system/lib/libc.so  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;I/DEBUG   (   31):&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;如何使用这个工具？&quot;&gt;&lt;a href=&quot;#如何使用这个工具？&quot; class=&quot;headerlink&quot; title=&quot;如何使用这个工具？&quot;&gt;&lt;/a&gt;如何使用这个工具？&lt;/h3&gt;&lt;p&gt;如果你成功地编译了一个Cocos2d-x安卓项目，它将会在&lt;code&gt;$PROJECT_PATH/obj/local/&amp;lt;abi&amp;gt;&lt;/code&gt;目录下生产一个静态链接库，这里的&lt;abi&gt;代表你的设备的ABI（比如，默认为armeabi）。&lt;br&gt;你可以将输出结果作为输入，就像下面这样：&lt;/abi&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;adb logcat | $NDK/ndk-stack -sym $PROJECT_PATH/obj/local/armeabi&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;或者你也可以使用 -dump选项将指定logcat保存为文件作为输入，就像下面这样：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;adb logcat &amp;gt; /tmp/foo.txt  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$NDK/ndk-stack -sym $PROJECT_PATH/obj/local/armeabi -dump foo.txt&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;最后，你就可以得到更多有效可读的输出信息：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;********** Crash dump: **********  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Build fingerprint: &amp;apos;generic/google_sdk/generic/:2.2/FRF91/43546:eng/test-keys&amp;apos;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pid: 351, tid: 351  &amp;gt;&amp;gt;&amp;gt; /data/local/ndk-tests/crasher &amp;lt;&amp;lt;&amp;lt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;signal 11 (SIGSEGV), fault addr 0d9f00d8  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Stack frame #00  pc 0000841e  /data/local/ndk-tests/crasher : Routine zoo in /tmp/foo/crasher/jni/zoo.c:13  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Stack frame #01  pc 000083fe  /data/local/ndk-tests/crasher : Routine bar in /tmp/foo/crasher/jni/bar.c:5  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Stack frame #02  pc 000083f6  /data/local/ndk-tests/crasher : Routine my_comparison in /tmp/foo/crasher/jni/foo.c:9  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Stack frame #03  pc 000191ac  /system/lib/libc.so  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Stack frame #04  pc 000083ea  /data/local/ndk-tests/crasher : Routine foo in /tmp/foo/crasher/jni/foo.c:14  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Stack frame #05  pc 00008458  /data/local/ndk-tests/crasher : Routine main in /tmp/foo/crasher/jni/main.c:19  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Stack frame #06  pc 0000d362  /system/lib/libc.so&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;重要提示&quot;&gt;&lt;a href=&quot;#重要提示&quot; class=&quot;headerlink&quot; title=&quot;重要提示&quot;&gt;&lt;/a&gt;重要提示&lt;/h3&gt;&lt;p&gt;NDK-STACK tool的logcat输出需要有一个初始化行，比如像下面这样：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;*** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;当复制/粘帖追踪信息时，不要忘记把这个初始化行也给带上，否则NDK-STACK tool将不会正常的工作。&lt;br&gt;目前对各平台（linux/windows/mac）的NDK（可见&lt;a href=&quot;http://developer.android.com/tools/sdk/ndk/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Android Developer&lt;/a&gt;），NDK-STACK都是有效的。&lt;/p&gt;
&lt;h3 id=&quot;参考文档&quot;&gt;&lt;a href=&quot;#参考文档&quot; class=&quot;headerlink&quot; title=&quot;参考文档&quot;&gt;&lt;/a&gt;参考文档&lt;/h3&gt;&lt;p&gt;$NDK_ROOT/docs/NDK-STACK.html&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;很多童鞋在纠结在Cocos2d-x中安卓项目如何调试JNI部分的C++代码，在吃完2个茶叶蛋后我决定放大招。。。介绍一下如何使用NDK-STACK tool来恢复Cocos2d-x安卓错误堆栈信息。&lt;/p&gt;
&lt;p&gt;本文翻译自：&lt;a href=&quot;http://www.cocos2d-x.org/forums/6/topics/46225&quot;&gt;http://www.cocos2d-x.org/forums/6/topics/46225&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="cocos2d-x" scheme="http://fusijie.github.io/categories/cocos2d-x/"/>
    
    
      <category term="NDK-STACK" scheme="http://fusijie.github.io/tags/NDK-STACK/"/>
    
      <category term="崩溃" scheme="http://fusijie.github.io/tags/%E5%B4%A9%E6%BA%83/"/>
    
      <category term="调试" scheme="http://fusijie.github.io/tags/%E8%B0%83%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>Cocos2dx-FAQ-1</title>
    <link href="http://fusijie.github.io/2014/08/26/cocos2dx-faq-1/"/>
    <id>http://fusijie.github.io/2014/08/26/cocos2dx-faq-1/</id>
    <published>2014-08-26T09:28:00.000Z</published>
    <updated>2016-04-24T14:32:42.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;Q-如何在安卓上给应用程序设置透明背景？&quot;&gt;&lt;a href=&quot;#Q-如何在安卓上给应用程序设置透明背景？&quot; class=&quot;headerlink&quot; title=&quot;Q:如何在安卓上给应用程序设置透明背景？&quot;&gt;&lt;/a&gt;Q:如何在安卓上给应用程序设置透明背景？&lt;/h3&gt;&lt;p&gt;(1)NativeActivity，以Cocos2d-x 3.0 rc0为例&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.cocoachina.com/bbs/read.php?tid=196780&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.cocoachina.com/bbs/read.php?tid=196780&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(2)JavaActivity，以Cocos2d-x 3.2 release为例&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.cocoachina.com/bbs/read.php?tid=224544&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.cocoachina.com/bbs/read.php?tid=224544&lt;/a&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3 id=&quot;Q-SimpleAudioEngine在Windows平台上卡顿严重，无法调节音量？&quot;&gt;&lt;a href=&quot;#Q-SimpleAudioEngine在Windows平台上卡顿严重，无法调节音量？&quot; class=&quot;headerlink&quot; title=&quot;Q:SimpleAudioEngine在Windows平台上卡顿严重，无法调节音量？&quot;&gt;&lt;/a&gt;Q:SimpleAudioEngine在Windows平台上卡顿严重，无法调节音量？&lt;/h3&gt;&lt;p&gt;SimpleAudioEngine是分平台实现的，Windows平台上部分API是空实现（比如preloadBackgroundMusic等等）,所以在Windows平台上并不提供预加载，调节音量等功能（参见&lt;a href=&quot;https://github.com/cocos2d/cocos2d-x/blob/v3/cocos/audio/win32/SimpleAudioEngine.cpp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;cocos/audio/win32/SimpleAudioEngine.cpp&lt;/a&gt;），移植到Android/iOS/Mac上就正常了。Windows上调节音量有网友提供了解决方案。&lt;/p&gt;
&lt;p&gt;参考链接：&lt;a href=&quot;http://www.cocoachina.com/bbs/read.php?tid=213345&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.cocoachina.com/bbs/read.php?tid=213345&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3 id=&quot;Q-Cocos2d-x-3-x无法重写Node-draw-方法？&quot;&gt;&lt;a href=&quot;#Q-Cocos2d-x-3-x无法重写Node-draw-方法？&quot; class=&quot;headerlink&quot; title=&quot;Q:Cocos2d-x 3.x无法重写Node::draw()方法？&quot;&gt;&lt;/a&gt;Q:Cocos2d-x 3.x无法重写Node::draw()方法？&lt;/h3&gt;&lt;p&gt;Cocos2d-x 从v3.0开始将Node::draw()方法标记为final（参见&lt;a href=&quot;https://github.com/cocos2d/cocos2d-x/blob/v3/cocos/2d/CCNode.h&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;cocos2d/2d/CCNode.h&lt;/a&gt;），引擎另外提供了&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;figcaption&gt;&lt;span&gt;draw函数&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;virtual&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;draw&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Renderer *renderer, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; Mat4&amp;amp; transform, uint32_t flags)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;函数，可以通过重写这个函数来绘制你自己的节点，需注意的是如果更改了任何的GL状态，在使用完后必须还原。&lt;/p&gt;
&lt;p&gt;参考链接：&lt;a href=&quot;http://www.cocoachina.com/bbs/read.php?tid=200176&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.cocoachina.com/bbs/read.php?tid=200176&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3 id=&quot;Q-使用ClippingNode，为什么在Android-iOS裁剪显示错误，或者背景变为绿色？&quot;&gt;&lt;a href=&quot;#Q-使用ClippingNode，为什么在Android-iOS裁剪显示错误，或者背景变为绿色？&quot; class=&quot;headerlink&quot; title=&quot;Q:使用ClippingNode，为什么在Android/iOS裁剪显示错误，或者背景变为绿色？&quot;&gt;&lt;/a&gt;Q:使用ClippingNode，为什么在Android/iOS裁剪显示错误，或者背景变为绿色？&lt;/h3&gt;&lt;p&gt;未开启OpenGL深度缓存，解决方法如下：&lt;/p&gt;
&lt;p&gt;&lt;em&gt;(1)iOS：在AppController.mm修改&lt;/em&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;figcaption&gt;&lt;span&gt;iOS修改深度缓存&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;EAGLView *__glView = [EAGLView viewWithFrame: [window bounds]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                    pixelFormat: kEAGLColorFormatRGBA8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                    depthFormat: GL_DEPTH24_STEN&lt;span class=&quot;built_in&quot;&gt;CIL8_OES&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                             preserveBackbuffer: &lt;span class=&quot;literal&quot;&gt;NO&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                     sharegroup: &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                  multiSampling: &lt;span class=&quot;literal&quot;&gt;NO&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                numberOfSamples: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;em&gt;(2)Android：在AppActivity.java修改&lt;/em&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;figcaption&gt;&lt;span&gt;Android修改深度缓存&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;AppActivity&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Cocos2dxActivity&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; Cocos2dxGLSurfaceView &lt;span class=&quot;title&quot;&gt;onCreateView&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       Cocos2dxGLSurfaceView glSurfaceView = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Cocos2dxGLSurfaceView(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;comment&quot;&gt;// TestCpp should create stencil buffer&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          glSurfaceView.setEGLConfigChooser(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; glSurfaceView;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3 id=&quot;Q-如何在Cocos2d-x实现C-调用Java？&quot;&gt;&lt;a href=&quot;#Q-如何在Cocos2d-x实现C-调用Java？&quot; class=&quot;headerlink&quot; title=&quot;Q:如何在Cocos2d-x实现C++调用Java？&quot;&gt;&lt;/a&gt;Q:如何在Cocos2d-x实现C++调用Java？&lt;/h3&gt;&lt;p&gt;C++调用Java代码主要是通过JNI实现，这里以Cocos2d-x 3.2为例。&lt;/p&gt;
&lt;p&gt;(1)C++部分：&lt;/p&gt;
&lt;p&gt;在HelloWorld.cpp增加如下函数，用于调用java代码。&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;figcaption&gt;&lt;span&gt;C++代码&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;if&lt;/span&gt; (CC_TARGET_PLATFORM == CC_PLATFORM_ANDROID)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;jni.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;platform/android/jni/JniHelper.h&quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;cocos2d.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;endif&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; HelloWorld::testJNI()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;if&lt;/span&gt; (CC_TARGET_PLATFORM == CC_PLATFORM_ANDROID)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	JniMethodInfo minfo;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; isHave = JniHelper::getStaticMethodInfo(minfo,&lt;span class=&quot;string&quot;&gt;&quot;org/cocos2dx/cpp/AppActivity&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;testjni&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;()V&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!isHave) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   		&lt;span class=&quot;built_in&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;jni:testjni is null&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   		minfo.env-&amp;gt;CallStaticVoidMethod(minfo.classID, minfo.methodID);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;endif&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;(2)Java部分：&lt;/p&gt;
&lt;p&gt;在org.cocos2dx.cpp.Activity中增加如下函数，供C++调用。&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;figcaption&gt;&lt;span&gt;Java代码&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;testjni&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;From Java&quot;&lt;/span&gt;); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;更详细的使用说明，请参考：&lt;a href=&quot;http://docs.oracle.com/javase/6/docs/technotes/guides/jni/spec/jniTOC.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Java Native Interface Specification&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3 id=&quot;Q-如何在Cocos2d-x实现Java调用C-？&quot;&gt;&lt;a href=&quot;#Q-如何在Cocos2d-x实现Java调用C-？&quot; class=&quot;headerlink&quot; title=&quot;Q:如何在Cocos2d-x实现Java调用C++？&quot;&gt;&lt;/a&gt;Q:如何在Cocos2d-x实现Java调用C++？&lt;/h3&gt;&lt;p&gt;Java调C++代码也是通过JNI实现，当然Android给我们提供了更方便的工具NDK。由于这里是以Cocos2d-x为例，所以不再去赘述NDK使用。同样以Cocos2d-x 3.2为例。&lt;/p&gt;
&lt;p&gt;(1)C++部分：&lt;/p&gt;
&lt;p&gt;在HelloWorld.cpp增加如下函数，供java调用。&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;figcaption&gt;&lt;span&gt;C++代码	&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;jni.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;ifdef&lt;/span&gt; __cplusplus&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;extern&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;C&quot;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;endif&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;function&quot;&gt;JNIEXPORT jstring JNICALL &lt;span class=&quot;title&quot;&gt;Java_org_cocos2dx_cpp_AppActivity_testjni&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;params&quot;&gt;(JNIEnv *env, jclass)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       return env-&amp;gt;NewStringUTF(&lt;span class=&quot;string&quot;&gt;&quot;From C++&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;ifdef&lt;/span&gt; __cplusplus&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;endif&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;(2)Java部分：&lt;/p&gt;
&lt;p&gt;在org.cocos2dx.cpp.Activity中增加如下函数，用于调用C++代码。&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;figcaption&gt;&lt;span&gt;java代码&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;AppActivity&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Cocos2dxActivity&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Bundle savedInstanceState)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;// TODO Auto-generated method stub&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.onCreate(savedInstanceState);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	System.out.println(testjni());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;native&lt;/span&gt; String &lt;span class=&quot;title&quot;&gt;testjni&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;参考地址：&lt;a href=&quot;https://www3.ntu.edu.sg/home/ehchua/programming/java/JavaNativeInterface.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Java Programming Tutorial Java Native Interface&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3 id=&quot;Q-如何在Cocos2d-x实现截图功能？&quot;&gt;&lt;a href=&quot;#Q-如何在Cocos2d-x实现截图功能？&quot; class=&quot;headerlink&quot; title=&quot;Q:如何在Cocos2d-x实现截图功能？&quot;&gt;&lt;/a&gt;Q:如何在Cocos2d-x实现截图功能？&lt;/h3&gt;&lt;p&gt;&lt;em&gt;（1）Cocos2d-x 2.x&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Cocos2d-x 2.x没有提供截图功能，但是可以用CCRenderTexture来实现这个功能&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;figcaption&gt;&lt;span&gt;SaveScreenShot&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; CTestLayer::SaveScreenShot()  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;comment&quot;&gt;//获取屏幕尺寸  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	CCSize size = CCDirector::sharedDirector()-&amp;gt;getWinSize();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;comment&quot;&gt;//使用屏幕尺寸初始化一个空的渲染纹理对象  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	CCRenderTexture* texture = CCRenderTexture::create((int)size.width, (int)size.height);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;comment&quot;&gt;//设置位置      &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	texture-&amp;gt;setPosition(ccp(size.width/&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, size.height/&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;));  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;comment&quot;&gt;//开始获取      &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	texture-&amp;gt;begin();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;comment&quot;&gt;//遍历场景节点对象，填充纹理到texure中  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	CCDirector::sharedDirector()-&amp;gt;getRunningScene()-&amp;gt;visit();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;comment&quot;&gt;//结束获取  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	texture-&amp;gt;end();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;comment&quot;&gt;//保存为PNG图，Win32/Debug目录下  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	texture-&amp;gt;saveToFile(&lt;span class=&quot;string&quot;&gt;&quot;screenshot.png&quot;&lt;/span&gt;, kCCImageFormatPNG);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;em&gt;（2）Cocos2d-x 3.x&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;在Cocos2d-x 3.2之前，引擎也没有提供截图功能，同样可以使用RenderTexture实现&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;figcaption&gt;&lt;span&gt;SaveScreenShot&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; Director::saveScreenshot(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt;&amp;amp; fileName,&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::function&amp;lt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;(const std::string&amp;amp;)&amp;gt;&amp;amp; callback)  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	Image::Format format;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;comment&quot;&gt;//进行后缀判断  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt;::npos != fileName.find_last_of(&lt;span class=&quot;string&quot;&gt;&quot;.&quot;&lt;/span&gt;))&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;auto&lt;/span&gt; extension = fileName.substr(fileName.find_last_of(&lt;span class=&quot;string&quot;&gt;&quot;.&quot;&lt;/span&gt;),fileName.length());  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!extension.compare(&lt;span class=&quot;string&quot;&gt;&quot;.png&quot;&lt;/span&gt;)) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           format = Image::Format::PNG;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(!extension.compare(&lt;span class=&quot;string&quot;&gt;&quot;.jpg&quot;&lt;/span&gt;)) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           format = Image::Format::JPG;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;built_in&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;cocos2d: the image can only be saved as JPG or PNG format&quot;&lt;/span&gt;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           return;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;built_in&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;cocos2d: the image can only be saved as JPG or PNG format&quot;&lt;/span&gt;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       return ;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;comment&quot;&gt;//获取屏幕尺寸，初始化一个空的渲染纹理对象  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;keyword&quot;&gt;auto&lt;/span&gt; renderTexture = RenderTexture::create(getWinSize().width, getWinSize().height, Texture2D::PixelFormat::RGBA8888);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;comment&quot;&gt;//清空并开始获取  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	renderTexture-&amp;gt;beginWithClear(&lt;span class=&quot;number&quot;&gt;0.0f&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0.0f&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0.0f&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0.0f&lt;/span&gt;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;comment&quot;&gt;//遍历场景节点对象，填充纹理到RenderTexture中  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	getRunningScene()-&amp;gt;visit();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;comment&quot;&gt;//结束获取  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	renderTexture-&amp;gt;end();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;comment&quot;&gt;//保存文件  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	renderTexture-&amp;gt;saveToFile(fileName , format);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;comment&quot;&gt;//使用schedule在下一帧中调用callback函数  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;keyword&quot;&gt;auto&lt;/span&gt; fullPath = FileUtils::getInstance()-&amp;gt;getWritablePath() + fileName;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;keyword&quot;&gt;auto&lt;/span&gt; scheduleCallback = [&amp;amp;,fullPath,callback](float dt)&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       	callback(fullPath);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&amp;#125;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;keyword&quot;&gt;auto&lt;/span&gt; _schedule = getRunningScene()-&amp;gt;getScheduler();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	_schedule-&amp;gt;schedule(scheduleCallback, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0.0f&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0.0f&lt;/span&gt;, &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;screenshot&quot;&lt;/span&gt;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;从Cocos2d-x 3.2之后开始，引擎提供了captureScreen函数来实现截图功能&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;figcaption&gt;&lt;span&gt;captureScreen&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; Util::captureScreen(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::function&amp;lt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;(bool, const std::string&amp;amp;)&amp;gt;&amp;amp; afterCaptured, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt;&amp;amp; filename);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3 id=&quot;Q-如何在Cocos2d-x获取随机数？&quot;&gt;&lt;a href=&quot;#Q-如何在Cocos2d-x获取随机数？&quot; class=&quot;headerlink&quot; title=&quot;Q:如何在Cocos2d-x获取随机数？&quot;&gt;&lt;/a&gt;Q:如何在Cocos2d-x获取随机数？&lt;/h3&gt;&lt;p&gt;首先计算机是无法产生真正的随机数的，都是伪随机。获取随机数的方式和算法多种多样，这里只给出一种方法，基于最新的C++11。&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;figcaption&gt;&lt;span&gt;随机数产生&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;random&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::uniform_int_distribution&amp;lt;&lt;span class=&quot;keyword&quot;&gt;unsigned&lt;/span&gt;&amp;gt; u(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::default_random_engine e;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   e.seed((unsigned)time(NULL));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; random_number = u(e);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这个例子产生了一个范围在1～1000的随机数（这里采用的标准分布是离散型均匀分布）。&lt;/p&gt;
&lt;p&gt;参考：&lt;a href=&quot;http://www.stroustrup.com/C++11FAQ.html#std-random&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;C++11:Random number generation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3 id=&quot;Q-为什么直接点击Windows平台生成的exe可执行文件，提示程序已停止工作？&quot;&gt;&lt;a href=&quot;#Q-为什么直接点击Windows平台生成的exe可执行文件，提示程序已停止工作？&quot; class=&quot;headerlink&quot; title=&quot;Q:为什么直接点击Windows平台生成的exe可执行文件，提示程序已停止工作？&quot;&gt;&lt;/a&gt;Q:为什么直接点击Windows平台生成的exe可执行文件，提示程序已停止工作？&lt;/h3&gt;&lt;p&gt;这里以Cocos2d-x 3.2为例。&lt;/p&gt;
&lt;p&gt;(1)如果直接在Visual Studio编译生成目标文件，那么目标文件会被生成到&lt;code&gt;项目/proj.win32/Debug.win32&lt;/code&gt;目录下（debug模式）或者&lt;code&gt;项目/proj.win32/release.win32&lt;/code&gt;目录下（release模式）。由于资源文件没有拷贝到目标文件目录的关系，此时点击xxx.exe，程序会停止工作。&lt;/p&gt;
&lt;p&gt;解决方法是：手动将资源文件拷贝到xxx.exe同级目录下。&lt;/p&gt;
&lt;p&gt;(2)如果采用的是命令行&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cocos run -p win32
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;那目标文件会被生成到&lt;code&gt;项目/bin/debug/win32&lt;/code&gt;目录下，同时资源文件也会被拷贝到这个文件夹，此时直接点击xxx.exe就可以运行。&lt;code&gt;项目/proj.win32/Debug.win32&lt;/code&gt;目录也会有xxx.exe，点击也会提示停止工作，解决方法同上。&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3 id=&quot;Q-如何在popScene时使用场景过渡效果？&quot;&gt;&lt;a href=&quot;#Q-如何在popScene时使用场景过渡效果？&quot; class=&quot;headerlink&quot; title=&quot;Q:如何在popScene时使用场景过渡效果？&quot;&gt;&lt;/a&gt;Q:如何在popScene时使用场景过渡效果？&lt;/h3&gt;&lt;p&gt;这里以Cocos2d-x 3.2为例。需要修改引擎的Director::popScene()函数，也可以进行重载或者设置默认参数。&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;figcaption&gt;&lt;span&gt;popScene&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; Director::popScene(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::function&amp;lt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;(Scene* &amp;amp;)&amp;gt;&amp;amp; callback)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	CCASSERT(_runningScene != &lt;span class=&quot;literal&quot;&gt;nullptr&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;running scene should not null&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	_scenesStack.popBack();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;keyword&quot;&gt;ssize_t&lt;/span&gt; c = _scenesStack.size();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (c == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       	end();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       	_sendCleanupToScene = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       	_nextScene = _scenesStack.at(c - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(callback)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       		callback(_nextScene);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;使用方式：&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;figcaption&gt;&lt;span&gt;使用新的popScene&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;auto&lt;/span&gt; callback = [](Scene*&amp;amp; scene)&amp;#123;scene = TransitionJumpZoom::create(&lt;span class=&quot;number&quot;&gt;1.0f&lt;/span&gt;, scene);&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   Director::getInstance()-&amp;gt;popScene(callback);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Q-如何在安卓上给应用程序设置透明背景？&quot;&gt;&lt;a href=&quot;#Q-如何在安卓上给应用程序设置透明背景？&quot; class=&quot;headerlink&quot; title=&quot;Q:如何在安卓上给应用程序设置透明背景？&quot;&gt;&lt;/a&gt;Q:如何在安卓上给应用程序设置透明背景？&lt;/h3&gt;&lt;p&gt;(1)NativeActivity，以Cocos2d-x 3.0 rc0为例&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.cocoachina.com/bbs/read.php?tid=196780&quot;&gt;http://www.cocoachina.com/bbs/read.php?tid=196780&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(2)JavaActivity，以Cocos2d-x 3.2 release为例&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.cocoachina.com/bbs/read.php?tid=224544&quot;&gt;http://www.cocoachina.com/bbs/read.php?tid=224544&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Cocos2dx-FAQ" scheme="http://fusijie.github.io/categories/Cocos2dx-FAQ/"/>
    
    
  </entry>
  
  <entry>
    <title>PowerCmd，一个Windows下cmd的绝佳替代工具</title>
    <link href="http://fusijie.github.io/2014/08/24/tools-powercmd/"/>
    <id>http://fusijie.github.io/2014/08/24/tools-powercmd/</id>
    <published>2014-08-23T16:48:00.000Z</published>
    <updated>2014-08-30T16:30:00.000Z</updated>
    
    <content type="html">&lt;p&gt;由于工作关系（码奴），平时会需要接触到比较多奇奇怪怪的应用。而一些比较好的小众软件和工具，我觉得很有必要分享出来。这是第一篇，之后有的话会慢慢积累分享出来，如果你们也有好的软件，欢迎留言分享。&lt;/p&gt;
&lt;p&gt;因为只是介绍工具而已，所以内容会很简单。&lt;/p&gt;
&lt;p&gt;当然这里没有任何的广告成分。次奥。。。谁会给我广告费啊。。。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;blockquote&gt;
&lt;p&gt;当我第一次知道要写这些的时候，其实我是拒绝的！因为我觉得…呀…你不能叫我马上写，第一，我要试一下，我又不想说…我一篇文章写完以后加了很多特技，那工具赞啊…很酷！很炫！很屌！结果读者出来一定骂我，根本没有这种工具！这证明上面那个是假的……我说先要给我试一下。后来我经过也知道他们是很实在的，而且没有那种虚假成分的。那…用了这个月…这个月下来之后呢……起码我用了很舒服。现在呢…每天还在用！每天还在用呢…我还给了我团队用！来！来！来！大家试试看！那我跟读者讲∶「写的时候就写！写完之后，这个文章就是我的文章，就不要加，再加特技上去，加到没有就是这样子！我要给读者看到，我用完之后是这样子，你们用完之后，也是这样子！ &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;好了，黑完进入正题~&lt;/p&gt;
&lt;p&gt;用过Mac terminal的都会觉得Windows下的cmd就是一渣，但是没办法，各种原因有时候我们就得在渣上工作。前两天遇到了个问题：&lt;code&gt;cd始终无法切换文件夹目录&lt;/code&gt;，虽然后来找到了解决办法，但是还是决心找个cmd的替代品。&lt;/p&gt;
&lt;p&gt;解决方法：cd后增加&lt;code&gt;/d&lt;/code&gt;即可。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd /d F:/
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这一找不得了，&lt;strong&gt;PowerCmd&lt;/strong&gt;进入我的视野，官方网站是：&lt;a href=&quot;http://www.powercmd.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.powercmd.com/&lt;/a&gt;。&lt;/p&gt;
&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;http://www-fusijie-com.qiniudn.com/tools_powercmd_maintext.jpg&quot; alt=&quot;&quot; border=&quot;0&quot; title=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;

&lt;p&gt;我们来看看它有多强大。&lt;/p&gt;
&lt;p&gt;1.&lt;code&gt;多tab窗口&lt;/code&gt;，你可以同时在PowerCmd打开多个cmd窗口，根据你的喜好进行排列，如上图。可以最小化，也可以全屏。&lt;/p&gt;
&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;http://www-fusijie-com.qiniudn.com/tools_powercmd_pic%20001.png&quot; alt=&quot;&quot; border=&quot;0&quot; title=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;

&lt;p&gt;2.&lt;code&gt;保存&lt;/code&gt;工作状态，并在下次启动时&lt;code&gt;恢复&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;3.&lt;code&gt;集成到shell&lt;/code&gt;，右键点击任意文件夹，你会发现多了改PowerCmd的菜单，点击该菜单，启动PowerCmd，并默认cd到当前目录。碉堡了，省了很多cd是不是？&lt;/p&gt;
&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;http://www-fusijie-com.qiniudn.com/tools_powercmd_pic%20002.png&quot; alt=&quot;&quot; border=&quot;0&quot; title=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;


&lt;p&gt;4.自带的cmd复制粘贴很麻烦，PowerCmd的&lt;code&gt;复制粘贴&lt;/code&gt;就像操作普通文本一样。&lt;/p&gt;
&lt;p&gt;5.&lt;code&gt;书签&lt;/code&gt;功能，内容&lt;code&gt;过滤&lt;/code&gt;功能，内容&lt;code&gt;自动保存&lt;/code&gt;功能，内容&lt;code&gt;查找高亮&lt;/code&gt;功能。&lt;/p&gt;
&lt;p&gt;6.顶部&lt;code&gt;快捷登录&lt;/code&gt;工具栏，可以自定义你的应用。&lt;/p&gt;
&lt;p&gt;7.表格的形式&lt;code&gt;可视化地查看系统环境变量&lt;/code&gt;等参数，终于不用再“我的电脑”-&amp;gt;右键-&amp;gt;xxx…&lt;/p&gt;
&lt;div align=&quot;center&quot;&gt;&amp;lt;img src=”&lt;a href=&quot;http://www-fusijie-com.qiniudn.com/tools_powercmd_pic%20003.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www-fusijie-com.qiniudn.com/tools_powercmd_pic%20003.png&lt;/a&gt;“” alt=”” border=”0” title=”” /&amp;gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;


&lt;p&gt;8.&lt;code&gt;自动提示&lt;/code&gt;，主要是针对文件夹。这个比mac terminal还屌啊。。。&lt;/p&gt;
&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;http://www-fusijie-com.qiniudn.com/tools_powercmd_pic%20004.png&quot; alt=&quot;&quot; border=&quot;0&quot; title=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;

&lt;p&gt;9.其他&lt;code&gt;自定义功能&lt;/code&gt;，比如行号，外观颜色、透明度等等，尽情DIY吧。。。&lt;/p&gt;
&lt;p&gt;好了，看了半天还不如动手试试，软件是收费的，不过有一个月的试用期。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Win下coding，良心推荐。&lt;/strong&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;由于工作关系（码奴），平时会需要接触到比较多奇奇怪怪的应用。而一些比较好的小众软件和工具，我觉得很有必要分享出来。这是第一篇，之后有的话会慢慢积累分享出来，如果你们也有好的软件，欢迎留言分享。&lt;/p&gt;
&lt;p&gt;因为只是介绍工具而已，所以内容会很简单。&lt;/p&gt;
&lt;p&gt;当然这里没有任何的广告成分。次奥。。。谁会给我广告费啊。。。&lt;/p&gt;
    
    </summary>
    
      <category term="Tools" scheme="http://fusijie.github.io/categories/Tools/"/>
    
    
      <category term="PowerCmd" scheme="http://fusijie.github.io/tags/PowerCmd/"/>
    
  </entry>
  
  <entry>
    <title>【玩转cocos2d-x之三十八】粒子系统的加载优化</title>
    <link href="http://fusijie.github.io/2014/08/23/play-cocos2dx-38/"/>
    <id>http://fusijie.github.io/2014/08/23/play-cocos2dx-38/</id>
    <published>2014-08-23T09:02:11.000Z</published>
    <updated>2016-04-30T09:16:41.000Z</updated>
    
    <content type="html">&lt;p&gt;Cocos2d-x的粒子系统是通过加载plist生成的。plist包含两部分内容：粒子系统属性和粒子纹理。然而每次调用create都会对plist进行读取解析，如果重复地使用同一个粒子效果，这样的调用明显是低效冗余的。所以我们要做的是，将粒子系统属性和粒子纹理分别抽出。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;将粒子系统属性预加载并全局保存，避免每次进行读取。&lt;/li&gt;
&lt;li&gt;粒子纹理可视且可以进行纹理打包，加载粒子纹理就和加载普通的图片一样。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;本文通过增加ParticleSystemQuad的接口实现对粒子系统属性和纹理帧的直接载入，来提高粒子系统的加载效率和实现内存纹理的优化。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;ParticleSystemQuad&quot;&gt;&lt;a href=&quot;#ParticleSystemQuad&quot; class=&quot;headerlink&quot; title=&quot;ParticleSystemQuad&quot;&gt;&lt;/a&gt;ParticleSystemQuad&lt;/h3&gt;&lt;p&gt;首先先看下ParticleSystemQuad，ParticleSystemQuad继承于ParticleSystem，拥有后者的所有特性，并且增加了一些新的特性：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;粒子大小支持浮点数&lt;/li&gt;
&lt;li&gt;支持缩放&lt;/li&gt;
&lt;li&gt;支持选择&lt;/li&gt;
&lt;li&gt;支持subrect&lt;/li&gt;
&lt;li&gt;支持批渲染&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ParticleSystemQuad同时也是其他特效的父类，创建一个粒子系统的函数调用顺序为：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Create→initWithFile→initWithDictionary
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;在initWithDictionary中对粒子数据和纹理进行了读取和解析（这部分有兴趣的可以直接看源码）。&lt;/p&gt;
&lt;h3 id=&quot;如何优化？&quot;&gt;&lt;a href=&quot;#如何优化？&quot; class=&quot;headerlink&quot; title=&quot;如何优化？&quot;&gt;&lt;/a&gt;如何优化？&lt;/h3&gt;&lt;p&gt;参考initWithDictionary的函参&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;initWithDictionary&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(ValueMap&amp;amp; dictionary, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt;&amp;amp; dirname)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;设计如下接口，当然你要传入文件名也可以：&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; ParticleSystemQuad * &lt;span class=&quot;title&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(ValueMap&amp;amp; valueMap, SpriteFrame *frame)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;initWithValueMap&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(ValueMap &amp;amp;valueMap, SpriteFrame* frame)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;源码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ParticleSystemQuad * ParticleSystemQuad::create( ValueMap&amp;amp; &lt;span class=&quot;built_in&quot;&gt;map&lt;/span&gt;, SpriteFrame *frame)  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     ParticleSystemQuad *ret = new ParticleSystemQuad();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (ret &amp;amp;&amp;amp; ret-&amp;gt;initWithValueMap(map, frame))  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         ret-&amp;gt;autorelease();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         return ret;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     CC_SAFE_DELETE(ret);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     return ret;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;115&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;116&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;117&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;118&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;119&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;120&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;121&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;122&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;123&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;124&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;125&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;126&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;127&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;128&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;129&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;130&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;131&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;132&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;133&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;134&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;135&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;136&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;137&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;138&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;139&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;140&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;141&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;142&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;143&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;144&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;145&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;146&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;147&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;148&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;149&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;150&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;151&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;152&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;153&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;154&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;155&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;156&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;157&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;158&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;159&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;160&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;161&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;162&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;163&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; ParticleSystemQuad::initWithValueMap(ValueMap &amp;amp;valueMap, SpriteFrame* frame)  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt; dirname = &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; ret = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;keyword&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *buffer = &lt;span class=&quot;literal&quot;&gt;nullptr&lt;/span&gt;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;keyword&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *deflated = &lt;span class=&quot;literal&quot;&gt;nullptr&lt;/span&gt;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; maxParticles = valueMap[&lt;span class=&quot;string&quot;&gt;&quot;maxParticles&quot;&lt;/span&gt;].asInt();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;comment&quot;&gt;// self, not super  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;-&amp;gt;initWithTotalParticles(maxParticles))  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &lt;span class=&quot;comment&quot;&gt;// Emitter name in particle designer 2.0  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             _configName = valueMap[&lt;span class=&quot;string&quot;&gt;&quot;configName&quot;&lt;/span&gt;].asString();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &lt;span class=&quot;comment&quot;&gt;// angle  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             _angle = valueMap[&lt;span class=&quot;string&quot;&gt;&quot;angle&quot;&lt;/span&gt;].asFloat();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             _angleVar = valueMap[&lt;span class=&quot;string&quot;&gt;&quot;angleVariance&quot;&lt;/span&gt;].asFloat();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &lt;span class=&quot;comment&quot;&gt;// duration  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             _duration = valueMap[&lt;span class=&quot;string&quot;&gt;&quot;duration&quot;&lt;/span&gt;].asFloat();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &lt;span class=&quot;comment&quot;&gt;// blend function  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (_configName.length()&amp;gt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 _blendFunc.src = valueMap[&lt;span class=&quot;string&quot;&gt;&quot;blendFuncSource&quot;&lt;/span&gt;].asFloat();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 _blendFunc.src = valueMap[&lt;span class=&quot;string&quot;&gt;&quot;blendFuncSource&quot;&lt;/span&gt;].asInt();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             _blendFunc.dst = valueMap[&lt;span class=&quot;string&quot;&gt;&quot;blendFuncDestination&quot;&lt;/span&gt;].asInt();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &lt;span class=&quot;comment&quot;&gt;// color  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             _startColor.r = valueMap[&lt;span class=&quot;string&quot;&gt;&quot;startColorRed&quot;&lt;/span&gt;].asFloat();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             _startColor.g = valueMap[&lt;span class=&quot;string&quot;&gt;&quot;startColorGreen&quot;&lt;/span&gt;].asFloat();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             _startColor.b = valueMap[&lt;span class=&quot;string&quot;&gt;&quot;startColorBlue&quot;&lt;/span&gt;].asFloat();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             _startColor.a = valueMap[&lt;span class=&quot;string&quot;&gt;&quot;startColorAlpha&quot;&lt;/span&gt;].asFloat();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             _startColorVar.r = valueMap[&lt;span class=&quot;string&quot;&gt;&quot;startColorVarianceRed&quot;&lt;/span&gt;].asFloat();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             _startColorVar.g = valueMap[&lt;span class=&quot;string&quot;&gt;&quot;startColorVarianceGreen&quot;&lt;/span&gt;].asFloat();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             _startColorVar.b = valueMap[&lt;span class=&quot;string&quot;&gt;&quot;startColorVarianceBlue&quot;&lt;/span&gt;].asFloat();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             _startColorVar.a = valueMap[&lt;span class=&quot;string&quot;&gt;&quot;startColorVarianceAlpha&quot;&lt;/span&gt;].asFloat();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             _endColor.r = valueMap[&lt;span class=&quot;string&quot;&gt;&quot;finishColorRed&quot;&lt;/span&gt;].asFloat();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             _endColor.g = valueMap[&lt;span class=&quot;string&quot;&gt;&quot;finishColorGreen&quot;&lt;/span&gt;].asFloat();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             _endColor.b = valueMap[&lt;span class=&quot;string&quot;&gt;&quot;finishColorBlue&quot;&lt;/span&gt;].asFloat();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             _endColor.a = valueMap[&lt;span class=&quot;string&quot;&gt;&quot;finishColorAlpha&quot;&lt;/span&gt;].asFloat();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             _endColorVar.r = valueMap[&lt;span class=&quot;string&quot;&gt;&quot;finishColorVarianceRed&quot;&lt;/span&gt;].asFloat();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             _endColorVar.g = valueMap[&lt;span class=&quot;string&quot;&gt;&quot;finishColorVarianceGreen&quot;&lt;/span&gt;].asFloat();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             _endColorVar.b = valueMap[&lt;span class=&quot;string&quot;&gt;&quot;finishColorVarianceBlue&quot;&lt;/span&gt;].asFloat();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             _endColorVar.a = valueMap[&lt;span class=&quot;string&quot;&gt;&quot;finishColorVarianceAlpha&quot;&lt;/span&gt;].asFloat();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &lt;span class=&quot;comment&quot;&gt;// particle size  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             _startSize = valueMap[&lt;span class=&quot;string&quot;&gt;&quot;startParticleSize&quot;&lt;/span&gt;].asFloat();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             _startSizeVar = valueMap[&lt;span class=&quot;string&quot;&gt;&quot;startParticleSizeVariance&quot;&lt;/span&gt;].asFloat();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             _endSize = valueMap[&lt;span class=&quot;string&quot;&gt;&quot;finishParticleSize&quot;&lt;/span&gt;].asFloat();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             _endSizeVar = valueMap[&lt;span class=&quot;string&quot;&gt;&quot;finishParticleSizeVariance&quot;&lt;/span&gt;].asFloat();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &lt;span class=&quot;comment&quot;&gt;// position  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &lt;span class=&quot;keyword&quot;&gt;float&lt;/span&gt; x = valueMap[&lt;span class=&quot;string&quot;&gt;&quot;sourcePositionx&quot;&lt;/span&gt;].asFloat();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &lt;span class=&quot;keyword&quot;&gt;float&lt;/span&gt; y = valueMap[&lt;span class=&quot;string&quot;&gt;&quot;sourcePositiony&quot;&lt;/span&gt;].asFloat();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;-&amp;gt;setPosition( Point(x,y) );  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             _posVar.x = valueMap[&lt;span class=&quot;string&quot;&gt;&quot;sourcePositionVariancex&quot;&lt;/span&gt;].asFloat();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             _posVar.y = valueMap[&lt;span class=&quot;string&quot;&gt;&quot;sourcePositionVariancey&quot;&lt;/span&gt;].asFloat();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &lt;span class=&quot;comment&quot;&gt;// Spinning  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             _startSpin = valueMap[&lt;span class=&quot;string&quot;&gt;&quot;rotationStart&quot;&lt;/span&gt;].asFloat();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             _startSpinVar = valueMap[&lt;span class=&quot;string&quot;&gt;&quot;rotationStartVariance&quot;&lt;/span&gt;].asFloat();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             _endSpin= valueMap[&lt;span class=&quot;string&quot;&gt;&quot;rotationEnd&quot;&lt;/span&gt;].asFloat();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             _endSpinVar= valueMap[&lt;span class=&quot;string&quot;&gt;&quot;rotationEndVariance&quot;&lt;/span&gt;].asFloat();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             _emitterMode = (Mode) valueMap[&lt;span class=&quot;string&quot;&gt;&quot;emitterType&quot;&lt;/span&gt;].asInt();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &lt;span class=&quot;comment&quot;&gt;// Mode A: Gravity + tangential accel + radial accel  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (_emitterMode == Mode::GRAVITY)  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 &lt;span class=&quot;comment&quot;&gt;// gravity  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 modeA.gravity.x = valueMap[&lt;span class=&quot;string&quot;&gt;&quot;gravityx&quot;&lt;/span&gt;].asFloat();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 modeA.gravity.y = valueMap[&lt;span class=&quot;string&quot;&gt;&quot;gravityy&quot;&lt;/span&gt;].asFloat();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 &lt;span class=&quot;comment&quot;&gt;// speed  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 modeA.speed = valueMap[&lt;span class=&quot;string&quot;&gt;&quot;speed&quot;&lt;/span&gt;].asFloat();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 modeA.speedVar = valueMap[&lt;span class=&quot;string&quot;&gt;&quot;speedVariance&quot;&lt;/span&gt;].asFloat();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 &lt;span class=&quot;comment&quot;&gt;// radial acceleration  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 modeA.radialAccel = valueMap[&lt;span class=&quot;string&quot;&gt;&quot;radialAcceleration&quot;&lt;/span&gt;].asFloat();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 modeA.radialAccelVar = valueMap[&lt;span class=&quot;string&quot;&gt;&quot;radialAccelVariance&quot;&lt;/span&gt;].asFloat();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 &lt;span class=&quot;comment&quot;&gt;// tangential acceleration  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 modeA.tangentialAccel = valueMap[&lt;span class=&quot;string&quot;&gt;&quot;tangentialAcceleration&quot;&lt;/span&gt;].asFloat();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 modeA.tangentialAccelVar = valueMap[&lt;span class=&quot;string&quot;&gt;&quot;tangentialAccelVariance&quot;&lt;/span&gt;].asFloat();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 &lt;span class=&quot;comment&quot;&gt;// rotation is dir  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 modeA.rotationIsDir = valueMap[&lt;span class=&quot;string&quot;&gt;&quot;rotationIsDir&quot;&lt;/span&gt;].asBool();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &lt;span class=&quot;comment&quot;&gt;// or Mode B: radius movement  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (_emitterMode == Mode::RADIUS)  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (_configName.length()&amp;gt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                     modeB.startRadius = valueMap[&lt;span class=&quot;string&quot;&gt;&quot;maxRadius&quot;&lt;/span&gt;].asInt();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                     modeB.startRadius = valueMap[&lt;span class=&quot;string&quot;&gt;&quot;maxRadius&quot;&lt;/span&gt;].asFloat();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 modeB.startRadiusVar = valueMap[&lt;span class=&quot;string&quot;&gt;&quot;maxRadiusVariance&quot;&lt;/span&gt;].asFloat();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (_configName.length()&amp;gt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                     modeB.endRadius = valueMap[&lt;span class=&quot;string&quot;&gt;&quot;minRadius&quot;&lt;/span&gt;].asInt();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                     modeB.endRadius = valueMap[&lt;span class=&quot;string&quot;&gt;&quot;minRadius&quot;&lt;/span&gt;].asFloat();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 modeB.endRadiusVar = &lt;span class=&quot;number&quot;&gt;0.0f&lt;/span&gt;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (_configName.length()&amp;gt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                     modeB.rotatePerSecond = valueMap[&lt;span class=&quot;string&quot;&gt;&quot;rotatePerSecond&quot;&lt;/span&gt;].asInt();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                     modeB.rotatePerSecond = valueMap[&lt;span class=&quot;string&quot;&gt;&quot;rotatePerSecond&quot;&lt;/span&gt;].asFloat();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 modeB.rotatePerSecondVar = valueMap[&lt;span class=&quot;string&quot;&gt;&quot;rotatePerSecondVariance&quot;&lt;/span&gt;].asFloat();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 CCASSERT( false, &lt;span class=&quot;string&quot;&gt;&quot;Invalid emitterType in config file&quot;&lt;/span&gt;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 CC_BREAK_IF(&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &lt;span class=&quot;comment&quot;&gt;// life span  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             _life = valueMap[&lt;span class=&quot;string&quot;&gt;&quot;particleLifespan&quot;&lt;/span&gt;].asFloat();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             _lifeVar = valueMap[&lt;span class=&quot;string&quot;&gt;&quot;particleLifespanVariance&quot;&lt;/span&gt;].asFloat();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &lt;span class=&quot;comment&quot;&gt;// emission Rate  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             _emissionRate = _totalParticles / _life;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &lt;span class=&quot;comment&quot;&gt;//don&#39;t get the internal texture if a batchNode is used  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!_batchNode)  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 &lt;span class=&quot;comment&quot;&gt;// Set a compatible default for the alpha transfer  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 _opacityModifyRGB = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!_configName.empty())  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                     _yCoordFlipped = valueMap[&lt;span class=&quot;string&quot;&gt;&quot;yCoordFlipped&quot;&lt;/span&gt;].asInt();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             setDisplayFrame(frame);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             ret = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &amp;#125; &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;built_in&quot;&gt;free&lt;/span&gt;(buffer);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;built_in&quot;&gt;free&lt;/span&gt;(deflated);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     return ret;   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;注意，这里只是提供了通过粒子系统属性和纹理创建粒子系统的接口，并没有实现对粒子属性的全局保存（可以参考&lt;a href=&quot;http://www.cocoachina.com/bbs/read.php?tid=194900&amp;amp;fpage=2&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Earth Warriors 3D中ParticleManager&lt;/a&gt;的实现）和图片帧的预加载。&lt;/p&gt;
&lt;p&gt;粒子属性的获取：&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ValueMap FileUtilsApple::getValueMapFromFile(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt;&amp;amp; filename);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;图片帧的获取（这个获取方式就比较多了。。。）：&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;SpriteFrame* &lt;span class=&quot;title&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt;&amp;amp; filename, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; Rect&amp;amp; rect)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;如何使用？&quot;&gt;&lt;a href=&quot;#如何使用？&quot; class=&quot;headerlink&quot; title=&quot;如何使用？&quot;&gt;&lt;/a&gt;如何使用？&lt;/h3&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;auto&lt;/span&gt; plistData = FileUtils::getInstance()-&amp;gt;getValueMapFromFile(&lt;span class=&quot;string&quot;&gt;&quot;Particles/emissionPart.plist&quot;&lt;/span&gt;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;auto&lt;/span&gt; emission_frame = SpriteFrame::create(&lt;span class=&quot;string&quot;&gt;&quot;Images/engine.jpg&quot;&lt;/span&gt;, Rect(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;25&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;32&lt;/span&gt;));   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;auto&lt;/span&gt; emitter = ParticleSystemQuad::create(plistData, emission_frame);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;_background-&amp;gt;addChild(_emitter, &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;源码下载&quot;&gt;&lt;a href=&quot;#源码下载&quot; class=&quot;headerlink&quot; title=&quot;源码下载&quot;&gt;&lt;/a&gt;源码下载&lt;/h3&gt;&lt;p&gt;我也不知道3.0release会不会集成这个功能，这里先发出pull request的链接：&lt;a href=&quot;https://github.com/cocos2d/cocos2d-x/pull/5979/files&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/cocos2d/cocos2d-x/pull/5979/files&lt;/a&gt;（后记：引擎没有集成，想使用更好的方式优化，结果不了了之。）&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Cocos2d-x的粒子系统是通过加载plist生成的。plist包含两部分内容：粒子系统属性和粒子纹理。然而每次调用create都会对plist进行读取解析，如果重复地使用同一个粒子效果，这样的调用明显是低效冗余的。所以我们要做的是，将粒子系统属性和粒子纹理分别抽出。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;将粒子系统属性预加载并全局保存，避免每次进行读取。&lt;/li&gt;
&lt;li&gt;粒子纹理可视且可以进行纹理打包，加载粒子纹理就和加载普通的图片一样。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;本文通过增加ParticleSystemQuad的接口实现对粒子系统属性和纹理帧的直接载入，来提高粒子系统的加载效率和实现内存纹理的优化。&lt;/p&gt;
    
    </summary>
    
      <category term="cocos2d-x" scheme="http://fusijie.github.io/categories/cocos2d-x/"/>
    
    
      <category term="粒子系统" scheme="http://fusijie.github.io/tags/%E7%B2%92%E5%AD%90%E7%B3%BB%E7%BB%9F/"/>
    
      <category term="加载" scheme="http://fusijie.github.io/tags/%E5%8A%A0%E8%BD%BD/"/>
    
      <category term="优化" scheme="http://fusijie.github.io/tags/%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>【玩转cocos2d-x之三十七】在Cocos2d-x中集成安卓版微信SDK</title>
    <link href="http://fusijie.github.io/2014/08/21/play-cocos2dx-37/"/>
    <id>http://fusijie.github.io/2014/08/21/play-cocos2dx-37/</id>
    <published>2014-08-20T16:26:00.000Z</published>
    <updated>2016-04-24T13:23:24.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h3&gt;&lt;p&gt;微信的火热程度已不必说了，如果能在Cocos2d-x中集成微信SDK，让游戏能分享给好友或者朋友圈，那对游戏推广将会是非常有利的。好了，本文就是手把手地教大伙如何在Cocos2d-x中集成微信SDK。&lt;/p&gt;
&lt;h3 id=&quot;环境&quot;&gt;&lt;a href=&quot;#环境&quot; class=&quot;headerlink&quot; title=&quot;环境&quot;&gt;&lt;/a&gt;环境&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;OS: Mac OSX&lt;/li&gt;
&lt;li&gt;IDE: Xcode v5.11 and Eclipse ADT v22.3&lt;/li&gt;
&lt;li&gt;Android SDK:4.0 &lt;/li&gt;
&lt;li&gt;Adnroid NDK:r9d&lt;/li&gt;
&lt;li&gt;Cocos2d-x 3.2release&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;创建Cocos2d-x工程&quot;&gt;&lt;a href=&quot;#创建Cocos2d-x工程&quot; class=&quot;headerlink&quot; title=&quot;创建Cocos2d-x工程&quot;&gt;&lt;/a&gt;创建Cocos2d-x工程&lt;/h3&gt;&lt;p&gt;这里不再详述，网上的资料多如牛毛了。这里我按自己习惯的方式来。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;（1）命令行创建Cocos2dxWechat项目&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ cocos new -p com.fusijie.cocos2dxwechat -l cpp -d . Cocos2dxWechat
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;（2）交叉编译生成so文件&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ cd Cocos2dxWechat/proj.android/
$ ./build_native.py
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;（3）导入Eclipse生成APK&lt;/p&gt;
&lt;p&gt;导入libcocos2dx项目和Cocos2dxWechat项目到Eclipse中。在真机中成功运行Cocos2dxWechat.apk。&lt;/p&gt;
&lt;h3 id=&quot;申请创建微信应用&quot;&gt;&lt;a href=&quot;#申请创建微信应用&quot; class=&quot;headerlink&quot; title=&quot;申请创建微信应用&quot;&gt;&lt;/a&gt;申请创建微信应用&lt;/h3&gt;&lt;p&gt;这一步主要是在微信开放平台上申请创建移动应用，获取AppID。微信开放平台的网址是：&lt;a href=&quot;https://open.weixin.qq.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://open.weixin.qq.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;（1）注册帐号，进入管理中心，点击创建移动应用。&lt;/p&gt;
&lt;p&gt;（2）第一步是填写应用名，描述，图标等等。如下图。&lt;/p&gt;
&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;http://www-fusijie-com.qiniudn.com/playcocos2dx37_1.png&quot; alt=&quot;&quot; border=&quot;0&quot; title=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;

&lt;p&gt;（3）填写应用官网，勾选Android应用，填写签名，包名等等。如下图。&lt;/p&gt;
&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;http://www-fusijie-com.qiniudn.com/playcocos2dx37_2.png&quot; alt=&quot;&quot; border=&quot;0&quot; title=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;注意：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这里需要特别注意的是应用签名这一项。在第三步的时候，真机中成功运行Cocos2dxWechat.apk之后，我们需要从微信开放平台下载一个签名生成软件&lt;a href=&quot;https://open.weixin.qq.com/cgi-bin/frame?t=resource/res_main_tmpl&amp;amp;verify=1&amp;amp;lang=zh_CN&amp;amp;token=2788af648d5164d0feec470a8bfd42f9833ae887&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GenSignature&lt;/a&gt;（资源下载-&amp;gt;Android资源下载）。&lt;/p&gt;
&lt;p&gt;安装签名生成后，打开软件输入游戏包名获取即可。&lt;/p&gt;
&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;http://www-fusijie-com.qiniudn.com/playcocos2dx37_3.png&quot; alt=&quot;&quot; border=&quot;0&quot; title=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;

&lt;p&gt;这里的签名和游戏的包名和keystore是相关联的，如果修改了包名或者更换了keystore，必须同步更新微信开放平台管理中心的信息，防止失效。本示例采用的是debug签名。在完成以上工作后，提交审核即可。说是7天，实际上一般1～2天就审核过了。&lt;/p&gt;
&lt;h3 id=&quot;集成微信SDK&quot;&gt;&lt;a href=&quot;#集成微信SDK&quot; class=&quot;headerlink&quot; title=&quot;集成微信SDK&quot;&gt;&lt;/a&gt;集成微信SDK&lt;/h3&gt;&lt;p&gt;刚才都是铺垫，这里开始才是进入主题了。要在Cocos2d-x调用微信安卓SDK，Jni跑不掉的。这里只演示如何进行分享到朋友圈和分享给好友，微信SDK还有很多高级的功能，如支付，收藏等等接口，有需要自行&lt;a href=&quot;https://open.weixin.qq.com/cgi-bin/frame?t=resource/res_main_tmpl&amp;amp;verify=1&amp;amp;lang=zh_CN&amp;amp;token=2788af648d5164d0feec470a8bfd42f9833ae887&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;参考文档（移动应用开发）&lt;/a&gt;进行开发。&lt;/p&gt;
&lt;p&gt;这里主要分成3部分来解释：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;微信SDK下载，jar包导入&lt;/li&gt;
&lt;li&gt;Android代码&lt;/li&gt;
&lt;li&gt;C++代码&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;（1）下载微信SDK&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://open.weixin.qq.com/cgi-bin/frame?t=resource/res_main_tmpl&amp;amp;verify=1&amp;amp;lang=zh_CN&amp;amp;token=2788af648d5164d0feec470a8bfd42f9833ae887&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;资源下载-&amp;gt;Android资源下载&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;（2）打开下载的Android_SDK.zip。解压，将lib目录下的libammsdk.jar拷到Cocos2dxWechat项目下的libs目录。&lt;/p&gt;
&lt;p&gt;（3）右键单击工程，选择Build Path中的Configure Build Path…，选中Libraries这个tab，并通过Add Jars…导入工程libs目录下的libammsdk.jar文件。&lt;/p&gt;
&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;http://www-fusijie-com.qiniudn.com/playcocos2dx37_4.png&quot; alt=&quot;&quot; border=&quot;0&quot; title=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;

&lt;p&gt;（4）在AppActivity中添加成员变量&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;figcaption&gt;&lt;span&gt;增加成员变量&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; String APP_ID = &lt;span class=&quot;string&quot;&gt;&quot;wx1234567890&quot;&lt;/span&gt;;&lt;span class=&quot;comment&quot;&gt;//AppID，从第四步获取&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; IWXAPI api;&lt;span class=&quot;comment&quot;&gt;//微信API接口&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; AppActivity instance;&lt;span class=&quot;comment&quot;&gt;//类静态实例，为了方便后面静态函数的调用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;（5）注册到微信&lt;/p&gt;
&lt;p&gt;打开AppActivity，在onCreate()中调用regToWX()注册到微信&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;figcaption&gt;&lt;span&gt;注册到微信&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Bundle savedInstanceState)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;// TODO Auto-generated method stub&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.onCreate(savedInstanceState);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	instance = &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	regToWX();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;regToWX&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	api = WXAPIFactory.createWXAPI(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;, APP_ID, &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	api.registerApp(APP_ID);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;（6）由于这里采用的分享示例传递了一张icon，所以需要额外的一个bitmap的解析类Util类，这个类可以到微信官方SDK demo下载，也可以在本示例中下载（早期的SDK版本这个类是集成在微信SDK中）。icon放在res目录下的drawable目录，我这里偷个懒直接使用了应用icon。&lt;/p&gt;
&lt;p&gt;（7）分享给好友&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;figcaption&gt;&lt;span&gt;分享给好友&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;sendMsgToFriend&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(api.openWXApp())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   		WXWebpageObject webpage = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; WXWebpageObject();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           webpage.webpageUrl = &lt;span class=&quot;string&quot;&gt;&quot;http://fusijie.github.io&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           WXMediaMessage msg = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; WXMediaMessage(webpage);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           msg.title = &lt;span class=&quot;string&quot;&gt;&quot;Tittle&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           msg.description = &lt;span class=&quot;string&quot;&gt;&quot;Description&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           Bitmap thumb = BitmapFactory.decodeResource(instance.getResources(), R.drawable.icon);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           msg.thumbData = Util.bmpToByteArray(thumb, &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           SendMessageToWX.Req req = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SendMessageToWX.Req();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           req.transaction = buildTransaction(&lt;span class=&quot;string&quot;&gt;&quot;webpage&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           req.message = msg;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           req.scene = SendMessageToWX.Req.WXSceneSession;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           api.sendReq(req);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   		 Toast.makeText(instance, &lt;span class=&quot;string&quot;&gt;&quot;未安装微信&quot;&lt;/span&gt;, Toast.LENGTH_SHORT).show();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;（8）分享到朋友圈&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;figcaption&gt;&lt;span&gt;分享到朋友圈&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;sendMsgToTimeLine&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(api.openWXApp())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(api.getWXAppSupportAPI() &amp;gt;= &lt;span class=&quot;number&quot;&gt;0x21020001&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	&amp;#123;        		&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    		WXWebpageObject webpage = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; WXWebpageObject();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            webpage.webpageUrl = &lt;span class=&quot;string&quot;&gt;&quot;http://fusijie.github.io&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            WXMediaMessage msg = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; WXMediaMessage(webpage);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            msg.title = &lt;span class=&quot;string&quot;&gt;&quot;Tittle&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            msg.description = &lt;span class=&quot;string&quot;&gt;&quot;Description&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Bitmap thumb = BitmapFactory.decodeResource(instance.getResources(), R.drawable.icon);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            msg.thumbData = Util.bmpToByteArray(thumb, &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            SendMessageToWX.Req req = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SendMessageToWX.Req();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            req.transaction = buildTransaction(&lt;span class=&quot;string&quot;&gt;&quot;webpage&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            req.message = msg;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            req.scene = SendMessageToWX.Req.WXSceneTimeline;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            api.sendReq(req);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    		Toast.makeText(instance, &lt;span class=&quot;string&quot;&gt;&quot;微信版本过低&quot;&lt;/span&gt;, Toast.LENGTH_SHORT).show();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    		&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		 Toast.makeText(instance, &lt;span class=&quot;string&quot;&gt;&quot;未安装微信&quot;&lt;/span&gt;, Toast.LENGTH_SHORT).show();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;其中buildTransaction()用于生成一个唯一的会话标识符。&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;figcaption&gt;&lt;span&gt;buildTransaction&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; String &lt;span class=&quot;title&quot;&gt;buildTransaction&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; String type)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; (type == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) ? String.valueOf(System.currentTimeMillis()) : type + System.currentTimeMillis();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;代码不难，所以不再逐行解释，可以参考&lt;a href=&quot;https://open.weixin.qq.com/zh_CN/htmledition/res/dev/document/sdk/android/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SDK文档&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;（9）JNI调用&lt;/p&gt;
&lt;p&gt;在Classes目录下新建一个WeixinShare类，主要包含2个静态函数：&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;figcaption&gt;&lt;span&gt;Jni调用分享给好友和朋友圈&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; WeiXinShare::sendToFriend()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 	&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;if&lt;/span&gt; (CC_TARGET_PLATFORM == CC_PLATFORM_ANDROID) &lt;span class=&quot;comment&quot;&gt;//判断当前是否为Android平台&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    JniMethodInfo minfo;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; isHave = JniHelper::getStaticMethodInfo(minfo,&lt;span class=&quot;string&quot;&gt;&quot;org/cocos2dx/cpp/AppActivity&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;sendMsgToFriend&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;()V&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!isHave) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;jni:sendMsgToFriend is null&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//调用此函数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        minfo.env-&amp;gt;CallStaticVoidMethod(minfo.classID, minfo.methodID);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;endif&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; WeiXinShare::sendToTimeLine()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;if&lt;/span&gt; (CC_TARGET_PLATFORM == CC_PLATFORM_ANDROID) &lt;span class=&quot;comment&quot;&gt;//判断当前是否为Android平台&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    JniMethodInfo minfo;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; isHave = JniHelper::getStaticMethodInfo(minfo,&lt;span class=&quot;string&quot;&gt;&quot;org/cocos2dx/cpp/AppActivity&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;sendMsgToTimeLine&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;()V&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!isHave) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;jni:sendMsgToTimeLine is null&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//调用此函数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        minfo.env-&amp;gt;CallStaticVoidMethod(minfo.classID, minfo.methodID);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;endif&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;（10）Cocos2d-x使用&lt;/p&gt;
&lt;p&gt;这个就比较简单了，只要包含这个WeiXinShare类，调用这两个静态函数即可。&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;figcaption&gt;&lt;span&gt;主程序调用&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; HelloWorld::menuCloseCallback(Ref* pSender)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;if&lt;/span&gt; (CC_TARGET_PLATFORM == CC_PLATFORM_ANDROID)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;comment&quot;&gt;//WeiXinShare::sendToFriend();&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   WeiXinShare::sendToTimeLine();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;endif&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;（11）Android.mk的修改&lt;/p&gt;
&lt;p&gt;最后不要忘记修改Android.mk文件。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;LOCAL_SRC_FILES := hellocpp/main.cpp \
               ../../Classes/AppDelegate.cpp \
               ../../Classes/HelloWorldScene.cpp \
               ../../Classes/WeiXinShare.cpp
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;（12）重新交叉编译，打包为APK即可&lt;/p&gt;
&lt;h3 id=&quot;效果&quot;&gt;&lt;a href=&quot;#效果&quot; class=&quot;headerlink&quot; title=&quot;效果&quot;&gt;&lt;/a&gt;效果&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;分享给好友&lt;/strong&gt;&lt;/p&gt;
&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;http://www-fusijie-com.qiniudn.com/playcocos2dx37_5.png&quot; alt=&quot;&quot; border=&quot;0&quot; title=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;分享到朋友圈&lt;/strong&gt;&lt;/p&gt;
&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;http://www-fusijie-com.qiniudn.com/playcocos2dx37_6.png&quot; alt=&quot;&quot; border=&quot;0&quot; title=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;


&lt;h3 id=&quot;总结&quot;&gt;&lt;a href=&quot;#总结&quot; class=&quot;headerlink&quot; title=&quot;总结&quot;&gt;&lt;/a&gt;总结&lt;/h3&gt;&lt;p&gt;本文写的比较详细，但是也忽略了比如如何接收微信的请求及返回值的说明以及如何进行混淆等等，算是一个初级教程吧。主要是面向对jni调用，第三方安卓sdk集成不太了解的朋友。这里虽然只是针对微信sdk的部分功能集成进行说明，但是道理都是共通的，如何集成微博分享，如何集成第三方广告等等，用类似的方法都可以实现。&lt;/p&gt;
&lt;p&gt;本demo的下载地址：&lt;a href=&quot;https://github.com/fusijie/Cocos2dx-Wechat&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;我的Github&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h3&gt;&lt;p&gt;微信的火热程度已不必说了，如果能在Cocos2d-x中集成微信SDK，让游戏能分享给好友或者朋友圈，那对游戏推广将会是非常有利的。好了，本文就是手把手地教大伙如何在Cocos2d-x中集成微信SDK。&lt;/p&gt;
&lt;h3 id=&quot;环境&quot;&gt;&lt;a href=&quot;#环境&quot; class=&quot;headerlink&quot; title=&quot;环境&quot;&gt;&lt;/a&gt;环境&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;OS: Mac OSX&lt;/li&gt;
&lt;li&gt;IDE: Xcode v5.11 and Eclipse ADT v22.3&lt;/li&gt;
&lt;li&gt;Android SDK:4.0 &lt;/li&gt;
&lt;li&gt;Adnroid NDK:r9d&lt;/li&gt;
&lt;li&gt;Cocos2d-x 3.2release&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;创建Cocos2d-x工程&quot;&gt;&lt;a href=&quot;#创建Cocos2d-x工程&quot; class=&quot;headerlink&quot; title=&quot;创建Cocos2d-x工程&quot;&gt;&lt;/a&gt;创建Cocos2d-x工程&lt;/h3&gt;&lt;p&gt;这里不再详述，网上的资料多如牛毛了。这里我按自己习惯的方式来。&lt;/p&gt;
    
    </summary>
    
      <category term="cocos2d-x" scheme="http://fusijie.github.io/categories/cocos2d-x/"/>
    
    
      <category term="微信SDK集成" scheme="http://fusijie.github.io/tags/%E5%BE%AE%E4%BF%A1SDK%E9%9B%86%E6%88%90/"/>
    
  </entry>
  
  <entry>
    <title>【玩转cocos2d-x之三十六】Earth Warrior 3D 大揭秘</title>
    <link href="http://fusijie.github.io/2014/07/10/play-cocos2dx-36/"/>
    <id>http://fusijie.github.io/2014/07/10/play-cocos2dx-36/</id>
    <published>2014-07-09T16:13:00.000Z</published>
    <updated>2016-04-24T13:22:18.000Z</updated>
    
    <content type="html">&lt;p&gt;3D游戏现在玩起来门槛还是挺高的。不过如果在Cocos2d-x引擎加入3D扩展，实现2.5D游戏效果又会怎么样？&lt;/p&gt;
&lt;h3 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h3&gt;&lt;p&gt;先上大会现场演示图：&lt;/p&gt;
&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;http://www-fusijie-com.qiniudn.com/4196_140316183412_1.JPG&quot; alt=&quot;&quot; border=&quot;0&quot; title=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;

&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;Apk下载：&lt;a href=&quot;http://pan.baidu.com/s/1ntM75bV&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://pan.baidu.com/s/1ntM75bV&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;源码下载：&lt;a href=&quot;https://github.com/chukong/EarthWarrior3D.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/chukong/EarthWarrior3D.git&lt;/a&gt;，给个star不费电。。。&lt;/p&gt;
&lt;p&gt;开发环境：Cocos2d-x v3.0 + Sprite3D扩展&lt;/p&gt;
&lt;p&gt;适用平台：Mac/iOS/Android&lt;/p&gt;
&lt;h3 id=&quot;Sprite3D扩展&quot;&gt;&lt;a href=&quot;#Sprite3D扩展&quot; class=&quot;headerlink&quot; title=&quot;Sprite3D扩展&quot;&gt;&lt;/a&gt;Sprite3D扩展&lt;/h3&gt;&lt;h4 id=&quot;Sprite3D&quot;&gt;&lt;a href=&quot;#Sprite3D&quot; class=&quot;headerlink&quot; title=&quot;Sprite3D&quot;&gt;&lt;/a&gt;Sprite3D&lt;/h4&gt;&lt;p&gt;sprite3D扩展目前可以支持加载静态obj模型。&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;figcaption&gt;&lt;span&gt;Sprite3D使用&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;auto&lt;/span&gt; model = Sprite3D::create(&lt;span class=&quot;string&quot;&gt;&quot;3dmodel.obj&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;texture.png&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;Toon-Shading&quot;&gt;&lt;a href=&quot;#Toon-Shading&quot; class=&quot;headerlink&quot; title=&quot;Toon Shading&quot;&gt;&lt;/a&gt;Toon Shading&lt;/h4&gt;&lt;p&gt;Cocos2d-x精灵不能做发光效果，而Sprite3D中加入了发光函数，指定outline width和color就行了。&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;figcaption&gt;&lt;span&gt;设置边缘发光&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;model-&amp;gt;setOutline(&lt;span class=&quot;number&quot;&gt;1.5&lt;/span&gt;, Color3B(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)); &lt;span class=&quot;comment&quot;&gt;// 设置发光宽度1.5，黑色&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;3D-API&quot;&gt;&lt;a href=&quot;#3D-API&quot; class=&quot;headerlink&quot; title=&quot;3D API&quot;&gt;&lt;/a&gt;3D API&lt;/h4&gt;&lt;p&gt;3D API是Cocos2d-x v3.0就具有的属性，源码可以到Node上看。&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;figcaption&gt;&lt;span&gt;设置位置和旋转&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;node-&amp;gt;setPosition3D(Vertex3F(x,y,z));&lt;span class=&quot;comment&quot;&gt;//设置位置  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Vertex3F pos = node-&amp;gt;getPosition3D();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;node-&amp;gt;setRotation3D(Vertex3F(x,y,z));&lt;span class=&quot;comment&quot;&gt;//设置旋转  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Vertex3F rot = node-&amp;gt;getRotation3D();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;其中Vertex3F当然就是指定了三维空间。而3D API同样也移植到了一些动作中，比如：&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;figcaption&gt;&lt;span&gt;3D旋转&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;node-&amp;gt;runAction(RotateBy::create(Vertex3F(x,y,z)));&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;完全没问题。&lt;/p&gt;
&lt;h3 id=&quot;EarthWarrior&quot;&gt;&lt;a href=&quot;#EarthWarrior&quot; class=&quot;headerlink&quot; title=&quot;EarthWarrior&quot;&gt;&lt;/a&gt;EarthWarrior&lt;/h3&gt;&lt;p&gt;Classes/3d文件夹包含了Sprite3D。其余文件为游戏逻辑控制，游戏总共三个场景&lt;/p&gt;
&lt;h4 id=&quot;主菜单界面（MainMenuScene）&quot;&gt;&lt;a href=&quot;#主菜单界面（MainMenuScene）&quot; class=&quot;headerlink&quot; title=&quot;主菜单界面（MainMenuScene）&quot;&gt;&lt;/a&gt;主菜单界面（MainMenuScene）&lt;/h4&gt;&lt;p&gt;包含：主菜单场景（MainMenuScene），飞机模型（Plane），License和Credits层（LicenseLayer）。&lt;/p&gt;
&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;http://www-fusijie-com.qiniudn.com/20140328095139203.png&quot; alt=&quot;&quot; border=&quot;0&quot; title=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;

&lt;p&gt;关键点：&lt;/p&gt;
&lt;p&gt;&lt;em&gt;①主界面3D飞机的实现&lt;/em&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;figcaption&gt;&lt;span&gt;主界面3D飞机的实现&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//Plane.cpp  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;_Model = Sprite3D::create(&lt;span class=&quot;string&quot;&gt;&quot;playerv002.obj&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;playerv002_256.png&quot;&lt;/span&gt;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(_Model)&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	_Model-&amp;gt;setScale(&lt;span class=&quot;number&quot;&gt;55&lt;/span&gt;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	((Sprite3D*)_Model)-&amp;gt;setOutline(&lt;span class=&quot;number&quot;&gt;0.035&lt;/span&gt;, Color3B::BLACK);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	_Model-&amp;gt;setRotation3D(Vertex3F(originX,originY,originZ));  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;-&amp;gt;setRotation3D(Vertex3F(originX, originY, originZ));  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;-&amp;gt;addChild(_Model);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;-&amp;gt;scheduleUpdate();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;em&gt;②对数学感兴趣的可以研究一下scheduleUpdate怎样让飞机晃啊晃。。。粒子系统这里就不再重复了。&lt;/em&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;figcaption&gt;&lt;span&gt;设置飞机摇晃&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; Plane::update(&lt;span class=&quot;keyword&quot;&gt;float&lt;/span&gt; dt)  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	pRate+=&lt;span class=&quot;number&quot;&gt;0.01&lt;/span&gt;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	_Model-&amp;gt;setRotation3D(Vertex3F(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;-pXA*sin(pXW*pRate),&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;-pZA*sin(pZW*pRate)));  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;载入界面（LoadingScene）&quot;&gt;&lt;a href=&quot;#载入界面（LoadingScene）&quot; class=&quot;headerlink&quot; title=&quot;载入界面（LoadingScene）&quot;&gt;&lt;/a&gt;载入界面（LoadingScene）&lt;/h4&gt;&lt;p&gt;包含：载入场景（LoadingScene）,粒子管理器(ParticleManager)&lt;/p&gt;
&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;http://www-fusijie-com.qiniudn.com/20140328095149734.png&quot; alt=&quot;&quot; border=&quot;0&quot; title=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;

&lt;p&gt;关键点：&lt;/p&gt;
&lt;p&gt;&lt;em&gt;①Loading界面实现资源的预加载，包括音乐，纹理，粒子效果，其中纹理使用异步加载，粒子效果在ParticleManager（单例类）中加载。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;②同时Loading界面也实现了游戏元素的预创建并保存在全局池中，避免游戏过程中的卡顿现象和反复create的低效，包括四类敌机和导弹Missile，在update中实现每帧创建一个，避免LoadingScene的卡顿。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;③cocos Logo的旋转动画&lt;/em&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;figcaption&gt;&lt;span&gt;cocos Logo旋转动画&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; LoadingScene::InitCoco()  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	Size visibleSize = Director::getInstance()-&amp;gt;getVisibleSize();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;keyword&quot;&gt;auto&lt;/span&gt; coco = Sprite3D::create(&lt;span class=&quot;string&quot;&gt;&quot;coconut.obj&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;coco.png&quot;&lt;/span&gt;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(coco)  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       	coco-&amp;gt;setPosition(Point(visibleSize.width/&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, visibleSize.height/&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-150&lt;/span&gt;));  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       	coco-&amp;gt;setOutline(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;,Color3B(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;));  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       	addChild(coco,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       	coco-&amp;gt;runAction(RepeatForever::create(RotateBy::create(&lt;span class=&quot;number&quot;&gt;0.8f&lt;/span&gt;,Vertex3F(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;360&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;))));  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;游戏界面（HelloWorldScene）&quot;&gt;&lt;a href=&quot;#游戏界面（HelloWorldScene）&quot; class=&quot;headerlink&quot; title=&quot;游戏界面（HelloWorldScene）&quot;&gt;&lt;/a&gt;游戏界面（HelloWorldScene）&lt;/h4&gt;&lt;p&gt;包含：游戏层（GameLayer），游戏元素基类（GameEntity），飞机类（AirCraft），玩家类（Player），敌机类（Enemies，又包括Fodder，FodderLeader，BigDude，Boss四类敌机），子弹类（Bullet，又包括PlayerBullet，Missile两类子弹），效果管理类（EffectManager），爆炸类（Explosion，又包括SmallExplosion，BigExplosion，BulletExplosion），游戏控制层（GameController，又包括BulletController，EnemyController和GameController），游戏结束层（GameOverLayer）&lt;/p&gt;
&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;http://www-fusijie-com.qiniudn.com/20140328095145093.png&quot; alt=&quot;&quot; border=&quot;0&quot; title=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;

&lt;p&gt;关键点：&lt;/p&gt;
&lt;p&gt;&lt;em&gt;①玩家和敌机的子弹控制统一在BulletController::spawnBullet中处理。如上述游戏元素保存在全局池中，可回收利用，避免反复创建，spawnBullet会先从这个池中取出，如果该池为空才会创建对于的子弹。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;②敌机的处理也是采用相同的方式，在EnemyController::spawnEnemy中处理，如果该池为空才会创建对于的敌机。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;③GameLayer::gameMaster管理敌机的出现的频率。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;④GameController::update管理游戏的碰撞检测。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;除了一些数学上的计算比较羞涩意外，整个游戏的逻辑还是比较简单的。。。这里就不细说了，大家直接看源码吧。。。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;3D游戏现在玩起来门槛还是挺高的。不过如果在Cocos2d-x引擎加入3D扩展，实现2.5D游戏效果又会怎么样？&lt;/p&gt;
&lt;h3 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h3&gt;&lt;p&gt;先上大会现场演示图：&lt;/p&gt;
&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;http://www-fusijie-com.qiniudn.com/4196_140316183412_1.JPG&quot; alt=&quot;&quot; border=&quot;0&quot; title=&quot;&quot; /&gt;&lt;br&gt;&lt;/br&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="cocos2d-x" scheme="http://fusijie.github.io/categories/cocos2d-x/"/>
    
    
      <category term="EarthWarrior3D" scheme="http://fusijie.github.io/tags/EarthWarrior3D/"/>
    
  </entry>
  
</feed>
