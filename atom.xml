<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Jacky&#39;s Blog</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://fusijie.github.io/"/>
  <updated>2016-04-28T14:36:24.000Z</updated>
  <id>http://fusijie.github.io/</id>
  
  <author>
    <name>偶尔e网事</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>30分钟正则表达式快速入门</title>
    <link href="http://fusijie.github.io/2016/04/28/learn-regex-in-30-minutes/"/>
    <id>http://fusijie.github.io/2016/04/28/learn-regex-in-30-minutes/</id>
    <published>2016-04-28T13:54:28.000Z</published>
    <updated>2016-04-28T14:36:24.000Z</updated>
    
    <content type="html">&lt;p&gt;正则表达式在查找，解析，替换文本是非常管用的，这些常见的文本包含但不限于代码，日志，表格，甚至于文稿。但是很多人一看到正则表达式，反应通常是&lt;/p&gt;
&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;/images/posts/2016-04-28-learn-regex-in-30-minutes/ylmb.jpg&quot; alt=&quot;&quot; border=&quot;0&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;

&lt;p&gt;其实并没有这么难，本文就是带你30分钟快速入门正则表达式。&lt;/p&gt;
&lt;p&gt;本文改编自 &lt;a href=&quot;http://regexone.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://regexone.com/&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id=&quot;ABCs&quot;&gt;&lt;a href=&quot;#ABCs&quot; class=&quot;headerlink&quot; title=&quot;ABCs&quot;&gt;&lt;/a&gt;ABCs&lt;/h3&gt;&lt;p&gt;首先要明白的第一件事就是&lt;strong&gt;本质上一切都是字符&lt;/strong&gt;，正则表达式就是一串用于匹配字符串的字符串。&lt;/p&gt;
&lt;p&gt;一般情况下我们使用 ASCII 字符，也就是英文字符，数字，标点符号和一些特殊符号（%#$@!），当然 Unicode 字符也可以用作正则表达式&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;。&lt;br&gt;&lt;br&gt;先来试一试最简单的字符串直接匹配。&lt;br&gt;&lt;br&gt;练习：匹配字符串&lt;br&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;match      abcdefg&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;match      abcde&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;match      abc&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;答案：（正则表达式是没有唯一答案的，这和你需要的匹配程度有关）&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;regex      abc&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;123s&quot;&gt;&lt;a href=&quot;#123s&quot; class=&quot;headerlink&quot; title=&quot;123s&quot;&gt;&lt;/a&gt;123s&lt;/h3&gt;&lt;p&gt;字符包括英文字母，当然也包括数字。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;\d&lt;/code&gt; 通常用来表示单个数字（0~9），比如 &lt;code&gt;\d&lt;/code&gt; 可以是 0~9，&lt;code&gt;\d\d&lt;/code&gt; 可以是 00~99。&lt;/p&gt;
&lt;p&gt;练习：匹配数字&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;match      abc123xyz&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;match      define &amp;quot;123&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;match      var g = 123;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;答案：(当然你也可以写&lt;code&gt;\d\d\d&lt;/code&gt;，同样可以匹配123)&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;regex      123&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;点号&quot;&gt;&lt;a href=&quot;#点号&quot; class=&quot;headerlink&quot; title=&quot;点号&quot;&gt;&lt;/a&gt;点号&lt;/h3&gt;&lt;p&gt;正则表达式中点号（.）是做通配符使用，也就是说点号可以表示任意单个字符（字母，数字，空格，任何符号都是）。&lt;/p&gt;
&lt;p&gt;但是如果要准确适配点号本身，那如何表示呢？&lt;code&gt;\.&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;练习：使用通配符匹配&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;match      cat.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;match      896.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;match      ?=+.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;skip       abc1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;答案：(关键在于最后一个字符点号要能够准确适配)&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;regex      ...\.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;匹配指定字符&quot;&gt;&lt;a href=&quot;#匹配指定字符&quot; class=&quot;headerlink&quot; title=&quot;匹配指定字符&quot;&gt;&lt;/a&gt;匹配指定字符&lt;/h3&gt;&lt;p&gt;点号太给力了，但是给力不一定是万能的，比如我们要匹配一个电话号码，“abcd-efghijkl” 可以是一个有效是电话号码吗？&lt;/p&gt;
&lt;p&gt;所以我们需要一种能匹配指定字符的方法，这就是&lt;code&gt;[]&lt;/code&gt;。比如 &lt;code&gt;[abc]&lt;/code&gt; 只匹配 a 或 b 或 c。要注意 &lt;code&gt;[]&lt;/code&gt; 只匹配单个字符。&lt;/p&gt;
&lt;p&gt;练习：匹配字符串&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;match      can&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;match      man&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;match      fan&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;skip       dan&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;skip       ran&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;skip       pan&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;答案：(学了下一节之后你会发现还可以用[^drp]an)&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;regex      [cmf]an&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;匹配指定排除的字符&quot;&gt;&lt;a href=&quot;#匹配指定排除的字符&quot; class=&quot;headerlink&quot; title=&quot;匹配指定排除的字符&quot;&gt;&lt;/a&gt;匹配指定排除的字符&lt;/h3&gt;&lt;p&gt;有时候我们并不知道要匹配哪个字符，但是我们指定不匹配哪个字符。&lt;/p&gt;
&lt;p&gt;这时候 &lt;code&gt;^&lt;/code&gt; 就有用了。比如 &lt;code&gt;[^abc]&lt;/code&gt; 匹配除 a 和 b 和 c 以外的所有字符，注意也是单个。&lt;/p&gt;
&lt;p&gt;练习：匹配指定排除的字符&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;match      hog&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;match      dog&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;skip       bog&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;答案：（也可以使用上一节的 &lt;code&gt;[hd]og&lt;/code&gt;）&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;regex      [^b]og&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;范围字符&quot;&gt;&lt;a href=&quot;#范围字符&quot; class=&quot;headerlink&quot; title=&quot;范围字符&quot;&gt;&lt;/a&gt;范围字符&lt;/h3&gt;&lt;p&gt;如果需要指定的字符太多了，比如从 a 到 g，难道我们就要写 &lt;code&gt;[abcdefg]&lt;/code&gt; 么？当然有更方便的写法 &lt;code&gt;[a-g]&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;举个栗子，&lt;code&gt;[a-z]&lt;/code&gt; 表示匹配所有小写字母（注意大小写是区分的），&lt;code&gt;[0-9]&lt;/code&gt; 表示匹配所有数字，&lt;code&gt;[^n-p]&lt;/code&gt; 表示匹配除 n 到 p 以外的单个字符，而 &lt;code&gt;\w&lt;/code&gt; 其实就是 &lt;code&gt;[A-Za-z0-9_]&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;练习：匹配指定范围字符&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;match      Ana&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;match      Bob&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;match      Cpc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;skip       aax&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;skip       bby&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;skip       ccz&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;答案：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;regex      [A-Z][n-p][a-c]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;匹配重复次数&quot;&gt;&lt;a href=&quot;#匹配重复次数&quot; class=&quot;headerlink&quot; title=&quot;匹配重复次数&quot;&gt;&lt;/a&gt;匹配重复次数&lt;/h3&gt;&lt;p&gt;前面我们学习的是匹配字符，假如要匹配一个3位数的数字，那就是 &lt;code&gt;\d\d\d&lt;/code&gt;，但是如果是10位呢？如果是100位呢？&lt;/p&gt;
&lt;p&gt;这里就需要重复次数的语法了，&lt;code&gt;{}&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;a{3}&lt;/code&gt; 表示a重复3次，&lt;code&gt;a{2,6}&lt;/code&gt;表示a重复2次到6次之间都匹配。&lt;/p&gt;
&lt;p&gt;结合之前学习的，&lt;code&gt;[a-z]{5}&lt;/code&gt;表示某个小写字母重复5次，比如 bbbbb，而 &lt;code&gt;\d{3,8}&lt;/code&gt; 表示某个数字重复3到8次，比如 55555。&lt;/p&gt;
&lt;p&gt;练习：匹配重复字符&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;match      wazzzzup&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;match      wazzzup&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;skip       wazup&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;答案：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;regex      waz&amp;#123;3,4&amp;#125;up&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;另一种匹配重复次数&quot;&gt;&lt;a href=&quot;#另一种匹配重复次数&quot; class=&quot;headerlink&quot; title=&quot;另一种匹配重复次数&quot;&gt;&lt;/a&gt;另一种匹配重复次数&lt;/h3&gt;&lt;p&gt;除了使用 &lt;code&gt;{}&lt;/code&gt; 来匹配重复次数，还可以使用下面两种符号来匹配重复次数。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;*&lt;/code&gt;，表示0次到多次重复，比如 &lt;code&gt;.*&lt;/code&gt; 匹配任意字符串&lt;/p&gt;
&lt;p&gt;&lt;code&gt;+&lt;/code&gt;，表示1次到多次重复，比如 &lt;code&gt;a+&lt;/code&gt; 匹配超过一个包含 a 的字符串&lt;/p&gt;
&lt;p&gt;练习：匹配重复字符&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;match      aaaabcc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;match      aabbbbc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;match      aacc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;skip       a&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;答案：（也可以是上一节的 &lt;code&gt;a{2,4}b{0,4}c{1,2}&lt;/code&gt;）&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;regex      a+b*c+&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;可选字符&quot;&gt;&lt;a href=&quot;#可选字符&quot; class=&quot;headerlink&quot; title=&quot;可选字符&quot;&gt;&lt;/a&gt;可选字符&lt;/h3&gt;&lt;p&gt;可选字符是指某个字符可以是一个也可以没有，用 &lt;code&gt;?&lt;/code&gt; 表示。&lt;/p&gt;
&lt;p&gt;举个栗子，&lt;code&gt;ab?c&lt;/code&gt; 可以匹配 abc 或者 ac。&lt;/p&gt;
&lt;p&gt;需要注意的是，如果要准确匹配问号，则需要使用 &lt;code&gt;\?&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;练习：匹配可选字符&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;match      1 file found?&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;match      2 files found?&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;match      24 files found?&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;skip       no files found.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;答案：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;regex      \d+ files? found\?&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;匹配空白符&quot;&gt;&lt;a href=&quot;#匹配空白符&quot; class=&quot;headerlink&quot; title=&quot;匹配空白符&quot;&gt;&lt;/a&gt;匹配空白符&lt;/h3&gt;&lt;p&gt;空白符包含空格键（␣），制表符（\t），换行符（\n）和回车符（\r），使用 &lt;code&gt;\s&lt;/code&gt; 表示。&lt;/p&gt;
&lt;p&gt;练习：匹配空白字符&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;match      1.   abc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;match      2.    abc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;match      3.       abc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;skip       4.abc&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;答案：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;regex      \d\.\s+abc&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;开始和结束&quot;&gt;&lt;a href=&quot;#开始和结束&quot; class=&quot;headerlink&quot; title=&quot;开始和结束&quot;&gt;&lt;/a&gt;开始和结束&lt;/h3&gt;&lt;p&gt;到目前为止，我们写的正则表达式都是匹配片段文本，如果需要匹配完整的文本呢？&lt;/p&gt;
&lt;p&gt;所谓完整，就是有开头有结尾。正则表达式中使用 &lt;code&gt;^&lt;/code&gt; 和 &lt;code&gt;$&lt;/code&gt; 表示。&lt;/p&gt;
&lt;p&gt;练习：匹配行&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;match      Mission:successful&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;skip       Last Mission: unsuccessful&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;skip       Next Mission: successful upon capture of target&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;答案：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;regex      ^Mission: successful$&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;匹配组&quot;&gt;&lt;a href=&quot;#匹配组&quot; class=&quot;headerlink&quot; title=&quot;匹配组&quot;&gt;&lt;/a&gt;匹配组&lt;/h3&gt;&lt;p&gt;正则表达式不仅可以匹配文本，还允许我们取出部分信息做进一步的处理。&lt;/p&gt;
&lt;p&gt;如何取出我们想要的信息呢？使用&lt;code&gt;()&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;比如，有个图片的 url，可能是这样的 &lt;code&gt;https://noexist.com/IMG123.png&lt;/code&gt;，你希望取出文件名 &lt;code&gt;IMG_123&lt;/code&gt;。对应的正则表达式就是 &lt;code&gt;^(IMG\d+)\.png&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;练习：匹配组&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;capture       file_record_transcript.pdf      file_record_transcript&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;capture       file_07241999.pdf               file_07241999&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;skip          testfile_fake.pdf.tmp&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;答案：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;regex        ^(file.+)\.pdf$&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;嵌套组&quot;&gt;&lt;a href=&quot;#嵌套组&quot; class=&quot;headerlink&quot; title=&quot;嵌套组&quot;&gt;&lt;/a&gt;嵌套组&lt;/h3&gt;&lt;p&gt;有的时候你想要获得多层信息，还是以图片的 url（&lt;code&gt;https://noexist.com/IMG123.png&lt;/code&gt;）为例，你既想拿到完整的图片名（IMG123），也想得到图片的序号（123）。这时候嵌套组就可以派上用场了。&lt;/p&gt;
&lt;p&gt;嵌套组使用多个嵌套的 &lt;code&gt;()&lt;/code&gt; 来区分组。比如 &lt;code&gt;^(IMG(\d+))\.png$&lt;/code&gt; 就可以实现上述目的。&lt;/p&gt;
&lt;p&gt;练习：匹配嵌套组&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;capture       Jan 1987      Jan 1987       1987&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;capture       May 1969      May 1969       1969&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;capture       Aug 2011      Aug 2011       2011&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;答案：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;regex        (\w+ (\d+))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;匹配重复组&quot;&gt;&lt;a href=&quot;#匹配重复组&quot; class=&quot;headerlink&quot; title=&quot;匹配重复组&quot;&gt;&lt;/a&gt;匹配重复组&lt;/h3&gt;&lt;p&gt;之前我们了解到 &lt;code&gt;*&lt;/code&gt;，&lt;code&gt;+&lt;/code&gt;，&lt;code&gt;{m,n}&lt;/code&gt;，&lt;code&gt;?&lt;/code&gt; 可以用在单个字符上，同样的，它也可以用在组上。&lt;/p&gt;
&lt;p&gt;比如我们知道某个电话号码可能包含或者不包含一个区号，那么我们就可以写一个 &lt;code&gt;(\d{4})?&lt;/code&gt; 来处理区号。&lt;/p&gt;
&lt;p&gt;练习：匹配嵌套组&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;capture      1280x720      1280      720&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;capture      1920x1600     1920      1600&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;capture      1024x768      1024      768&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;答案：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;regex        (\d+)x(\d+)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;可选项匹配&quot;&gt;&lt;a href=&quot;#可选项匹配&quot; class=&quot;headerlink&quot; title=&quot;可选项匹配&quot;&gt;&lt;/a&gt;可选项匹配&lt;/h3&gt;&lt;p&gt;之前我们学习到了精确匹配，但是有时候我们在几个选项之间犹豫，这时候就可以使用 &lt;code&gt;|&lt;/code&gt; 来处理可选项的匹配。&lt;/p&gt;
&lt;p&gt;比如 &lt;code&gt;Buy more (milk|bread|juice)&lt;/code&gt; 可以匹配 Buy more milk，Buy more bread 和 Buy more juice。&lt;/p&gt;
&lt;p&gt;练习：匹配可选文本&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;match    I love cats&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;match    I love dogs&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;skip     I love logs&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;skip     I love cogs&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;答案：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;regex    I love (cats|dogs)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;其他特殊字符&quot;&gt;&lt;a href=&quot;#其他特殊字符&quot; class=&quot;headerlink&quot; title=&quot;其他特殊字符&quot;&gt;&lt;/a&gt;其他特殊字符&lt;/h3&gt;&lt;p&gt;之前我们已经学习了 &lt;code&gt;\d（数字）&lt;/code&gt;，&lt;code&gt;\s（空格）&lt;/code&gt;，&lt;code&gt;\w（字母数字下划线）&lt;/code&gt;。正则表达式也提供给我们一套相反的集合，用大写的 &lt;code&gt;\D（非数字）&lt;/code&gt;，&lt;code&gt;\S（非空格）&lt;/code&gt;，&lt;code&gt;\W（非字母数字下划线，比如标点符号）&lt;/code&gt; 来表示。&lt;/p&gt;
&lt;p&gt;另外 &lt;code&gt;\b&lt;/code&gt; 用于匹配单词和非单词字符之间的边界。比如我们要获取一个单词，就可以这么写 &lt;code&gt;\w+\b&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;还有一些系统是支持用 &lt;code&gt;\0&lt;/code&gt;，&lt;code&gt;\1&lt;/code&gt;，&lt;code&gt;\2&lt;/code&gt; 来表示组。&lt;/p&gt;
&lt;p&gt;练习：匹配特殊字符&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;match      The quick brown fox jumped over the lazy dog.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;match      There were 614 instances of students getting 90.0% or above.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;match      The FCC had to censor the network for saying &amp;amp;$#*@!.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;答案：自由发挥~&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;正则表达式在查找，解析，替换文本是非常管用的，这些常见的文本包含但不限于代码，日志，表格，甚至于文稿。但是很多人一看到正则表达式，反应通常是&lt;/p&gt;
&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;/images/posts/2016-04-28-learn-regex-in-30-minutes/ylmb.jpg&quot; alt=&quot;&quot; border=&quot;0&quot; /&gt;&lt;br&gt;&lt;/br&gt;&lt;/div&gt;

&lt;p&gt;其实并没有这么难，本文就是带你30分钟快速入门正则表达式。&lt;/p&gt;
&lt;p&gt;本文改编自 &lt;a href=&quot;http://regexone.com/&quot;&gt;http://regexone.com/&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id=&quot;ABCs&quot;&gt;&lt;a href=&quot;#ABCs&quot; class=&quot;headerlink&quot; title=&quot;ABCs&quot;&gt;&lt;/a&gt;ABCs&lt;/h3&gt;&lt;p&gt;首先要明白的第一件事就是&lt;strong&gt;本质上一切都是字符&lt;/strong&gt;，正则表达式就是一串用于匹配字符串的字符串。&lt;/p&gt;
&lt;p&gt;一般情况下我们使用 ASCII 字符，也就是英文字符，数字，标点符号和一些特殊符号（%#$@!），当然 Unicode 字符也可以用作正则表达式&lt;/p&gt;
    
    </summary>
    
      <category term="Others" scheme="http://fusijie.github.io/categories/Others/"/>
    
    
      <category term="正则表达式" scheme="http://fusijie.github.io/tags/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>(译)第三部分：什么是rebase?</title>
    <link href="http://fusijie.github.io/2014/11/18/what-is-a-rebase/"/>
    <id>http://fusijie.github.io/2014/11/18/what-is-a-rebase/</id>
    <published>2014-11-18T15:44:00.000Z</published>
    <updated>2016-04-24T14:44:18.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;strong&gt;内容提要&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第一部分：&lt;a href=&quot;http://fusijie.github.io/2014/10/08/what-is-a-commit-hash/&quot;&gt;commit hash是什么？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第二部分：&lt;a href=&quot;http://fusijie.github.io/2014/10/15/what-is-a-merge/&quot;&gt;merge是什么？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第三部分：rebase是什么？&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在&lt;a href=&quot;http://fusijie.github.io/2014/10/08/what-is-a-commit-hash/&quot;&gt;第一部分&lt;/a&gt;中，我们讨论了什么是commit hash，其中一个很重要的特点就是commit无法被修改。hash值是根据存储在commit中的信息生成的，所以修改一个commit或者commit hash，你必须要创建一个全新的commit。我们还讨论了每一个commit存储了它的前一个commit的hash值。我们所没有讨论的是它对我们Git历史的影响。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;实际上，commit hash是基于他们本身存储的信息生成的，而这些信息其中就包含了前一个commit的hash值，所以想修改你的commit历史基本上是不可能的。每一个commit就像是链条上的一环，紧紧连接着上一环。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/cXvBMnk.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;如果你有如上图一样的一条金属链，在不打断他们的前提下是不可能把前一环和后一环连接起来的。然而，在Git环境中这将会更糟。这样的类比在这里是不靠谱的，因为在一条金属链上你可以焊接一个新环来把前一环和后一环重新连接起来。但是在Git中，你无法做到这一点。&lt;/p&gt;
&lt;p&gt;如果你想要在commit历史的中间删除某一个commit，那后一个commit将会指向一个不存在的commit hash。因为你无法在不改变hash的情况下来修改commit，所以你不能简单地生成一个新的commit来引用前一个commit，而后一个commit仍然引用了最原始的commit hash。&lt;/p&gt;
&lt;p&gt;如果你改变了一个commit的某个属性，那生成的hash值将不再一样，后一个commit也不会引用到新的commit。结果就是你不得不去修改后一个commit来引用到新的commit hash，这同样会引起commit hash的改变，就这样一路下去直到链条的末尾。&lt;/p&gt;
&lt;p&gt;这时候轮到&lt;a href=&quot;http://git-scm.com/docs/git-rebase&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;rebase&lt;/a&gt;上场了。如果你还记得&lt;a href=&quot;http://fusijie.github.io/2014/10/15/what-is-a-merge/&quot;&gt;第二部分&lt;/a&gt;，当我们将&lt;code&gt;feature1&lt;/code&gt;分支合并到&lt;code&gt;master&lt;/code&gt;分支后，有一副图展示了各个commit之间的关系。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/S0av3NM.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;Merge可以很好地工作，但是伴随着所有的fork和横纵交叉的commit关系，Git仓库的图形很快就会失控。下图只是一个我平时工作的Git仓库的小片段。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/z28Y4sX.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;如果你使用一个Git GUI软件，很有可能你也见识过类似的东西。Merge是在不同分支之间移动差异的最简单的方式，因为它避免了破坏commit历史和所引发的蛋疼。然而，一旦你对rebase的工作方式有了比较深刻的理解，你将会从中收益。举个栗子，如果我们在demo仓库中rebase &lt;code&gt;feature1&lt;/code&gt;分支到&lt;code&gt;master&lt;/code&gt;分支(译者注：这句话的意思是切换到&lt;code&gt;feature1&lt;/code&gt;分支，执行&lt;code&gt;git rebase master&lt;/code&gt;命令)，将会得到一个非常漂亮干净的历史，如图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/pBvTytu.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;注意到没？现在的历史是一条直线了。Git到底是怎么做到的呢？如果你还记得的话，我们的&lt;code&gt;Commit 3&lt;/code&gt;和&lt;code&gt;Commit 4&lt;/code&gt;是共享&lt;code&gt;Commit 2&lt;/code&gt;作为其共同父节点的，&lt;code&gt;Commit 3&lt;/code&gt;引用了&lt;code&gt;Commit 2&lt;/code&gt;作为其前一个commit。现在你也许会疑惑为什么看起来&lt;code&gt;Commit 3&lt;/code&gt;像是将&lt;code&gt;Commit 4&lt;/code&gt;作为其前一个commit。&lt;/p&gt;
&lt;p&gt;还记得我刚说过的，如果想从中间打断链条，你必须从这个点上开始重现创建其之后的commit，直到结尾。没错，这实际上就是rebase做的事情。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/1nPXWq1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;仔细看的话，你会发现&lt;code&gt;Commit 3&lt;/code&gt;，&lt;code&gt;Commit 5&lt;/code&gt;，&lt;code&gt;Commit 6&lt;/code&gt;的commit hash已经全部改变了。这3个commit是在&lt;code&gt;feature 1&lt;/code&gt;分支上提交的。通过将&lt;code&gt;feature 1&lt;/code&gt;分支rebase操作到&lt;code&gt;master&lt;/code&gt;分支上，从&lt;code&gt;master&lt;/code&gt;分支分叉出来的的第一个commit开始，git重写了&lt;code&gt;feature 1&lt;/code&gt;所有的commit，直到结束。它将分之上的每一个commit之间的差异存储在一个临时文件中，然后开始重写我们的分支历史。而这一次，分支是从&lt;code&gt;master&lt;/code&gt;，&lt;code&gt;Commit 4&lt;/code&gt;开始的。&lt;/p&gt;
&lt;p&gt;Git给分支上的每一个commit创建了一个新的commit，当然跟着修改的还有commit hash值。当它创建新的commit的时候，第一个commit被改为引用到&lt;code&gt;master&lt;/code&gt;分支的最新的commit（&lt;code&gt;Commit 4&lt;/code&gt;），而不是原来的（&lt;code&gt;Commit 2&lt;/code&gt;）了。这个重新提交你的变更作为新的commit的流程被称为“你的commits在&lt;code&gt;master&lt;/code&gt;分支上的重播”。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注意：不要让术语混淆。Rebase到&lt;code&gt;master&lt;/code&gt;分支不会修改&lt;code&gt;master&lt;/code&gt;分支本身，它的意思是你的分支commits将会紧跟着&lt;code&gt;master&lt;/code&gt;分支上最新的commits（译者注：这里的&lt;code&gt;你的分支&lt;/code&gt;指的是&lt;code&gt;feature 1&lt;/code&gt;）。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/pBvTytu.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;你会注意到上图中&lt;code&gt;master&lt;/code&gt;分支仍然指向&lt;code&gt;Commit 4&lt;/code&gt;，它的commit hash值是没有改变的。如果我们现在切换到&lt;code&gt;master&lt;/code&gt;分支，然后把&lt;code&gt;feature 1&lt;/code&gt;分支合并到&lt;code&gt;master&lt;/code&gt;分支，这将不会产生一个合并commit。这仅仅是一个快进提交，意思就是git将会简单地将指向&lt;code&gt;master&lt;/code&gt;分支的指针笔直地移到指向&lt;code&gt;feature 1&lt;/code&gt;分支的指针位置上。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/rLdDgw3.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;如果不把&lt;code&gt;feature 1&lt;/code&gt;分支合并到&lt;code&gt;master&lt;/code&gt;分支，我们还有更多的事要做，更多的commit要提交，我们可能会再fork一个仓库。我们的下一个&lt;code&gt;master&lt;/code&gt;分支的commit将会指向&lt;code&gt;Commit 4&lt;/code&gt;作为它的父节点，而&lt;code&gt;feature 1&lt;/code&gt;分支的第一个commit也是指向&lt;code&gt;Commit 4&lt;/code&gt;作为它的父节点。为了得到一条笔直的提交历史，我们需要再切换到&lt;code&gt;feature1&lt;/code&gt;分支，然后再次rebase到&lt;code&gt;master&lt;/code&gt;分支。这种情况很常出现，比如你在github上提交了一个pull request然后它过期了。如果项目的维护者没有合并你 的pull request，而是在这个项目上继续做一些其他工作，那么你的pull request就需要再来一次rebase操作以获取一个干净的git历史。把你做的工作rebase到原仓库分支上才可以让这个pull request能够在合并进去的时候采用简单的快进方式。接受一个pull request只是一个简单的合并。如果在提交pull request之前就rebase了你做的工作，那么这个merge就是一个快进方式的merge，这也能保证原仓库的干净。（译者注：这里的&lt;code&gt;干净&lt;/code&gt;指的是没有额外的合并信息。）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;危险！！！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这部分内容是对rebase的使用进行一些警告，主要还是在多人协作上需要注意。因为rebase是一种改写commit的操作，所以相对比较危险，作者给出的意见是：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Undoing a rebase is not easy, and often impossible so you really need to pay attention to what you’re doing. The benefits of rebasing are great, but not if you don’t know what you’re doing.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;撤销一个rebase操作不简单，而且经常是不可能的。你必须很注意自己在干什么。rebase让人受益，当时如果你不知道你在干什么的话，别用reabse。&lt;/p&gt;
&lt;p&gt;这部分内容不翻译了，有兴趣自己看原文吧。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;英文地址:&lt;a href=&quot;http://codetunnel.com/merge-vs-rebase-part-3-what-is-a-rebase/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://codetunnel.com/merge-vs-rebase-part-3-what-is-a-rebase/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;内容提要&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第一部分：&lt;a href=&quot;http://fusijie.github.io/2014/10/08/what-is-a-commit-hash/&quot;&gt;commit hash是什么？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第二部分：&lt;a href=&quot;http://fusijie.github.io/2014/10/15/what-is-a-merge/&quot;&gt;merge是什么？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第三部分：rebase是什么？&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在&lt;a href=&quot;http://fusijie.github.io/2014/10/08/what-is-a-commit-hash/&quot;&gt;第一部分&lt;/a&gt;中，我们讨论了什么是commit hash，其中一个很重要的特点就是commit无法被修改。hash值是根据存储在commit中的信息生成的，所以修改一个commit或者commit hash，你必须要创建一个全新的commit。我们还讨论了每一个commit存储了它的前一个commit的hash值。我们所没有讨论的是它对我们Git历史的影响。&lt;/p&gt;
    
    </summary>
    
      <category term="git" scheme="http://fusijie.github.io/categories/git/"/>
    
    
      <category term="rebase" scheme="http://fusijie.github.io/tags/rebase/"/>
    
  </entry>
  
  <entry>
    <title>(译)第二部分：什么是merge?</title>
    <link href="http://fusijie.github.io/2014/10/15/what-is-a-merge/"/>
    <id>http://fusijie.github.io/2014/10/15/what-is-a-merge/</id>
    <published>2014-10-14T16:03:00.000Z</published>
    <updated>2016-04-24T14:45:55.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;strong&gt;内容提要&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第一部分：&lt;a href=&quot;http://fusijie.github.io/2014/10/08/what-is-a-commit-hash/&quot;&gt;commit hash是什么？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第二部分：merge是什么？&lt;/li&gt;
&lt;li&gt;第三部分：&lt;a href=&quot;http://fusijie.github.io/2014/11/18/what-is-a-rebase/&quot;&gt;rebase是什么？&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在&lt;a href=&quot;http://fusijie.github.io/2014/10/08/what-is-a-commit-hash/&quot;&gt;第一部分&lt;/a&gt;我们创建了一个小的demo仓库，它拥有着一个&lt;code&gt;feature1&lt;/code&gt;分支，而且这个分支已经准备好要merge到&lt;code&gt;master&lt;/code&gt;分支中了。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/kxDIgKl.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;此时，我们可以选择merge或者rebase &lt;code&gt;feature1&lt;/code&gt;分支到&lt;code&gt;master&lt;/code&gt;分支。关于rebase将会在&lt;a href=&quot;http://fusijie.github.io/2014/11/18/what-is-a-rebase/&quot;&gt;第三部分&lt;/a&gt;进行介绍。现在我们来看一下，采用merge的方式到底发生了什么。把分支合并到一起是非常直接的。首先需要将切换到要合并进去的分支，在这里，因为我们要将&lt;code&gt;feature1&lt;/code&gt;合并到&lt;code&gt;master&lt;/code&gt;分支，所以需要切换到&lt;code&gt;master&lt;/code&gt;分支。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/S0av3NM.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;我切换到&lt;code&gt;master&lt;/code&gt;分支，然后将&lt;code&gt;feature1&lt;/code&gt;分支合并进去。回过头来再看一下这之中发生了什么，为什么Source Tree生成的图形是这个样子的。&lt;/p&gt;
&lt;p&gt;还记得&lt;a href=&quot;http://fusijie.github.io/2014/10/08/what-is-a-commit-hash/&quot;&gt;第一部分&lt;/a&gt;中&lt;code&gt;Commit 3&lt;/code&gt;和&lt;code&gt;Commit 4&lt;/code&gt;引用着同一个先前commit吗？&lt;code&gt;Commit 2&lt;/code&gt;是这两个commit共同的祖先，因为&lt;code&gt;Commit 3&lt;/code&gt;是在另一个分支上创建的，而&lt;code&gt;Commit 4&lt;/code&gt;是在&lt;code&gt;master&lt;/code&gt;分支上创建的，所以它完全不知道&lt;code&gt;Commit 3&lt;/code&gt;的存在。在&lt;code&gt;feature1&lt;/code&gt;上我们添加了更多的commit。&lt;code&gt;Commit 5&lt;/code&gt;直接引用了&lt;code&gt;Commit 3&lt;/code&gt;，因为&lt;code&gt;Commit 4&lt;/code&gt;只在&lt;code&gt;master&lt;/code&gt;分支上有效，&lt;code&gt;Commit 6&lt;/code&gt;直接引用了&lt;code&gt;Commit 5&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;当我们将&lt;code&gt;feature1&lt;/code&gt;合并到&lt;code&gt;master&lt;/code&gt;中，它并不是通过某种方式神奇地把这些commit都移到&lt;code&gt;master&lt;/code&gt;分支上。实际上，它创建了一个包含了&lt;code&gt;feature1&lt;/code&gt;分支上&lt;strong&gt;所有的&lt;/strong&gt;变更的全新commit。这个commit叫&lt;code&gt;Merge branch &amp;#39;feature1&amp;#39;&lt;/code&gt;，就像这样：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/RECAHy7.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;如果你注意到上图中的commit差异，就会看到我添加到&lt;code&gt;index.txt&lt;/code&gt;中二了吧唧的这几行。你应该会注意到这几行是通过各个commit分开地添加进去的。然而，现在你看到的是所有的这些改变都在单一的一个差异中。&lt;/p&gt;
&lt;p&gt;Git所做的只是把&lt;code&gt;feature1&lt;/code&gt;中所有的commit的所有差异汇聚到一个单一的commit中。这个新的commit干了一些我们之前没有讨论过的事。从上图可以看到它拥有2个祖先，也就拥有着从&lt;code&gt;Commit 4&lt;/code&gt;和&lt;code&gt;Commit 6&lt;/code&gt;过来的两条线。为什么呢？commit可以保存多个先前commit的索引。我现在才来讲这个话题是因为我不想太早地引起混淆。&lt;/p&gt;
&lt;p&gt;当一个commit被创建的时候，它所引用的之前commit数量可以是一个，多个，甚至没有。通常只有仓库中第一个commit才会没有先前commit，而merge commit一般都拥有超过一个的先前commit。&lt;/p&gt;
&lt;p&gt;如果你还记得&lt;a href=&quot;http://fusijie.github.io/2014/10/08/what-is-a-commit-hash/&quot;&gt;第一部分&lt;/a&gt;的话，分支，其实实际上只是一个指向一个指定commit的指针而已。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/S0av3NM.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;你可能会注意到&lt;code&gt;feature1&lt;/code&gt;仍然指向了&lt;code&gt;Commit 6&lt;/code&gt;，而&lt;code&gt;master&lt;/code&gt;分支指向了新的merge commit，很简单，因为我们是将&lt;code&gt;feature1&lt;/code&gt; 合并到&lt;code&gt;master&lt;/code&gt;。如果我们将分支切换到&lt;code&gt;feature1&lt;/code&gt;，然后再把&lt;code&gt;master&lt;/code&gt;合并进来，那么Git所做的就是一个&lt;em&gt;fast-forward&lt;/em&gt; marge（快进合并），这会把&lt;code&gt;feature1&lt;/code&gt;的指针指向最新的commit。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/Ggvb3UK.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;如果我们完全删除了&lt;code&gt;feature1&lt;/code&gt;分支，你可能会以为粉色的线消失，但是你错了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/rcSSPFa.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;记住，Source Tree和其他的Git可视工具是通过遍历你的commit，用索引的commit hash连接各个commit来生成图形的。分支只是一个指向指定commit的指针。当你从一个远程仓库拉取更新（pull）时，Git所做的是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1.下载所有你本地机器上没有的commit&lt;/li&gt;
&lt;li&gt;2.合并丢失的commit到你的本地仓库，或是通过一个merge commit，或是通过一个&lt;em&gt;fast-forward&lt;/em&gt; merge，前提是你在最后一次拉取更新后没有做任何的修改。&lt;/li&gt;
&lt;li&gt;3.把你的本地分支指向最新的commit。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果你曾经混淆过&lt;code&gt;master&lt;/code&gt;和&lt;code&gt;origin/master&lt;/code&gt;指针，那现在你应该知道它们是是啥了。&lt;code&gt;origin/master&lt;/code&gt;告诉你你的&lt;code&gt;origin&lt;/code&gt;远程&lt;code&gt;master&lt;/code&gt;分支指向哪。如果我给这个demo仓库添加了一个远程仓库叫&lt;code&gt;origin&lt;/code&gt;，然后在本地仓库上做了一些commit，Git的历史可能会像这样：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/hSizNJB.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;你会看到&lt;code&gt;master&lt;/code&gt;分支指向了最新的commit，而&lt;code&gt;origin/master&lt;/code&gt;指向了前一个merge commit。Source Tree甚至提示我们说有一个commit可以推送（push）到远程仓库。如果我们推送上去，Git将会上传丢失的commit，然后更新你的远程分支指针，此时&lt;code&gt;origin/master&lt;/code&gt;已经和你的本地&lt;code&gt;master&lt;/code&gt;分支指向了相同的commit。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/pmyLiFb.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;希望你现在对Git的合并功能有了更好的理解。跳到&lt;a href=&quot;&quot;&gt;第三部分&lt;/a&gt;让我们深究下rebase，看看它和merge有什么区别吧唧。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;英文地址:&lt;a href=&quot;http://codetunnel.com/merge-vs-rebase-part-2-what-is-a-merge/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://codetunnel.com/merge-vs-rebase-part-2-what-is-a-merge/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;内容提要&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第一部分：&lt;a href=&quot;http://fusijie.github.io/2014/10/08/what-is-a-commit-hash/&quot;&gt;commit hash是什么？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第二部分：merge是什么？&lt;/li&gt;
&lt;li&gt;第三部分：&lt;a href=&quot;http://fusijie.github.io/2014/11/18/what-is-a-rebase/&quot;&gt;rebase是什么？&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在&lt;a href=&quot;http://fusijie.github.io/2014/10/08/what-is-a-commit-hash/&quot;&gt;第一部分&lt;/a&gt;我们创建了一个小的demo仓库，它拥有着一个&lt;code&gt;feature1&lt;/code&gt;分支，而且这个分支已经准备好要merge到&lt;code&gt;master&lt;/code&gt;分支中了。&lt;/p&gt;
    
    </summary>
    
      <category term="git" scheme="http://fusijie.github.io/categories/git/"/>
    
    
      <category term="merge" scheme="http://fusijie.github.io/tags/merge/"/>
    
  </entry>
  
  <entry>
    <title>(译)第一部分：什么是commit hash?</title>
    <link href="http://fusijie.github.io/2014/10/08/what-is-a-commit-hash/"/>
    <id>http://fusijie.github.io/2014/10/08/what-is-a-commit-hash/</id>
    <published>2014-10-08T14:25:00.000Z</published>
    <updated>2016-04-24T14:46:06.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;strong&gt;内容提要&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第一部分：commit hash是什么？&lt;/li&gt;
&lt;li&gt;第二部分：&lt;a href=&quot;http://fusijie.github.io/2014/10/15/what-is-a-merge/&quot;&gt;merge是什么？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第三部分：&lt;a href=&quot;http://fusijie.github.io/2014/11/18/what-is-a-rebase/&quot;&gt;rebase是什么？&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;最近一段时间我在学习如何使用&lt;a href=&quot;http://git-scm.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Git&lt;/a&gt;，碰到的一个难点：如何区别&lt;a href=&quot;http://git-scm.com/docs/git-merge&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;merge&lt;/a&gt;和&lt;a href=&quot;http://git-scm.com/docs/git-rebase&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;rebase&lt;/a&gt;？大部分人都能理解merge的概念，但是对于rebase就不是很清楚了。在这三篇博文中我将尽可能用最简单的方式来解释它们的异同。不过在此之前，我们需要先了解一下什么是commit hash。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;如果你看过自己的commit历史，那么对于下面的内容肯定不会陌生：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;commit a9ca2c9f4e1e0061075aa47cbb97201a43b0f66f &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Author: Alex Ford &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Date: Mon Sep 8 6:49:17 2014&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Initial commit.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;你也许会认为这个由字母和数字组成的长长的字符串是一个单独commit的唯一的ID。虽然你是对的，但是你可能不知道它是一个&lt;a href=&quot;http://en.wikipedia.org/wiki/SHA-1&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SHA-1&lt;/a&gt;生成的哈希码，用于表示一个git commit对象。如果不去深入理解git &lt;a href=&quot;http://git-scm.com/book/en/Git-Internals-Git-Objects#Commit-Objects&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;commit object&lt;/a&gt;，那顶多就只知道这是一个基于它所表示的信息直接生成的一个很大的加密字符串。改变一个commit hash的唯一方式就是改变commit的细节，本质上来说，其实是生成了一个全新的commit对象。&lt;/p&gt;
&lt;p&gt;除了一些明显的信息，比如commit的作者，时间，存储的数据，commit通常还包含了在它之前的一个commit的hash，这正是你的commit历史产生的原因。每一个commit都知道紧跟它之前的commit hash。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/mljhFlh.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;上图可以看到我的&lt;a href=&quot;https://www.atlassian.com/software/sourcetree/overview&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SourceTree&lt;/a&gt;窗口，打开了一个我创建的demo仓库。我做了3次commit。SourceTree相当智能，它可以读取仓库中的每一个commit，然后用图形的方式展现出commit历史。可以看到，&lt;code&gt;Commit 2&lt;/code&gt;直接引用了&lt;code&gt;Commit 1&lt;/code&gt;，而&lt;code&gt;Commit 1&lt;/code&gt;直接引用了&lt;code&gt;Commit 0&lt;/code&gt;。需要注意的是，在这里，我直接使用Commit字样作为commit描述，为的是尽可能简单地谈论这个话题。实际上，每一个commit信息都应该正确地描述它们所做的改变。&lt;/p&gt;
&lt;p&gt;因为我的demo仓库master分支上只包含了这3个commit，所以SourceTree的图形从头到尾就是一条简单直线。好，现在我们就做点稍微复杂一点的事情，为了一个新的功能，我们需要创建一个独立的分支。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/S5o9qWL.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;从上图可以看到我创建了一个叫&lt;code&gt;feature1&lt;/code&gt;的分支，但是图形仍然是一样的。这是因为在创建完新的分支后，我并没有进行任何新的commit。分支实际上只是指向一个特殊commit的指针。现在，&lt;code&gt;master&lt;/code&gt;和&lt;code&gt;feature1&lt;/code&gt;都指向了同一个commit。好了，我们往&lt;code&gt;feature1&lt;/code&gt;分支添加一个新的commit&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/qjIWl7F.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;可以看到，我们的&lt;code&gt;feature1&lt;/code&gt;分支移动了它的指针来指向一个新的commit，&lt;code&gt;Commit 3&lt;/code&gt;。你可以看到，我们的图形&lt;em&gt;仍然&lt;/em&gt;是一条简单的直线。这是因为到目前为止，仅有4个commit，而每一个commit都是引用了紧跟它的前一个commit。如果我现在将&lt;code&gt;feature1&lt;/code&gt;合并到&lt;code&gt;master&lt;/code&gt;，只会发生一件事，就是&lt;code&gt;master&lt;/code&gt;分支会直接跳到和&lt;code&gt;feature1&lt;/code&gt;指向的相同commit，也就是&lt;code&gt;Commit 3&lt;/code&gt;。这个叫做&lt;em&gt;fast-forward&lt;/em&gt;合并（快进合并），因为它只是简单地将&lt;code&gt;master&lt;/code&gt;分支的移动到指向最新的commit。&lt;/p&gt;
&lt;p&gt;OK，当我们兴高采烈地在&lt;code&gt;feature1&lt;/code&gt;上赶工，突然老板一个电话说一个新的Bug需要被马上解决，这是重中之重。这需要暂停&lt;code&gt;feature1&lt;/code&gt;上的工作，然后马上在&lt;code&gt;master&lt;/code&gt;分支上修复bug并提交。这个时候，我们不得不切换到&lt;code&gt;master&lt;/code&gt;分支，然后进行一个commit。如果bug很大，可能得考虑是否要创建另一个分支，然后在这个分支上进行多个commit，现在假装bug很小，只要一个commit就能搞定。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/8MFZLBi.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;好了，现在看起来就有点不一样了，请注意上图的图形，&lt;code&gt;feature1&lt;/code&gt;分支上的&lt;code&gt;Commit 3&lt;/code&gt;在自己封闭的路径上了。原因很简单，&lt;code&gt;Commit 4&lt;/code&gt;和&lt;code&gt;Commit 3&lt;/code&gt;有相同的祖先。还记得commit是如何存储紧跟它之前的commit吗？当切换到&lt;code&gt;master&lt;/code&gt;分支的时候，我们将会返回到&lt;code&gt;Commit 2&lt;/code&gt;，因为&lt;code&gt;Commit 3&lt;/code&gt;只由&lt;code&gt;feature1&lt;/code&gt;分支指针引用。而&lt;code&gt;master&lt;/code&gt;分支指针仍然指向&lt;code&gt;Commit 2&lt;/code&gt;。因为我们的修复commit（&lt;code&gt;Commit 4&lt;/code&gt;）将&lt;code&gt;Commit 2&lt;/code&gt;视为它的前一个commit。&lt;/p&gt;
&lt;p&gt;现在的图形告诉我们，&lt;code&gt;Commit 4&lt;/code&gt;和&lt;code&gt;Commit 3&lt;/code&gt;同时都引用了&lt;code&gt;Commit 2&lt;/code&gt;作为他的前一个commit。在这种情况下，可以将&lt;code&gt;Commit 2&lt;/code&gt;视为&lt;code&gt;Commit 3&lt;/code&gt;和&lt;code&gt;Commit 4&lt;/code&gt;共有的祖先。现在我们的修复已经被提交了，所以可以回到&lt;code&gt;feature1&lt;/code&gt;分支继续工作了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/kxDIgKl.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;现在我在&lt;code&gt;feature1&lt;/code&gt;分支上创建了2个新的commit，&lt;code&gt;Commit 5&lt;/code&gt;和&lt;code&gt;Commit 6&lt;/code&gt;。新功能已经完成了，也是时候合并&lt;code&gt;feature1&lt;/code&gt;分支到&lt;code&gt;master&lt;/code&gt;分支中了。这时，我们可以选择merge &lt;code&gt;feature1&lt;/code&gt;分支到&lt;code&gt;master&lt;/code&gt;分支，也可以reabse &lt;code&gt;feature1&lt;/code&gt;分支到&lt;code&gt;master&lt;/code&gt;分支，让我们在&lt;a href=&quot;http://fusijie.github.io/2014/10/15/what-is-a-merge/&quot;&gt;第二部分&lt;/a&gt;中探究一下merge是什么？&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;英文地址:&lt;a href=&quot;http://codetunnel.com/merge-vs-rebase-part-1-what-is-a-commit-hash/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://codetunnel.com/merge-vs-rebase-part-1-what-is-a-commit-hash/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;内容提要&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第一部分：commit hash是什么？&lt;/li&gt;
&lt;li&gt;第二部分：&lt;a href=&quot;http://fusijie.github.io/2014/10/15/what-is-a-merge/&quot;&gt;merge是什么？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;第三部分：&lt;a href=&quot;http://fusijie.github.io/2014/11/18/what-is-a-rebase/&quot;&gt;rebase是什么？&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;最近一段时间我在学习如何使用&lt;a href=&quot;http://git-scm.com/&quot;&gt;Git&lt;/a&gt;，碰到的一个难点：如何区别&lt;a href=&quot;http://git-scm.com/docs/git-merge&quot;&gt;merge&lt;/a&gt;和&lt;a href=&quot;http://git-scm.com/docs/git-rebase&quot;&gt;rebase&lt;/a&gt;？大部分人都能理解merge的概念，但是对于rebase就不是很清楚了。在这三篇博文中我将尽可能用最简单的方式来解释它们的异同。不过在此之前，我们需要先了解一下什么是commit hash。&lt;/p&gt;
    
    </summary>
    
      <category term="git" scheme="http://fusijie.github.io/categories/git/"/>
    
    
      <category term="commit hash" scheme="http://fusijie.github.io/tags/commit-hash/"/>
    
  </entry>
  
  <entry>
    <title>Smali和逆向分析</title>
    <link href="http://fusijie.github.io/2014/09/08/smali-introduction/"/>
    <id>http://fusijie.github.io/2014/09/08/smali-introduction/</id>
    <published>2014-09-08T12:37:00.000Z</published>
    <updated>2016-04-24T14:37:29.000Z</updated>
    
    <content type="html">&lt;p&gt;这篇文章其实2个月前就想写了，但并不好写，就懒得写了，所以拖到现在～其实接触smali这门语法是件蛮偶然的事，接触后发现，次奥，这货在某些领域太有用了，至于为什么我想看完这篇文章应该都明白了。&lt;/p&gt;
&lt;p&gt;我自己也只是接触了皮毛，大概用了2个礼拜多一点，也不是很系统的学习，写这篇的目的主要还是想把知道的东西记下来，以后好追溯。&lt;/p&gt;
&lt;h3 id=&quot;Smali简介&quot;&gt;&lt;a href=&quot;#Smali简介&quot; class=&quot;headerlink&quot; title=&quot;Smali简介&quot;&gt;&lt;/a&gt;Smali简介&lt;/h3&gt;&lt;p&gt;Smali是Dalvik的寄存器语言，它与Java的关系，简单理解就是汇编之于C。假如你对汇编有足够的驾驭能力，那你可以通过修改汇编代码来改变C/C++代码的走向。当然，学过汇编的都清楚，汇编比&lt;a href=&quot;http://www.muppetlabs.com/~breadbox/bf/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;BrainFuck&lt;/a&gt;还难学，更不用说去反编译修改了。&lt;/p&gt;
&lt;p&gt;但是Smali有一点不一样，就是它很简单，只有一点点的语法，只要你会java，了解Android的相关知识，那你完全可以通过修改Smali代码来反向修改java代码，虽然绕了一点，但是在某些情况下你不得不这么做。还好，Smali很简单。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;apktool&quot;&gt;&lt;a href=&quot;#apktool&quot; class=&quot;headerlink&quot; title=&quot;apktool&quot;&gt;&lt;/a&gt;apktool&lt;/h3&gt;&lt;p&gt;说了这么多，还没有说Smali哪来？没错。Smali代码是安卓APK反编译而来的，所以Smali文件和Java文件一一对应。获取Smali文件，我们需要下载一个辅助工具：&lt;a href=&quot;https://code.google.com/p/android-apktool/downloads/list&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ApkTool&lt;/a&gt;。apktool这个命令行工具如果详细使用功能参数是比较多的，但是这里我们只需要用到2个最基础的功能：&lt;/p&gt;
&lt;p&gt;一个是反编译decode：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;apktool d xxx.apk
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;另一个是打包build：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;apktool b
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这里要注意的是路径问题，apktool如果没有加入到环境变量中，记得cd到apktool的目录去使用它。另一个是打包，如果只是简单的使用参数b，那要求是要在反编译出来的项目目录下执行，而打包好的文件会保存在这个项目目录下的dist目录。&lt;/p&gt;
&lt;p&gt;这是一个HelloWorld的应用程序反编译和打包的目录结构：&lt;/p&gt;
&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;http://www-fusijie-com.qiniudn.com/smali_Screen%20Shot%202014-09-08%20at%209.42.35%20PM.png&quot; alt=&quot;&quot; border=&quot;0&quot; title=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;

&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;http://www-fusijie-com.qiniudn.com/smali_Screen%20Shot%202014-09-08%20at%209.43.37%20PM.png&quot; alt=&quot;&quot; border=&quot;0&quot; title=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;

&lt;h3 id=&quot;Smali语法&quot;&gt;&lt;a href=&quot;#Smali语法&quot; class=&quot;headerlink&quot; title=&quot;Smali语法&quot;&gt;&lt;/a&gt;Smali语法&lt;/h3&gt;&lt;p&gt;这里仍然以一个默认的HelloWorld的应用程序进行解释吧。新建一个HelloWorld安卓项目，在MainActivity中只保留onCreate函数。代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;figcaption&gt;&lt;span&gt;MainActivity.java&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; com.fusijie.helloworld;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; android.app.Activity;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; android.os.Bundle;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;MainActivity&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Activity&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Bundle savedInstanceState)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.onCreate(savedInstanceState);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	setContentView(R.layout.activity_main);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;反编译后的Smali文件如下：&lt;/p&gt;
&lt;figure class=&quot;highlight smali&quot;&gt;&lt;figcaption&gt;&lt;span&gt;MainActivity.smali&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;.class&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt; public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;Lcom/fusijie/helloworld/MainActivity;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;.super&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;Landroid/app/Activity;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;.source&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;MainActivity.java&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# direct methods&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;.method&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt; public&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt; constructor&lt;/span&gt; &amp;lt;init&amp;gt;()V&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;   .locals&lt;/span&gt; 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;   .prologue&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;   .line&lt;/span&gt; 14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt; invoke-direct &lt;/span&gt;&amp;#123;p0&amp;#125;, &lt;span class=&quot;class&quot;&gt;Landroid/app/Activity;&lt;/span&gt;-&amp;gt;&amp;lt;init&amp;gt;()V&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt; return-void&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;.end method&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# virtual methods&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;.method&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt; protected&lt;/span&gt; onCreate(&lt;span class=&quot;class&quot;&gt;Landroid/os/Bundle;&lt;/span&gt;)V&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;   .locals&lt;/span&gt; 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;   .parameter&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;savedInstanceState&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;   .prologue&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;   .line&lt;/span&gt; 18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt; invoke-super &lt;/span&gt;&amp;#123;p0, p1&amp;#125;, &lt;span class=&quot;class&quot;&gt;Landroid/app/Activity;&lt;/span&gt;-&amp;gt;onCreate(&lt;span class=&quot;class&quot;&gt;Landroid/os/Bundle;&lt;/span&gt;)V&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;   .line&lt;/span&gt; 19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt; const/high16 &lt;/span&gt;v0, 0x7f03&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt; invoke-virtual &lt;/span&gt;&amp;#123;p0, v0&amp;#125;, &lt;span class=&quot;class&quot;&gt;Lcom/fusijie/helloworld/MainActivity;&lt;/span&gt;-&amp;gt;setContentView(I)V&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;   .line&lt;/span&gt; 20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt; return-void&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;.end method&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;对比一下，可以比较清楚的看出来，smali代码其实就是对java代码一个翻译，只是没有java看起来那么简单，smali把很多应该复杂的东西还原成复杂的状态了。简单解释下这段代码。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;前三行指明了类名，父类名，和源文件名。&lt;/li&gt;
&lt;li&gt;类名以“L”开头相信熟悉Jni的童鞋都比较清楚。&lt;/li&gt;
&lt;li&gt;“#”是smali中的注释。&lt;/li&gt;
&lt;li&gt;“.method”和“.end method”类似于Java中的大括号，包含了方法的实现代码段。&lt;/li&gt;
&lt;li&gt;方法的括号后面指明了返回类型，这同样类似与Jni的调用。&lt;/li&gt;
&lt;li&gt;“.locals”指明了这个方法用到的寄存器数量，当然寄存器可以重复利用，从“V0”起算。&lt;/li&gt;
&lt;li&gt;“.prologue”指定了代码开始处。&lt;/li&gt;
&lt;li&gt;“.line”表明这是在java源码中的第几行，其实这个值无所谓是多少，可以任意修改，主要用于调试。&lt;/li&gt;
&lt;li&gt;“invoke-direct”这是对方法的调用，可以看到这里调用了是Android.app.Activity的init方法，这在java里是隐式调用的。&lt;/li&gt;
&lt;li&gt;“return-void”表明了返回类型，这和java不一样，即使没有返回值，也需要这样写。&lt;/li&gt;
&lt;li&gt;接下来是onCreate方法，“.parameter”指明了参数名，但是一般没有用，需要注意的是p0代表的是this，p1开始代表函数参数，静态函数没有this，所以从p0开始就代表参数。&lt;/li&gt;
&lt;li&gt;在实现里先是调用了父类的方法，然后再调用setContentView，注意这里给了一个传参。整形的传参，这个值是先赋给寄存器v0，然后再调用的使用传递进去的。smali中都是这么使用，所有的值必须通过寄存器来中转。这点和汇编很像。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对比了Java代码和Smali代码，可以很清楚的看到，原本只有几行的代码到了Smali，内容被大大扩充了。Smali还原了Java隐藏的东西，同时显式地指定了很多细节。这还只是个最基本的HelloWorld的onCreate函数，如果有内部类，还会分文件显示。&lt;/p&gt;
&lt;p&gt;这样看来，其实Smali只能说复杂，不能说难。我这里不打算把Smali的语法再贴一次，这里给出几个链接，算是总结的相对好一点的（其实我都没看到有系统总结的。。。如果你有好的资料，欢迎跟帖分享）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://liuzhichao.com/p/tag/smali&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Smali语法–数据类型、方法、字段和寄存器&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://book.2cto.com/201212/12468.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Android软件安全与逆向分析–Smali文件格式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.csdn.net/wdaming1986/article/details/8299996&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Smali–Dalvik虚拟机指令语言&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://bbs.pediy.com/showthread.php?t=151769&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;看雪论坛–关于Smali语法&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这里顺便提供2个利器：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://liuzhichao.com/p/1476.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Smali Sublime Text语法高亮插件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://code.google.com/p/dex2jar/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;dex2jar，配合Smali事半功倍&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;小试牛刀&quot;&gt;&lt;a href=&quot;#小试牛刀&quot; class=&quot;headerlink&quot; title=&quot;小试牛刀&quot;&gt;&lt;/a&gt;小试牛刀&lt;/h3&gt;&lt;p&gt;了解了Smali的基本语法，那我们要动手试一下，Smali能做什么？仍然以HelloWorld为例，假如我们没有Android项目的源代码，只有一个APK，给他加个新功能吧！&lt;/p&gt;
&lt;p&gt;这个功能很简单，只是在HelloWorld中输出一个“Hello, Smali”。&lt;/p&gt;
&lt;p&gt;(1)第一步还是先使用apktool来反编译HelloWorld.apk。&lt;/p&gt;
&lt;p&gt;(2)打开smali下的com/fusijie/helloworld/MainActivity.smali文件。&lt;/p&gt;
&lt;p&gt;(3)原本我们在Java中要写的代码是：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;figcaption&gt;&lt;span&gt;Toast&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Toast.makeText(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;Hello, Smali&quot;&lt;/span&gt;, Toast.LENGTH_LONG).show();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;翻译成Smali就是：&lt;/p&gt;
&lt;figure class=&quot;highlight smali&quot;&gt;&lt;figcaption&gt;&lt;span&gt;Toast&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;.line&lt;/span&gt; xx&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt; const-string &lt;/span&gt;v0, &lt;span class=&quot;string&quot;&gt;&quot;Hello, Smali&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt; const/4 &lt;/span&gt;v1, 0x1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt; invoke-static &lt;/span&gt;&amp;#123;p0, v0, v1&amp;#125;, &lt;span class=&quot;class&quot;&gt;Landroid/widget/Toast;&lt;/span&gt;-&amp;gt;makeText(&lt;span class=&quot;class&quot;&gt;Landroid/content/Context;&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;Ljava/lang/CharSequence;&lt;/span&gt;I)&lt;span class=&quot;class&quot;&gt;Landroid/widget/Toast;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt; move-result-object &lt;/span&gt;v0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt; invoke-virtual &lt;/span&gt;&amp;#123;v0&amp;#125;, &lt;span class=&quot;class&quot;&gt;Landroid/widget/Toast;&lt;/span&gt;-&amp;gt;show()V&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;(4)最后在插入Smali的时候，我们需要修改2个地方：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;“.locals 1”，因为本来只用到了v0，现在多用了一个v1，所以改为“.locals 2”。&lt;/li&gt;
&lt;li&gt;“.line xx” xx随意改为一个不重复的值即可。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(5)使用apktool打包成apk，因为打包完后原有的密钥会丢失，所以需要重新打上我们自己的密钥，可以参考&lt;a href=&quot;http://www.eoeandroid.com/forum.php?mod=viewthread&amp;amp;tid=300764&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;很早以前我写的一个帖子&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;(6)最后的效果是这样的。&lt;/p&gt;
&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;http://www-fusijie-com.qiniudn.com/smali_Screen%20Shot%202014-09-08%20at%2011.00.38%20PM.png&quot; alt=&quot;&quot; border=&quot;0&quot; title=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;

&lt;h3 id=&quot;干点坏事&quot;&gt;&lt;a href=&quot;#干点坏事&quot; class=&quot;headerlink&quot; title=&quot;干点坏事&quot;&gt;&lt;/a&gt;干点坏事&lt;/h3&gt;&lt;p&gt;从上面一个例子对Smali的用途就很清楚了，没错，Smali注入。现在常见的除了测试以外的用途，Smali注入明显是带有黑客性质的，小的如破解游戏，替换游戏广告，大的甚至利用漏洞去破解密码，偷窃个人资料，财产等等。对Smali，安卓逆向分析，安卓系统安全比较清楚的，这些事其实都不算事。&lt;/p&gt;
&lt;p&gt;我这里以一个实际上线的游戏破解为例，看看我们平时在写代码时要注意哪些问题，避免辛辛苦苦写游戏，却在帮人家数钱。这里的破解不是重点，反破解才是重点。&lt;/p&gt;
&lt;p&gt;以市场上很火的一款单机游戏《消灭小星星》为例，下载地址是：&lt;a href=&quot;http://apk.91.com/Soft/Android/com.brianbaek.popstar-340.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://apk.91.com/Soft/Android/com.brianbaek.popstar-340.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;相同的方法反编译，在/smali/com/zplay/android/sdk/pay/ZplayPay.smali文件的dopay函数开头，注入如下代码：&lt;/p&gt;
&lt;figure class=&quot;highlight smali&quot;&gt;&lt;figcaption&gt;&lt;span&gt;popstar_crack&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;const/4 v0, 0x1	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt; invoke-static &lt;/span&gt;&amp;#123;v0&amp;#125;, &lt;span class=&quot;class&quot;&gt;Lcom/zplay/iap/ZplayJNI;&lt;/span&gt;-&amp;gt;sendMessage(I)V&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   return-void&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;原理很简单，这个游戏使用了Zplay的支付系统，在Java层的处理了支付逻辑，如果觉得Smali读起来费劲，那么直接使用dex2jar就能很清楚的看到，支付提醒甚至是中文的。Java层处理完支付逻辑后会给C++层丢个消息，调用C++层的代码去处理游戏逻辑，比如成功支付，那么幸运星就会相应地增加。这里使用native方法进行处理。&lt;/p&gt;
&lt;p&gt;所以注入的代码是，一旦进入支付逻辑，直接返回成功，同时强制返回函数，这就实现了支付的破解。当然作为一个有节操，有逼格的游戏从业者，这里就不放出破解版了（不过说得也够明白了）。查找注入点这东西靠的是耐心，细心和运气。&lt;/p&gt;
&lt;p&gt;为了方便，一般会先用正常的java写一些调试类，然后反编译出静态的smali放入目标文件夹中以供调试使用。&lt;/p&gt;
&lt;p&gt;再放张图，星星用不完了：&lt;/p&gt;
&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;http://www-fusijie-com.qiniudn.com/smali_crack_popstar.jpg&quot; alt=&quot;&quot; border=&quot;0&quot; title=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;

&lt;h3 id=&quot;总结&quot;&gt;&lt;a href=&quot;#总结&quot; class=&quot;headerlink&quot; title=&quot;总结&quot;&gt;&lt;/a&gt;总结&lt;/h3&gt;&lt;p&gt;就像上面说的，Smali能做的不仅仅是这些。有兴趣的可以看看这篇文章&lt;a href=&quot;http://blog.csdn.net/hu3167343/article/details/36418063&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《支付宝钱包手势密码破解实战》&lt;/a&gt;，我没有去验证过真伪，但是如作者所描述的应该是可行无误。这里用到的一个更高级的功能是将支付宝的加密解密逻辑Smali的jar包导入自己新建的工程，进而直接在自己的程序中集成支付宝的加密解密功能。&lt;/p&gt;
&lt;p&gt;在逆向分析游戏的过程中，我也发现了几个重要的点能帮助开发者提高自己程序的安全性。&lt;/p&gt;
&lt;p&gt;首先，完全避免破解是不可能的，我们能做的工作就是尽最大可能去妨碍破解者破解游戏，提高破解成本。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一定要使用混淆。不单单是第三方SDK，你的代码也是。破解游戏很重要一点就是要抓住游戏的逻辑。代码混淆后，Smali更加晦涩难懂，逻辑也更难掌握。&lt;/li&gt;
&lt;li&gt;回到开头的话，解读汇编比解读Smali难度大的多得多。所以重要的逻辑可以放到C/C++层去处理就不要放在Java层上去处理。&lt;/li&gt;
&lt;li&gt;多用连续调用的方式。这样出来的效果是Java只有一行，Smali可能有好几十行，看着都蛋疼。当然这对熟练的破解老手无效～&lt;/li&gt;
&lt;li&gt;在一些关键的点上，比如支付，多绕一下。而不是像《消灭小星星》这样，直接在Java内用中文显示“支付成功”，同时去调用JNI方法。用dex2jar看一眼就暴露了。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;哈哈，总之，小心你的艳照。。。&lt;/p&gt;
&lt;p&gt;哇咔咔，竟然写了快4个小时～&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;这篇文章其实2个月前就想写了，但并不好写，就懒得写了，所以拖到现在～其实接触smali这门语法是件蛮偶然的事，接触后发现，次奥，这货在某些领域太有用了，至于为什么我想看完这篇文章应该都明白了。&lt;/p&gt;
&lt;p&gt;我自己也只是接触了皮毛，大概用了2个礼拜多一点，也不是很系统的学习，写这篇的目的主要还是想把知道的东西记下来，以后好追溯。&lt;/p&gt;
&lt;h3 id=&quot;Smali简介&quot;&gt;&lt;a href=&quot;#Smali简介&quot; class=&quot;headerlink&quot; title=&quot;Smali简介&quot;&gt;&lt;/a&gt;Smali简介&lt;/h3&gt;&lt;p&gt;Smali是Dalvik的寄存器语言，它与Java的关系，简单理解就是汇编之于C。假如你对汇编有足够的驾驭能力，那你可以通过修改汇编代码来改变C/C++代码的走向。当然，学过汇编的都清楚，汇编比&lt;a href=&quot;http://www.muppetlabs.com/~breadbox/bf/&quot;&gt;BrainFuck&lt;/a&gt;还难学，更不用说去反编译修改了。&lt;/p&gt;
&lt;p&gt;但是Smali有一点不一样，就是它很简单，只有一点点的语法，只要你会java，了解Android的相关知识，那你完全可以通过修改Smali代码来反向修改java代码，虽然绕了一点，但是在某些情况下你不得不这么做。还好，Smali很简单。&lt;/p&gt;
    
    </summary>
    
      <category term="Android" scheme="http://fusijie.github.io/categories/Android/"/>
    
    
      <category term="Smali" scheme="http://fusijie.github.io/tags/Smali/"/>
    
      <category term="游戏破解" scheme="http://fusijie.github.io/tags/%E6%B8%B8%E6%88%8F%E7%A0%B4%E8%A7%A3/"/>
    
      <category term="逆向分析" scheme="http://fusijie.github.io/tags/%E9%80%86%E5%90%91%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>Cocos2dx-FAQ-2</title>
    <link href="http://fusijie.github.io/2014/09/02/cocos2dx-faq-2/"/>
    <id>http://fusijie.github.io/2014/09/02/cocos2dx-faq-2/</id>
    <published>2014-09-02T09:34:00.000Z</published>
    <updated>2016-04-24T14:35:47.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;Q-Cocos2d-x-v2-2-5-进行Android交叉编译的时候报错“’transform’-is-not-a-member-of-‘std’”，如何解决？&quot;&gt;&lt;a href=&quot;#Q-Cocos2d-x-v2-2-5-进行Android交叉编译的时候报错“’transform’-is-not-a-member-of-‘std’”，如何解决？&quot; class=&quot;headerlink&quot; title=&quot;Q:Cocos2d-x v2.2.5 进行Android交叉编译的时候报错“’transform’ is not a member of ‘std’”，如何解决？&quot;&gt;&lt;/a&gt;Q:Cocos2d-x v2.2.5 进行Android交叉编译的时候报错“’transform’ is not a member of ‘std’”，如何解决？&lt;/h3&gt;&lt;p&gt;由于没有添加标准算法库导致的问题，在&lt;a href=&quot;https://github.com/cocos2d/cocos2d-x/blob/v2/extensions/CocoStudio/Reader/WidgetReader/LabelReader/LabelReader.cpp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;extensions/CocoStudio/Reader/LabelReader.cpp&lt;/a&gt;增加头文件的引用即可。官方仓库已修复，可以直接拉取更新。&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;figcaption&gt;&lt;span&gt;包含头文件&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;algorithm&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/cocos2d/cocos2d-x/commit/70cbb91ea88a65be34e223c93f00edfdbfc11975&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;参考链接&lt;/a&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3 id=&quot;Q-Cocos2d-x有哪些可用的粒子编辑器？&quot;&gt;&lt;a href=&quot;#Q-Cocos2d-x有哪些可用的粒子编辑器？&quot; class=&quot;headerlink&quot; title=&quot;Q:Cocos2d-x有哪些可用的粒子编辑器？&quot;&gt;&lt;/a&gt;Q:Cocos2d-x有哪些可用的粒子编辑器？&lt;/h3&gt;&lt;p&gt;Mac平台：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://71squared.com/particledesigner&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Particle Designer，收费&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://itunes.apple.com/us/app/id600661093?mt=8&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Particle Playground，收费&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Windows平台：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;code.google.com/p/cocos2d-windows-particle-editor/&quot;&gt;Particle Editor，基于C#，开源，免费&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://bbs.csdn.net/topics/390627359&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ParticleDesigner，不开源，免费&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.csdn.net/jebe7282/article/details/8051899&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Cocos2d Particle Builder，基于QT，不开源，免费&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Web平台：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://particle2dx.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Particle2dx，免费&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3 id=&quot;Q-点击按钮菜单的时候如何让它具有放大效果？&quot;&gt;&lt;a href=&quot;#Q-点击按钮菜单的时候如何让它具有放大效果？&quot; class=&quot;headerlink&quot; title=&quot;Q:点击按钮菜单的时候如何让它具有放大效果？&quot;&gt;&lt;/a&gt;Q:点击按钮菜单的时候如何让它具有放大效果？&lt;/h3&gt;&lt;p&gt;以Cocos2d-x v3.2为例。&lt;/p&gt;
&lt;p&gt;如果使用Menu的话，手动去设置将按下图片放大（使用MenuItemSprite），那么按钮的放大效果会保持坐下坐标不变，往右上角放大，而不是从中心往四周放大。&lt;/p&gt;
&lt;p&gt;解决的方法是，使用Button控件。设置按下动作有效即可，目前放大倍数是1.1。v3.3版本会开放这个倍数设置接口。&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;figcaption&gt;&lt;span&gt;setPressedActionEnabled&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;auto&lt;/span&gt; btn = Button::create(&lt;span class=&quot;string&quot;&gt;&quot;CloseNormal.png&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;btn-&amp;gt;setPressedActionEnabled(&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;btn-&amp;gt;setPosition(Vec2(&lt;span class=&quot;number&quot;&gt;200&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;200&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;-&amp;gt;addChild(btn);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3 id=&quot;Q-Cocos2d-x支持视频播放吗？为什么TestCpp看不到相关测试例？&quot;&gt;&lt;a href=&quot;#Q-Cocos2d-x支持视频播放吗？为什么TestCpp看不到相关测试例？&quot; class=&quot;headerlink&quot; title=&quot;Q:Cocos2d-x支持视频播放吗？为什么TestCpp看不到相关测试例？&quot;&gt;&lt;/a&gt;Q:Cocos2d-x支持视频播放吗？为什么TestCpp看不到相关测试例？&lt;/h3&gt;&lt;p&gt;从Cocos2d-x v3.1开始，Cocos2d-x加入视频播放模块&lt;a href=&quot;https://github.com/cocos2d/cocos2d-x/blob/v3/cocos/ui/UIVideoPlayer.h&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;VideoPlayer&lt;/a&gt;，暂只支持iOS和Android平台。&lt;/p&gt;
&lt;p&gt;因此只有在iOS和Android平台上才能在看到TestCpp的VideoPlayer菜单，其他平台是隐藏的。具体位置是：&lt;br&gt;Node::UI/GUI Dynamic Create Test/VideoPlayerTest。&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3 id=&quot;Q-如何下载Cocos2d-x的历史版本？&quot;&gt;&lt;a href=&quot;#Q-如何下载Cocos2d-x的历史版本？&quot; class=&quot;headerlink&quot; title=&quot;Q:如何下载Cocos2d-x的历史版本？&quot;&gt;&lt;/a&gt;Q:如何下载Cocos2d-x的历史版本？&lt;/h3&gt;&lt;p&gt;最简单的方式就是克隆官方git仓库。通过标签来创建本地分支，并进行切换。这样就可以不用每个版本都去下载一个引擎了。&lt;/p&gt;
&lt;p&gt;比如要获取Cocos2d-x v3.2（注：这里不处理submodule）&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/cocos2d/cocos2d-x.git
cd cocos2d-x/
git checkout -b v3.2 cocos2d-x-3.2
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这样就在本地创建了3.2的分支。查看版本标签可以使用&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git tag
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;当然也可以采用直接下载的方式&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://www.cocos2d-x.org/download&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.cocos2d-x.org/download&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://www.cocos2d-x.org/download/version#Cocos2d-x&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.cocos2d-x.org/download/version#Cocos2d-x&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://code.google.com/p/cocos2d-x/downloads/list&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://code.google.com/p/cocos2d-x/downloads/list&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Q-Cocos2d-x-v2-2-5-进行Android交叉编译的时候报错“’transform’-is-not-a-member-of-‘std’”，如何解决？&quot;&gt;&lt;a href=&quot;#Q-Cocos2d-x-v2-2-5-进行Android交叉编译的时候报错“’transform’-is-not-a-member-of-‘std’”，如何解决？&quot; class=&quot;headerlink&quot; title=&quot;Q:Cocos2d-x v2.2.5 进行Android交叉编译的时候报错“’transform’ is not a member of ‘std’”，如何解决？&quot;&gt;&lt;/a&gt;Q:Cocos2d-x v2.2.5 进行Android交叉编译的时候报错“’transform’ is not a member of ‘std’”，如何解决？&lt;/h3&gt;&lt;p&gt;由于没有添加标准算法库导致的问题，在&lt;a href=&quot;https://github.com/cocos2d/cocos2d-x/blob/v2/extensions/CocoStudio/Reader/WidgetReader/LabelReader/LabelReader.cpp&quot;&gt;extensions/CocoStudio/Reader/LabelReader.cpp&lt;/a&gt;增加头文件的引用即可。官方仓库已修复，可以直接拉取更新。&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;figcaption&gt;&lt;span&gt;包含头文件&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;algorithm&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/cocos2d/cocos2d-x/commit/70cbb91ea88a65be34e223c93f00edfdbfc11975&quot;&gt;参考链接&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Cocos2dx-FAQ" scheme="http://fusijie.github.io/categories/Cocos2dx-FAQ/"/>
    
    
  </entry>
  
  <entry>
    <title>如何在Windows平台使用VS搭建C++/Lua的开发环境</title>
    <link href="http://fusijie.github.io/2014/08/31/how-to-complie-cpp-with-lua-in-the-vs/"/>
    <id>http://fusijie.github.io/2014/08/31/how-to-complie-cpp-with-lua-in-the-vs/</id>
    <published>2014-08-30T16:28:00.000Z</published>
    <updated>2016-04-24T14:34:50.000Z</updated>
    
    <content type="html">&lt;p&gt;本文主要介绍如何在Windows平台利用VS搭建C++/Lua开发环境。这里的“C++/Lua开发环境”主要指的是C++调用Lua，以及Lua调用C++。Mac平台相对会比较方便，但是VS也不是很麻烦就是了。Mac上利用XCode搭建的教程可以参考&lt;a href=&quot;http://4gamers.cn/archives/242&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;子龙山人的教程&lt;/a&gt;，当然也可以利用其他IDE，比如Eclipse+CDT+LDT来搭建，这都没有问题。&lt;/p&gt;
&lt;p&gt;另外，本文不谈及Lua/C++的交互，相关内容可以参考&lt;a href=&quot;http://book.luaer.cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《Lua程序设计》&lt;/a&gt;，或者&lt;a href=&quot;http://4gamers.cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;子龙山人的Lua系列教程&lt;/a&gt;。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;环境&quot;&gt;&lt;a href=&quot;#环境&quot; class=&quot;headerlink&quot; title=&quot;环境&quot;&gt;&lt;/a&gt;环境&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Windows 8.1&lt;/li&gt;
&lt;li&gt;VS2012&lt;/li&gt;
&lt;li&gt;Lua5.2.3&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;搭建步骤&quot;&gt;&lt;a href=&quot;#搭建步骤&quot; class=&quot;headerlink&quot; title=&quot;搭建步骤&quot;&gt;&lt;/a&gt;搭建步骤&lt;/h3&gt;&lt;h4 id=&quot;生成Lua静态库&quot;&gt;&lt;a href=&quot;#生成Lua静态库&quot; class=&quot;headerlink&quot; title=&quot;生成Lua静态库&quot;&gt;&lt;/a&gt;生成Lua静态库&lt;/h4&gt;&lt;p&gt;(1)下载lua src。&lt;/p&gt;
&lt;p&gt;最新版本是5.2.3。 &lt;a href=&quot;http://www.lua.org/download.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;下载地址&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;(2)新建VS Win32控制台应用程序，取名为Lua。在应用程序设置中选择应用程序类型为静态库，附加选项中取消预编译头的勾选。&lt;/p&gt;
&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;http://www-fusijie-com.qiniudn.com/vslua_pic_1.png&quot; alt=&quot;&quot; border=&quot;0&quot; title=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;


&lt;p&gt;(3)在Lua的VS项目文件夹中新建LuaSrc目录，用于存放Lua源码。解压下载的lua src，拷贝src目录下所有 &lt;em&gt; .c和 &lt;/em&gt; .h文件到LuaSrc。&lt;/p&gt;
&lt;p&gt;(4)在Lua的VS项目文件夹中新建bin目录，用于存放Lua.lib。&lt;/p&gt;
&lt;p&gt;(5)在VS环境中，右键点击Lua项目，选择添加-&amp;gt;现有项，导入LuaSrc目录下所有的文件。&lt;/p&gt;
&lt;p&gt;(6)右键点击Lua项目，选择属性，在顶部选择所有配置，然后修改配置属性-&amp;gt;常规-&amp;gt;输出目录为&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$(SolutionDir)bin
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;(7)为了禁止一些安全警告（Windows程序员知道为什么），需要再修改配置属性-&amp;gt;C/C++-&amp;gt;预处理器-&amp;gt;预处理器定义，在末尾添加&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;;_CRT_SECURE_NO_DEPRECATE;_SCL_SECURE_NO_DEPRECATE
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;(8)选择release模式，点击项目，生成Lua.lib即可。Lua.lib生成在bin目录下。&lt;/p&gt;
&lt;h4 id=&quot;调用Lua静态库&quot;&gt;&lt;a href=&quot;#调用Lua静态库&quot; class=&quot;headerlink&quot; title=&quot;调用Lua静态库&quot;&gt;&lt;/a&gt;调用Lua静态库&lt;/h4&gt;&lt;p&gt;(1)在Lua解决方案下新建名字为HelloLua的Win32控制台程序，采用默认选项，不做修改。&lt;/p&gt;
&lt;p&gt;(2)右键点击HelloLua项目，选择属性，修改配置属性-&amp;gt;C/C++-&amp;gt;附加包含目录，新增&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;..\LuaSrc
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;(3)在修改配置属性-&amp;gt;链接器-&amp;gt;输入-&amp;gt;附加依赖项，新增&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;..\bin\Lua.lib
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;或者使用代码链接lua库，即在HeloLua.cpp中添加如下代码，&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;figcaption&gt;&lt;span&gt;调用lua.lib&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;pragma&lt;/span&gt; comment (lib,&lt;span class=&quot;string&quot;&gt;&quot;../bin/Lua.lib&quot;&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;(4)设置HelloLua项目为默认启动项，点击生成项目即可。&lt;/p&gt;
&lt;p&gt;(5)因为此时main函数并没有执行任何代码，所以控制台一闪而过。右键HelloLua项目的源文件，添加新建项，取名hellolua.lua。&lt;/p&gt;
&lt;p&gt;(6)一个简单的调用示例：&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;figcaption&gt;&lt;span&gt;demo&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;*hellolua.lua*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	print(&quot;Hello, Lua&quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*HelloLua.cpp*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	#include &quot;stdafx.h&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	#pragma comment (lib,&quot;Lua.lib&quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	#include &quot;lua.hpp&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	int _tmain(int argc, _TCHAR* argv[])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		lua_State* lua_state = luaL_newstate(); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		luaL_openlibs(lua_state);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		luaL_dofile(lua_state,&quot;hellolua.lua&quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		lua_close(lua_state);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		getchar();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		return 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;em&gt;效果&lt;/em&gt;&lt;/p&gt;
&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;http://www-fusijie-com.qiniudn.com/vslua_pic_2.png&quot; alt=&quot;&quot; border=&quot;0&quot; title=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;

&lt;h4 id=&quot;生成Lua-exe和Luac-exe&quot;&gt;&lt;a href=&quot;#生成Lua-exe和Luac-exe&quot; class=&quot;headerlink&quot; title=&quot;生成Lua.exe和Luac.exe&quot;&gt;&lt;/a&gt;生成Lua.exe和Luac.exe&lt;/h4&gt;&lt;p&gt;由于下载的lua源码中包含lua.c和luac.c，这两个文件都有main入口，同时编译的话会出错，所以只要删除其中一个，另一个就可以正常编译。&lt;/p&gt;
&lt;p&gt;(1)新建VS空项目，取名为Lua。&lt;/p&gt;
&lt;p&gt;(2)在Lua的VS项目文件夹中新建LuaSrc目录，用于存放Lua源码。解压下载的lua src，拷贝src目录下是所有 &lt;em&gt; .c和 &lt;/em&gt; .h文件。&lt;/p&gt;
&lt;p&gt;(3)在VS环境中，右键点击Lua项目，选择添加-&amp;gt;现有项，导入LuaSrc目录下所有的文件。&lt;/p&gt;
&lt;p&gt;(4)右键点击Lua项目，选择属性，在顶部选择所有配置，然后修改配置属性-&amp;gt;C/C++-&amp;gt;预处理器-&amp;gt;预处理器定义，在末尾添加&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;;_CRT_SECURE_NO_DEPRECATE;_SCL_SECURE_NO_DEPRECATE
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;(5)在Lua项目的源文件，找到luac.c，右键移除。&lt;/p&gt;
&lt;p&gt;(6)选择release模式，点击项目生成lua.exe即可。&lt;/p&gt;
&lt;p&gt;(7)同理在同个解决方案下创建LuaC空项目，按以上步骤生成luac.exe。只是第五步要改为“找到lua.c，右键移除”。&lt;/p&gt;
&lt;p&gt;(8)lua.exe和luac.exe生成在Lua项目目录下的release目录。&lt;/p&gt;
&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;http://www-fusijie-com.qiniudn.com/vslua_pic_3.png&quot; alt=&quot;&quot; border=&quot;0&quot; title=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;

&lt;p&gt;C++调用Lua项目：&lt;a href=&quot;https://github.com/fusijie/Cpp_Lua_VS2012&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/fusijie/Cpp_Lua_VS2012&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Lua和LuaC项目：&lt;a href=&quot;https://github.com/fusijie/Lua_LuaC_exe&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/fusijie/Lua_LuaC_exe&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;如果你不想这么麻烦，也可以直接从上述2个github地址直接clone我的项目。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要介绍如何在Windows平台利用VS搭建C++/Lua开发环境。这里的“C++/Lua开发环境”主要指的是C++调用Lua，以及Lua调用C++。Mac平台相对会比较方便，但是VS也不是很麻烦就是了。Mac上利用XCode搭建的教程可以参考&lt;a href=&quot;http://4gamers.cn/archives/242&quot;&gt;子龙山人的教程&lt;/a&gt;，当然也可以利用其他IDE，比如Eclipse+CDT+LDT来搭建，这都没有问题。&lt;/p&gt;
&lt;p&gt;另外，本文不谈及Lua/C++的交互，相关内容可以参考&lt;a href=&quot;http://book.luaer.cn/&quot;&gt;《Lua程序设计》&lt;/a&gt;，或者&lt;a href=&quot;http://4gamers.cn/&quot;&gt;子龙山人的Lua系列教程&lt;/a&gt;。&lt;/p&gt;
    
    </summary>
    
      <category term="Lua" scheme="http://fusijie.github.io/categories/Lua/"/>
    
    
      <category term="VS2012" scheme="http://fusijie.github.io/tags/VS2012/"/>
    
      <category term="C++" scheme="http://fusijie.github.io/tags/C/"/>
    
      <category term="Lua" scheme="http://fusijie.github.io/tags/Lua/"/>
    
  </entry>
  
  <entry>
    <title>Cocos2dx-FAQ-1</title>
    <link href="http://fusijie.github.io/2014/08/26/cocos2dx-faq-1/"/>
    <id>http://fusijie.github.io/2014/08/26/cocos2dx-faq-1/</id>
    <published>2014-08-26T09:28:00.000Z</published>
    <updated>2016-04-24T14:32:42.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;Q-如何在安卓上给应用程序设置透明背景？&quot;&gt;&lt;a href=&quot;#Q-如何在安卓上给应用程序设置透明背景？&quot; class=&quot;headerlink&quot; title=&quot;Q:如何在安卓上给应用程序设置透明背景？&quot;&gt;&lt;/a&gt;Q:如何在安卓上给应用程序设置透明背景？&lt;/h3&gt;&lt;p&gt;(1)NativeActivity，以Cocos2d-x 3.0 rc0为例&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.cocoachina.com/bbs/read.php?tid=196780&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.cocoachina.com/bbs/read.php?tid=196780&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(2)JavaActivity，以Cocos2d-x 3.2 release为例&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.cocoachina.com/bbs/read.php?tid=224544&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.cocoachina.com/bbs/read.php?tid=224544&lt;/a&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3 id=&quot;Q-SimpleAudioEngine在Windows平台上卡顿严重，无法调节音量？&quot;&gt;&lt;a href=&quot;#Q-SimpleAudioEngine在Windows平台上卡顿严重，无法调节音量？&quot; class=&quot;headerlink&quot; title=&quot;Q:SimpleAudioEngine在Windows平台上卡顿严重，无法调节音量？&quot;&gt;&lt;/a&gt;Q:SimpleAudioEngine在Windows平台上卡顿严重，无法调节音量？&lt;/h3&gt;&lt;p&gt;SimpleAudioEngine是分平台实现的，Windows平台上部分API是空实现（比如preloadBackgroundMusic等等）,所以在Windows平台上并不提供预加载，调节音量等功能（参见&lt;a href=&quot;https://github.com/cocos2d/cocos2d-x/blob/v3/cocos/audio/win32/SimpleAudioEngine.cpp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;cocos/audio/win32/SimpleAudioEngine.cpp&lt;/a&gt;），移植到Android/iOS/Mac上就正常了。Windows上调节音量有网友提供了解决方案。&lt;/p&gt;
&lt;p&gt;参考链接：&lt;a href=&quot;http://www.cocoachina.com/bbs/read.php?tid=213345&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.cocoachina.com/bbs/read.php?tid=213345&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3 id=&quot;Q-Cocos2d-x-3-x无法重写Node-draw-方法？&quot;&gt;&lt;a href=&quot;#Q-Cocos2d-x-3-x无法重写Node-draw-方法？&quot; class=&quot;headerlink&quot; title=&quot;Q:Cocos2d-x 3.x无法重写Node::draw()方法？&quot;&gt;&lt;/a&gt;Q:Cocos2d-x 3.x无法重写Node::draw()方法？&lt;/h3&gt;&lt;p&gt;Cocos2d-x 从v3.0开始将Node::draw()方法标记为final（参见&lt;a href=&quot;https://github.com/cocos2d/cocos2d-x/blob/v3/cocos/2d/CCNode.h&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;cocos2d/2d/CCNode.h&lt;/a&gt;），引擎另外提供了&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;figcaption&gt;&lt;span&gt;draw函数&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;virtual&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;draw&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Renderer *renderer, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; Mat4&amp;amp; transform, uint32_t flags)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;函数，可以通过重写这个函数来绘制你自己的节点，需注意的是如果更改了任何的GL状态，在使用完后必须还原。&lt;/p&gt;
&lt;p&gt;参考链接：&lt;a href=&quot;http://www.cocoachina.com/bbs/read.php?tid=200176&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.cocoachina.com/bbs/read.php?tid=200176&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3 id=&quot;Q-使用ClippingNode，为什么在Android-iOS裁剪显示错误，或者背景变为绿色？&quot;&gt;&lt;a href=&quot;#Q-使用ClippingNode，为什么在Android-iOS裁剪显示错误，或者背景变为绿色？&quot; class=&quot;headerlink&quot; title=&quot;Q:使用ClippingNode，为什么在Android/iOS裁剪显示错误，或者背景变为绿色？&quot;&gt;&lt;/a&gt;Q:使用ClippingNode，为什么在Android/iOS裁剪显示错误，或者背景变为绿色？&lt;/h3&gt;&lt;p&gt;未开启OpenGL深度缓存，解决方法如下：&lt;/p&gt;
&lt;p&gt;&lt;em&gt;(1)iOS：在AppController.mm修改&lt;/em&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;figcaption&gt;&lt;span&gt;iOS修改深度缓存&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;EAGLView *__glView = [EAGLView viewWithFrame: [window bounds]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                    pixelFormat: kEAGLColorFormatRGBA8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                    depthFormat: GL_DEPTH24_STEN&lt;span class=&quot;built_in&quot;&gt;CIL8_OES&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                             preserveBackbuffer: &lt;span class=&quot;literal&quot;&gt;NO&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                     sharegroup: &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                  multiSampling: &lt;span class=&quot;literal&quot;&gt;NO&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                numberOfSamples: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;em&gt;(2)Android：在AppActivity.java修改&lt;/em&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;figcaption&gt;&lt;span&gt;Android修改深度缓存&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;AppActivity&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Cocos2dxActivity&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; Cocos2dxGLSurfaceView &lt;span class=&quot;title&quot;&gt;onCreateView&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       Cocos2dxGLSurfaceView glSurfaceView = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Cocos2dxGLSurfaceView(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;comment&quot;&gt;// TestCpp should create stencil buffer&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          glSurfaceView.setEGLConfigChooser(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; glSurfaceView;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3 id=&quot;Q-如何在Cocos2d-x实现C-调用Java？&quot;&gt;&lt;a href=&quot;#Q-如何在Cocos2d-x实现C-调用Java？&quot; class=&quot;headerlink&quot; title=&quot;Q:如何在Cocos2d-x实现C++调用Java？&quot;&gt;&lt;/a&gt;Q:如何在Cocos2d-x实现C++调用Java？&lt;/h3&gt;&lt;p&gt;C++调用Java代码主要是通过JNI实现，这里以Cocos2d-x 3.2为例。&lt;/p&gt;
&lt;p&gt;(1)C++部分：&lt;/p&gt;
&lt;p&gt;在HelloWorld.cpp增加如下函数，用于调用java代码。&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;figcaption&gt;&lt;span&gt;C++代码&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;if&lt;/span&gt; (CC_TARGET_PLATFORM == CC_PLATFORM_ANDROID)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;jni.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;platform/android/jni/JniHelper.h&quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;cocos2d.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;endif&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; HelloWorld::testJNI()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;if&lt;/span&gt; (CC_TARGET_PLATFORM == CC_PLATFORM_ANDROID)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	JniMethodInfo minfo;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; isHave = JniHelper::getStaticMethodInfo(minfo,&lt;span class=&quot;string&quot;&gt;&quot;org/cocos2dx/cpp/AppActivity&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;testjni&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;()V&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!isHave) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   		&lt;span class=&quot;built_in&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;jni:testjni is null&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   		minfo.env-&amp;gt;CallStaticVoidMethod(minfo.classID, minfo.methodID);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;endif&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;(2)Java部分：&lt;/p&gt;
&lt;p&gt;在org.cocos2dx.cpp.Activity中增加如下函数，供C++调用。&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;figcaption&gt;&lt;span&gt;Java代码&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;testjni&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;From Java&quot;&lt;/span&gt;); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;更详细的使用说明，请参考：&lt;a href=&quot;http://docs.oracle.com/javase/6/docs/technotes/guides/jni/spec/jniTOC.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Java Native Interface Specification&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3 id=&quot;Q-如何在Cocos2d-x实现Java调用C-？&quot;&gt;&lt;a href=&quot;#Q-如何在Cocos2d-x实现Java调用C-？&quot; class=&quot;headerlink&quot; title=&quot;Q:如何在Cocos2d-x实现Java调用C++？&quot;&gt;&lt;/a&gt;Q:如何在Cocos2d-x实现Java调用C++？&lt;/h3&gt;&lt;p&gt;Java调C++代码也是通过JNI实现，当然Android给我们提供了更方便的工具NDK。由于这里是以Cocos2d-x为例，所以不再去赘述NDK使用。同样以Cocos2d-x 3.2为例。&lt;/p&gt;
&lt;p&gt;(1)C++部分：&lt;/p&gt;
&lt;p&gt;在HelloWorld.cpp增加如下函数，供java调用。&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;figcaption&gt;&lt;span&gt;C++代码	&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;jni.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;ifdef&lt;/span&gt; __cplusplus&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;extern&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;C&quot;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;endif&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;function&quot;&gt;JNIEXPORT jstring JNICALL &lt;span class=&quot;title&quot;&gt;Java_org_cocos2dx_cpp_AppActivity_testjni&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;params&quot;&gt;(JNIEnv *env, jclass)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       return env-&amp;gt;NewStringUTF(&lt;span class=&quot;string&quot;&gt;&quot;From C++&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;ifdef&lt;/span&gt; __cplusplus&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;endif&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;(2)Java部分：&lt;/p&gt;
&lt;p&gt;在org.cocos2dx.cpp.Activity中增加如下函数，用于调用C++代码。&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;figcaption&gt;&lt;span&gt;java代码&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;AppActivity&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Cocos2dxActivity&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Bundle savedInstanceState)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;// TODO Auto-generated method stub&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.onCreate(savedInstanceState);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	System.out.println(testjni());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;native&lt;/span&gt; String &lt;span class=&quot;title&quot;&gt;testjni&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;参考地址：&lt;a href=&quot;https://www3.ntu.edu.sg/home/ehchua/programming/java/JavaNativeInterface.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Java Programming Tutorial Java Native Interface&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3 id=&quot;Q-如何在Cocos2d-x实现截图功能？&quot;&gt;&lt;a href=&quot;#Q-如何在Cocos2d-x实现截图功能？&quot; class=&quot;headerlink&quot; title=&quot;Q:如何在Cocos2d-x实现截图功能？&quot;&gt;&lt;/a&gt;Q:如何在Cocos2d-x实现截图功能？&lt;/h3&gt;&lt;p&gt;&lt;em&gt;（1）Cocos2d-x 2.x&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Cocos2d-x 2.x没有提供截图功能，但是可以用CCRenderTexture来实现这个功能&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;figcaption&gt;&lt;span&gt;SaveScreenShot&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; CTestLayer::SaveScreenShot()  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;comment&quot;&gt;//获取屏幕尺寸  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	CCSize size = CCDirector::sharedDirector()-&amp;gt;getWinSize();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;comment&quot;&gt;//使用屏幕尺寸初始化一个空的渲染纹理对象  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	CCRenderTexture* texture = CCRenderTexture::create((int)size.width, (int)size.height);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;comment&quot;&gt;//设置位置      &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	texture-&amp;gt;setPosition(ccp(size.width/&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, size.height/&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;));  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;comment&quot;&gt;//开始获取      &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	texture-&amp;gt;begin();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;comment&quot;&gt;//遍历场景节点对象，填充纹理到texure中  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	CCDirector::sharedDirector()-&amp;gt;getRunningScene()-&amp;gt;visit();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;comment&quot;&gt;//结束获取  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	texture-&amp;gt;end();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;comment&quot;&gt;//保存为PNG图，Win32/Debug目录下  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	texture-&amp;gt;saveToFile(&lt;span class=&quot;string&quot;&gt;&quot;screenshot.png&quot;&lt;/span&gt;, kCCImageFormatPNG);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;em&gt;（2）Cocos2d-x 3.x&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;在Cocos2d-x 3.2之前，引擎也没有提供截图功能，同样可以使用RenderTexture实现&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;figcaption&gt;&lt;span&gt;SaveScreenShot&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; Director::saveScreenshot(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt;&amp;amp; fileName,&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::function&amp;lt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;(const std::string&amp;amp;)&amp;gt;&amp;amp; callback)  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	Image::Format format;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;comment&quot;&gt;//进行后缀判断  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt;::npos != fileName.find_last_of(&lt;span class=&quot;string&quot;&gt;&quot;.&quot;&lt;/span&gt;))&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;auto&lt;/span&gt; extension = fileName.substr(fileName.find_last_of(&lt;span class=&quot;string&quot;&gt;&quot;.&quot;&lt;/span&gt;),fileName.length());  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!extension.compare(&lt;span class=&quot;string&quot;&gt;&quot;.png&quot;&lt;/span&gt;)) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           format = Image::Format::PNG;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(!extension.compare(&lt;span class=&quot;string&quot;&gt;&quot;.jpg&quot;&lt;/span&gt;)) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           format = Image::Format::JPG;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;built_in&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;cocos2d: the image can only be saved as JPG or PNG format&quot;&lt;/span&gt;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           return;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;built_in&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;cocos2d: the image can only be saved as JPG or PNG format&quot;&lt;/span&gt;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       return ;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;comment&quot;&gt;//获取屏幕尺寸，初始化一个空的渲染纹理对象  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;keyword&quot;&gt;auto&lt;/span&gt; renderTexture = RenderTexture::create(getWinSize().width, getWinSize().height, Texture2D::PixelFormat::RGBA8888);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;comment&quot;&gt;//清空并开始获取  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	renderTexture-&amp;gt;beginWithClear(&lt;span class=&quot;number&quot;&gt;0.0f&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0.0f&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0.0f&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0.0f&lt;/span&gt;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;comment&quot;&gt;//遍历场景节点对象，填充纹理到RenderTexture中  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	getRunningScene()-&amp;gt;visit();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;comment&quot;&gt;//结束获取  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	renderTexture-&amp;gt;end();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;comment&quot;&gt;//保存文件  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	renderTexture-&amp;gt;saveToFile(fileName , format);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;comment&quot;&gt;//使用schedule在下一帧中调用callback函数  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;keyword&quot;&gt;auto&lt;/span&gt; fullPath = FileUtils::getInstance()-&amp;gt;getWritablePath() + fileName;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;keyword&quot;&gt;auto&lt;/span&gt; scheduleCallback = [&amp;amp;,fullPath,callback](float dt)&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       	callback(fullPath);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&amp;#125;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;keyword&quot;&gt;auto&lt;/span&gt; _schedule = getRunningScene()-&amp;gt;getScheduler();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	_schedule-&amp;gt;schedule(scheduleCallback, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0.0f&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0.0f&lt;/span&gt;, &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;screenshot&quot;&lt;/span&gt;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;从Cocos2d-x 3.2之后开始，引擎提供了captureScreen函数来实现截图功能&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;figcaption&gt;&lt;span&gt;captureScreen&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; Util::captureScreen(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::function&amp;lt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;(bool, const std::string&amp;amp;)&amp;gt;&amp;amp; afterCaptured, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt;&amp;amp; filename);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3 id=&quot;Q-如何在Cocos2d-x获取随机数？&quot;&gt;&lt;a href=&quot;#Q-如何在Cocos2d-x获取随机数？&quot; class=&quot;headerlink&quot; title=&quot;Q:如何在Cocos2d-x获取随机数？&quot;&gt;&lt;/a&gt;Q:如何在Cocos2d-x获取随机数？&lt;/h3&gt;&lt;p&gt;首先计算机是无法产生真正的随机数的，都是伪随机。获取随机数的方式和算法多种多样，这里只给出一种方法，基于最新的C++11。&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;figcaption&gt;&lt;span&gt;随机数产生&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;random&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::uniform_int_distribution&amp;lt;&lt;span class=&quot;keyword&quot;&gt;unsigned&lt;/span&gt;&amp;gt; u(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::default_random_engine e;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   e.seed((unsigned)time(NULL));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; random_number = u(e);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这个例子产生了一个范围在1～1000的随机数（这里采用的标准分布是离散型均匀分布）。&lt;/p&gt;
&lt;p&gt;参考：&lt;a href=&quot;http://www.stroustrup.com/C++11FAQ.html#std-random&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;C++11:Random number generation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3 id=&quot;Q-为什么直接点击Windows平台生成的exe可执行文件，提示程序已停止工作？&quot;&gt;&lt;a href=&quot;#Q-为什么直接点击Windows平台生成的exe可执行文件，提示程序已停止工作？&quot; class=&quot;headerlink&quot; title=&quot;Q:为什么直接点击Windows平台生成的exe可执行文件，提示程序已停止工作？&quot;&gt;&lt;/a&gt;Q:为什么直接点击Windows平台生成的exe可执行文件，提示程序已停止工作？&lt;/h3&gt;&lt;p&gt;这里以Cocos2d-x 3.2为例。&lt;/p&gt;
&lt;p&gt;(1)如果直接在Visual Studio编译生成目标文件，那么目标文件会被生成到&lt;code&gt;项目/proj.win32/Debug.win32&lt;/code&gt;目录下（debug模式）或者&lt;code&gt;项目/proj.win32/release.win32&lt;/code&gt;目录下（release模式）。由于资源文件没有拷贝到目标文件目录的关系，此时点击xxx.exe，程序会停止工作。&lt;/p&gt;
&lt;p&gt;解决方法是：手动将资源文件拷贝到xxx.exe同级目录下。&lt;/p&gt;
&lt;p&gt;(2)如果采用的是命令行&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cocos run -p win32
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;那目标文件会被生成到&lt;code&gt;项目/bin/debug/win32&lt;/code&gt;目录下，同时资源文件也会被拷贝到这个文件夹，此时直接点击xxx.exe就可以运行。&lt;code&gt;项目/proj.win32/Debug.win32&lt;/code&gt;目录也会有xxx.exe，点击也会提示停止工作，解决方法同上。&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3 id=&quot;Q-如何在popScene时使用场景过渡效果？&quot;&gt;&lt;a href=&quot;#Q-如何在popScene时使用场景过渡效果？&quot; class=&quot;headerlink&quot; title=&quot;Q:如何在popScene时使用场景过渡效果？&quot;&gt;&lt;/a&gt;Q:如何在popScene时使用场景过渡效果？&lt;/h3&gt;&lt;p&gt;这里以Cocos2d-x 3.2为例。需要修改引擎的Director::popScene()函数，也可以进行重载或者设置默认参数。&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;figcaption&gt;&lt;span&gt;popScene&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; Director::popScene(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::function&amp;lt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;(Scene* &amp;amp;)&amp;gt;&amp;amp; callback)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	CCASSERT(_runningScene != &lt;span class=&quot;literal&quot;&gt;nullptr&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;running scene should not null&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	_scenesStack.popBack();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;keyword&quot;&gt;ssize_t&lt;/span&gt; c = _scenesStack.size();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (c == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       	end();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       	_sendCleanupToScene = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       	_nextScene = _scenesStack.at(c - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(callback)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       		callback(_nextScene);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;使用方式：&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;figcaption&gt;&lt;span&gt;使用新的popScene&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;auto&lt;/span&gt; callback = [](Scene*&amp;amp; scene)&amp;#123;scene = TransitionJumpZoom::create(&lt;span class=&quot;number&quot;&gt;1.0f&lt;/span&gt;, scene);&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   Director::getInstance()-&amp;gt;popScene(callback);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Q-如何在安卓上给应用程序设置透明背景？&quot;&gt;&lt;a href=&quot;#Q-如何在安卓上给应用程序设置透明背景？&quot; class=&quot;headerlink&quot; title=&quot;Q:如何在安卓上给应用程序设置透明背景？&quot;&gt;&lt;/a&gt;Q:如何在安卓上给应用程序设置透明背景？&lt;/h3&gt;&lt;p&gt;(1)NativeActivity，以Cocos2d-x 3.0 rc0为例&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.cocoachina.com/bbs/read.php?tid=196780&quot;&gt;http://www.cocoachina.com/bbs/read.php?tid=196780&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(2)JavaActivity，以Cocos2d-x 3.2 release为例&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.cocoachina.com/bbs/read.php?tid=224544&quot;&gt;http://www.cocoachina.com/bbs/read.php?tid=224544&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Cocos2dx-FAQ" scheme="http://fusijie.github.io/categories/Cocos2dx-FAQ/"/>
    
    
  </entry>
  
  <entry>
    <title>PowerCmd，一个Windows下cmd的绝佳替代工具</title>
    <link href="http://fusijie.github.io/2014/08/24/tools-powercmd/"/>
    <id>http://fusijie.github.io/2014/08/24/tools-powercmd/</id>
    <published>2014-08-23T16:48:00.000Z</published>
    <updated>2014-08-30T16:30:00.000Z</updated>
    
    <content type="html">&lt;p&gt;由于工作关系（码奴），平时会需要接触到比较多奇奇怪怪的应用。而一些比较好的小众软件和工具，我觉得很有必要分享出来。这是第一篇，之后有的话会慢慢积累分享出来，如果你们也有好的软件，欢迎留言分享。&lt;/p&gt;
&lt;p&gt;因为只是介绍工具而已，所以内容会很简单。&lt;/p&gt;
&lt;p&gt;当然这里没有任何的广告成分。次奥。。。谁会给我广告费啊。。。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;blockquote&gt;
&lt;p&gt;当我第一次知道要写这些的时候，其实我是拒绝的！因为我觉得…呀…你不能叫我马上写，第一，我要试一下，我又不想说…我一篇文章写完以后加了很多特技，那工具赞啊…很酷！很炫！很屌！结果读者出来一定骂我，根本没有这种工具！这证明上面那个是假的……我说先要给我试一下。后来我经过也知道他们是很实在的，而且没有那种虚假成分的。那…用了这个月…这个月下来之后呢……起码我用了很舒服。现在呢…每天还在用！每天还在用呢…我还给了我团队用！来！来！来！大家试试看！那我跟读者讲∶「写的时候就写！写完之后，这个文章就是我的文章，就不要加，再加特技上去，加到没有就是这样子！我要给读者看到，我用完之后是这样子，你们用完之后，也是这样子！ &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;好了，黑完进入正题~&lt;/p&gt;
&lt;p&gt;用过Mac terminal的都会觉得Windows下的cmd就是一渣，但是没办法，各种原因有时候我们就得在渣上工作。前两天遇到了个问题：&lt;code&gt;cd始终无法切换文件夹目录&lt;/code&gt;，虽然后来找到了解决办法，但是还是决心找个cmd的替代品。&lt;/p&gt;
&lt;p&gt;解决方法：cd后增加&lt;code&gt;/d&lt;/code&gt;即可。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd /d F:/
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这一找不得了，&lt;strong&gt;PowerCmd&lt;/strong&gt;进入我的视野，官方网站是：&lt;a href=&quot;http://www.powercmd.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.powercmd.com/&lt;/a&gt;。&lt;/p&gt;
&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;http://www-fusijie-com.qiniudn.com/tools_powercmd_maintext.jpg&quot; alt=&quot;&quot; border=&quot;0&quot; title=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;

&lt;p&gt;我们来看看它有多强大。&lt;/p&gt;
&lt;p&gt;1.&lt;code&gt;多tab窗口&lt;/code&gt;，你可以同时在PowerCmd打开多个cmd窗口，根据你的喜好进行排列，如上图。可以最小化，也可以全屏。&lt;/p&gt;
&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;http://www-fusijie-com.qiniudn.com/tools_powercmd_pic%20001.png&quot; alt=&quot;&quot; border=&quot;0&quot; title=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;

&lt;p&gt;2.&lt;code&gt;保存&lt;/code&gt;工作状态，并在下次启动时&lt;code&gt;恢复&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;3.&lt;code&gt;集成到shell&lt;/code&gt;，右键点击任意文件夹，你会发现多了改PowerCmd的菜单，点击该菜单，启动PowerCmd，并默认cd到当前目录。碉堡了，省了很多cd是不是？&lt;/p&gt;
&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;http://www-fusijie-com.qiniudn.com/tools_powercmd_pic%20002.png&quot; alt=&quot;&quot; border=&quot;0&quot; title=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;


&lt;p&gt;4.自带的cmd复制粘贴很麻烦，PowerCmd的&lt;code&gt;复制粘贴&lt;/code&gt;就像操作普通文本一样。&lt;/p&gt;
&lt;p&gt;5.&lt;code&gt;书签&lt;/code&gt;功能，内容&lt;code&gt;过滤&lt;/code&gt;功能，内容&lt;code&gt;自动保存&lt;/code&gt;功能，内容&lt;code&gt;查找高亮&lt;/code&gt;功能。&lt;/p&gt;
&lt;p&gt;6.顶部&lt;code&gt;快捷登录&lt;/code&gt;工具栏，可以自定义你的应用。&lt;/p&gt;
&lt;p&gt;7.表格的形式&lt;code&gt;可视化地查看系统环境变量&lt;/code&gt;等参数，终于不用再“我的电脑”-&amp;gt;右键-&amp;gt;xxx…&lt;/p&gt;
&lt;div align=&quot;center&quot;&gt;&amp;lt;img src=”&lt;a href=&quot;http://www-fusijie-com.qiniudn.com/tools_powercmd_pic%20003.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www-fusijie-com.qiniudn.com/tools_powercmd_pic%20003.png&lt;/a&gt;“” alt=”” border=”0” title=”” /&amp;gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;


&lt;p&gt;8.&lt;code&gt;自动提示&lt;/code&gt;，主要是针对文件夹。这个比mac terminal还屌啊。。。&lt;/p&gt;
&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;http://www-fusijie-com.qiniudn.com/tools_powercmd_pic%20004.png&quot; alt=&quot;&quot; border=&quot;0&quot; title=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;

&lt;p&gt;9.其他&lt;code&gt;自定义功能&lt;/code&gt;，比如行号，外观颜色、透明度等等，尽情DIY吧。。。&lt;/p&gt;
&lt;p&gt;好了，看了半天还不如动手试试，软件是收费的，不过有一个月的试用期。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Win下coding，良心推荐。&lt;/strong&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;由于工作关系（码奴），平时会需要接触到比较多奇奇怪怪的应用。而一些比较好的小众软件和工具，我觉得很有必要分享出来。这是第一篇，之后有的话会慢慢积累分享出来，如果你们也有好的软件，欢迎留言分享。&lt;/p&gt;
&lt;p&gt;因为只是介绍工具而已，所以内容会很简单。&lt;/p&gt;
&lt;p&gt;当然这里没有任何的广告成分。次奥。。。谁会给我广告费啊。。。&lt;/p&gt;
    
    </summary>
    
      <category term="Tools" scheme="http://fusijie.github.io/categories/Tools/"/>
    
    
      <category term="PowerCmd" scheme="http://fusijie.github.io/tags/PowerCmd/"/>
    
  </entry>
  
  <entry>
    <title>【玩转cocos2d-x之三十七】在Cocos2d-x中集成安卓版微信SDK</title>
    <link href="http://fusijie.github.io/2014/08/21/play-cocos2dx-37/"/>
    <id>http://fusijie.github.io/2014/08/21/play-cocos2dx-37/</id>
    <published>2014-08-20T16:26:00.000Z</published>
    <updated>2016-04-24T13:23:24.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h3&gt;&lt;p&gt;微信的火热程度已不必说了，如果能在Cocos2d-x中集成微信SDK，让游戏能分享给好友或者朋友圈，那对游戏推广将会是非常有利的。好了，本文就是手把手地教大伙如何在Cocos2d-x中集成微信SDK。&lt;/p&gt;
&lt;h3 id=&quot;环境&quot;&gt;&lt;a href=&quot;#环境&quot; class=&quot;headerlink&quot; title=&quot;环境&quot;&gt;&lt;/a&gt;环境&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;OS: Mac OSX&lt;/li&gt;
&lt;li&gt;IDE: Xcode v5.11 and Eclipse ADT v22.3&lt;/li&gt;
&lt;li&gt;Android SDK:4.0 &lt;/li&gt;
&lt;li&gt;Adnroid NDK:r9d&lt;/li&gt;
&lt;li&gt;Cocos2d-x 3.2release&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;创建Cocos2d-x工程&quot;&gt;&lt;a href=&quot;#创建Cocos2d-x工程&quot; class=&quot;headerlink&quot; title=&quot;创建Cocos2d-x工程&quot;&gt;&lt;/a&gt;创建Cocos2d-x工程&lt;/h3&gt;&lt;p&gt;这里不再详述，网上的资料多如牛毛了。这里我按自己习惯的方式来。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;（1）命令行创建Cocos2dxWechat项目&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ cocos new -p com.fusijie.cocos2dxwechat -l cpp -d . Cocos2dxWechat
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;（2）交叉编译生成so文件&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ cd Cocos2dxWechat/proj.android/
$ ./build_native.py
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;（3）导入Eclipse生成APK&lt;/p&gt;
&lt;p&gt;导入libcocos2dx项目和Cocos2dxWechat项目到Eclipse中。在真机中成功运行Cocos2dxWechat.apk。&lt;/p&gt;
&lt;h3 id=&quot;申请创建微信应用&quot;&gt;&lt;a href=&quot;#申请创建微信应用&quot; class=&quot;headerlink&quot; title=&quot;申请创建微信应用&quot;&gt;&lt;/a&gt;申请创建微信应用&lt;/h3&gt;&lt;p&gt;这一步主要是在微信开放平台上申请创建移动应用，获取AppID。微信开放平台的网址是：&lt;a href=&quot;https://open.weixin.qq.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://open.weixin.qq.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;（1）注册帐号，进入管理中心，点击创建移动应用。&lt;/p&gt;
&lt;p&gt;（2）第一步是填写应用名，描述，图标等等。如下图。&lt;/p&gt;
&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;http://www-fusijie-com.qiniudn.com/playcocos2dx37_1.png&quot; alt=&quot;&quot; border=&quot;0&quot; title=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;

&lt;p&gt;（3）填写应用官网，勾选Android应用，填写签名，包名等等。如下图。&lt;/p&gt;
&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;http://www-fusijie-com.qiniudn.com/playcocos2dx37_2.png&quot; alt=&quot;&quot; border=&quot;0&quot; title=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;注意：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这里需要特别注意的是应用签名这一项。在第三步的时候，真机中成功运行Cocos2dxWechat.apk之后，我们需要从微信开放平台下载一个签名生成软件&lt;a href=&quot;https://open.weixin.qq.com/cgi-bin/frame?t=resource/res_main_tmpl&amp;amp;verify=1&amp;amp;lang=zh_CN&amp;amp;token=2788af648d5164d0feec470a8bfd42f9833ae887&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GenSignature&lt;/a&gt;（资源下载-&amp;gt;Android资源下载）。&lt;/p&gt;
&lt;p&gt;安装签名生成后，打开软件输入游戏包名获取即可。&lt;/p&gt;
&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;http://www-fusijie-com.qiniudn.com/playcocos2dx37_3.png&quot; alt=&quot;&quot; border=&quot;0&quot; title=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;

&lt;p&gt;这里的签名和游戏的包名和keystore是相关联的，如果修改了包名或者更换了keystore，必须同步更新微信开放平台管理中心的信息，防止失效。本示例采用的是debug签名。在完成以上工作后，提交审核即可。说是7天，实际上一般1～2天就审核过了。&lt;/p&gt;
&lt;h3 id=&quot;集成微信SDK&quot;&gt;&lt;a href=&quot;#集成微信SDK&quot; class=&quot;headerlink&quot; title=&quot;集成微信SDK&quot;&gt;&lt;/a&gt;集成微信SDK&lt;/h3&gt;&lt;p&gt;刚才都是铺垫，这里开始才是进入主题了。要在Cocos2d-x调用微信安卓SDK，Jni跑不掉的。这里只演示如何进行分享到朋友圈和分享给好友，微信SDK还有很多高级的功能，如支付，收藏等等接口，有需要自行&lt;a href=&quot;https://open.weixin.qq.com/cgi-bin/frame?t=resource/res_main_tmpl&amp;amp;verify=1&amp;amp;lang=zh_CN&amp;amp;token=2788af648d5164d0feec470a8bfd42f9833ae887&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;参考文档（移动应用开发）&lt;/a&gt;进行开发。&lt;/p&gt;
&lt;p&gt;这里主要分成3部分来解释：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;微信SDK下载，jar包导入&lt;/li&gt;
&lt;li&gt;Android代码&lt;/li&gt;
&lt;li&gt;C++代码&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;（1）下载微信SDK&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://open.weixin.qq.com/cgi-bin/frame?t=resource/res_main_tmpl&amp;amp;verify=1&amp;amp;lang=zh_CN&amp;amp;token=2788af648d5164d0feec470a8bfd42f9833ae887&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;资源下载-&amp;gt;Android资源下载&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;（2）打开下载的Android_SDK.zip。解压，将lib目录下的libammsdk.jar拷到Cocos2dxWechat项目下的libs目录。&lt;/p&gt;
&lt;p&gt;（3）右键单击工程，选择Build Path中的Configure Build Path…，选中Libraries这个tab，并通过Add Jars…导入工程libs目录下的libammsdk.jar文件。&lt;/p&gt;
&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;http://www-fusijie-com.qiniudn.com/playcocos2dx37_4.png&quot; alt=&quot;&quot; border=&quot;0&quot; title=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;

&lt;p&gt;（4）在AppActivity中添加成员变量&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;figcaption&gt;&lt;span&gt;增加成员变量&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; String APP_ID = &lt;span class=&quot;string&quot;&gt;&quot;wx1234567890&quot;&lt;/span&gt;;&lt;span class=&quot;comment&quot;&gt;//AppID，从第四步获取&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; IWXAPI api;&lt;span class=&quot;comment&quot;&gt;//微信API接口&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; AppActivity instance;&lt;span class=&quot;comment&quot;&gt;//类静态实例，为了方便后面静态函数的调用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;（5）注册到微信&lt;/p&gt;
&lt;p&gt;打开AppActivity，在onCreate()中调用regToWX()注册到微信&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;figcaption&gt;&lt;span&gt;注册到微信&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Bundle savedInstanceState)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;// TODO Auto-generated method stub&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.onCreate(savedInstanceState);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	instance = &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	regToWX();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;regToWX&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	api = WXAPIFactory.createWXAPI(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;, APP_ID, &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	api.registerApp(APP_ID);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;（6）由于这里采用的分享示例传递了一张icon，所以需要额外的一个bitmap的解析类Util类，这个类可以到微信官方SDK demo下载，也可以在本示例中下载（早期的SDK版本这个类是集成在微信SDK中）。icon放在res目录下的drawable目录，我这里偷个懒直接使用了应用icon。&lt;/p&gt;
&lt;p&gt;（7）分享给好友&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;figcaption&gt;&lt;span&gt;分享给好友&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;sendMsgToFriend&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(api.openWXApp())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   		WXWebpageObject webpage = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; WXWebpageObject();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           webpage.webpageUrl = &lt;span class=&quot;string&quot;&gt;&quot;http://fusijie.github.io&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           WXMediaMessage msg = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; WXMediaMessage(webpage);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           msg.title = &lt;span class=&quot;string&quot;&gt;&quot;Tittle&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           msg.description = &lt;span class=&quot;string&quot;&gt;&quot;Description&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           Bitmap thumb = BitmapFactory.decodeResource(instance.getResources(), R.drawable.icon);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           msg.thumbData = Util.bmpToByteArray(thumb, &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           SendMessageToWX.Req req = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SendMessageToWX.Req();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           req.transaction = buildTransaction(&lt;span class=&quot;string&quot;&gt;&quot;webpage&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           req.message = msg;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           req.scene = SendMessageToWX.Req.WXSceneSession;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           api.sendReq(req);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   		 Toast.makeText(instance, &lt;span class=&quot;string&quot;&gt;&quot;未安装微信&quot;&lt;/span&gt;, Toast.LENGTH_SHORT).show();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;（8）分享到朋友圈&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;figcaption&gt;&lt;span&gt;分享到朋友圈&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;sendMsgToTimeLine&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(api.openWXApp())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(api.getWXAppSupportAPI() &amp;gt;= &lt;span class=&quot;number&quot;&gt;0x21020001&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	&amp;#123;        		&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    		WXWebpageObject webpage = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; WXWebpageObject();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            webpage.webpageUrl = &lt;span class=&quot;string&quot;&gt;&quot;http://fusijie.github.io&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            WXMediaMessage msg = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; WXMediaMessage(webpage);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            msg.title = &lt;span class=&quot;string&quot;&gt;&quot;Tittle&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            msg.description = &lt;span class=&quot;string&quot;&gt;&quot;Description&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Bitmap thumb = BitmapFactory.decodeResource(instance.getResources(), R.drawable.icon);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            msg.thumbData = Util.bmpToByteArray(thumb, &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            SendMessageToWX.Req req = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SendMessageToWX.Req();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            req.transaction = buildTransaction(&lt;span class=&quot;string&quot;&gt;&quot;webpage&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            req.message = msg;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            req.scene = SendMessageToWX.Req.WXSceneTimeline;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            api.sendReq(req);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    		Toast.makeText(instance, &lt;span class=&quot;string&quot;&gt;&quot;微信版本过低&quot;&lt;/span&gt;, Toast.LENGTH_SHORT).show();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    		&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		 Toast.makeText(instance, &lt;span class=&quot;string&quot;&gt;&quot;未安装微信&quot;&lt;/span&gt;, Toast.LENGTH_SHORT).show();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;其中buildTransaction()用于生成一个唯一的会话标识符。&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;figcaption&gt;&lt;span&gt;buildTransaction&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; String &lt;span class=&quot;title&quot;&gt;buildTransaction&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; String type)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; (type == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) ? String.valueOf(System.currentTimeMillis()) : type + System.currentTimeMillis();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;代码不难，所以不再逐行解释，可以参考&lt;a href=&quot;https://open.weixin.qq.com/zh_CN/htmledition/res/dev/document/sdk/android/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SDK文档&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;（9）JNI调用&lt;/p&gt;
&lt;p&gt;在Classes目录下新建一个WeixinShare类，主要包含2个静态函数：&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;figcaption&gt;&lt;span&gt;Jni调用分享给好友和朋友圈&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; WeiXinShare::sendToFriend()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 	&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;if&lt;/span&gt; (CC_TARGET_PLATFORM == CC_PLATFORM_ANDROID) &lt;span class=&quot;comment&quot;&gt;//判断当前是否为Android平台&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    JniMethodInfo minfo;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; isHave = JniHelper::getStaticMethodInfo(minfo,&lt;span class=&quot;string&quot;&gt;&quot;org/cocos2dx/cpp/AppActivity&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;sendMsgToFriend&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;()V&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!isHave) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;jni:sendMsgToFriend is null&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//调用此函数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        minfo.env-&amp;gt;CallStaticVoidMethod(minfo.classID, minfo.methodID);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;endif&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; WeiXinShare::sendToTimeLine()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;if&lt;/span&gt; (CC_TARGET_PLATFORM == CC_PLATFORM_ANDROID) &lt;span class=&quot;comment&quot;&gt;//判断当前是否为Android平台&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    JniMethodInfo minfo;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; isHave = JniHelper::getStaticMethodInfo(minfo,&lt;span class=&quot;string&quot;&gt;&quot;org/cocos2dx/cpp/AppActivity&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;sendMsgToTimeLine&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;()V&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!isHave) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;jni:sendMsgToTimeLine is null&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//调用此函数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        minfo.env-&amp;gt;CallStaticVoidMethod(minfo.classID, minfo.methodID);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;endif&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;（10）Cocos2d-x使用&lt;/p&gt;
&lt;p&gt;这个就比较简单了，只要包含这个WeiXinShare类，调用这两个静态函数即可。&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;figcaption&gt;&lt;span&gt;主程序调用&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; HelloWorld::menuCloseCallback(Ref* pSender)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;if&lt;/span&gt; (CC_TARGET_PLATFORM == CC_PLATFORM_ANDROID)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;comment&quot;&gt;//WeiXinShare::sendToFriend();&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   WeiXinShare::sendToTimeLine();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;endif&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;（11）Android.mk的修改&lt;/p&gt;
&lt;p&gt;最后不要忘记修改Android.mk文件。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;LOCAL_SRC_FILES := hellocpp/main.cpp \
               ../../Classes/AppDelegate.cpp \
               ../../Classes/HelloWorldScene.cpp \
               ../../Classes/WeiXinShare.cpp
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;（12）重新交叉编译，打包为APK即可&lt;/p&gt;
&lt;h3 id=&quot;效果&quot;&gt;&lt;a href=&quot;#效果&quot; class=&quot;headerlink&quot; title=&quot;效果&quot;&gt;&lt;/a&gt;效果&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;分享给好友&lt;/strong&gt;&lt;/p&gt;
&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;http://www-fusijie-com.qiniudn.com/playcocos2dx37_5.png&quot; alt=&quot;&quot; border=&quot;0&quot; title=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;分享到朋友圈&lt;/strong&gt;&lt;/p&gt;
&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;http://www-fusijie-com.qiniudn.com/playcocos2dx37_6.png&quot; alt=&quot;&quot; border=&quot;0&quot; title=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;


&lt;h3 id=&quot;总结&quot;&gt;&lt;a href=&quot;#总结&quot; class=&quot;headerlink&quot; title=&quot;总结&quot;&gt;&lt;/a&gt;总结&lt;/h3&gt;&lt;p&gt;本文写的比较详细，但是也忽略了比如如何接收微信的请求及返回值的说明以及如何进行混淆等等，算是一个初级教程吧。主要是面向对jni调用，第三方安卓sdk集成不太了解的朋友。这里虽然只是针对微信sdk的部分功能集成进行说明，但是道理都是共通的，如何集成微博分享，如何集成第三方广告等等，用类似的方法都可以实现。&lt;/p&gt;
&lt;p&gt;本demo的下载地址：&lt;a href=&quot;https://github.com/fusijie/Cocos2dx-Wechat&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;我的Github&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h3&gt;&lt;p&gt;微信的火热程度已不必说了，如果能在Cocos2d-x中集成微信SDK，让游戏能分享给好友或者朋友圈，那对游戏推广将会是非常有利的。好了，本文就是手把手地教大伙如何在Cocos2d-x中集成微信SDK。&lt;/p&gt;
&lt;h3 id=&quot;环境&quot;&gt;&lt;a href=&quot;#环境&quot; class=&quot;headerlink&quot; title=&quot;环境&quot;&gt;&lt;/a&gt;环境&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;OS: Mac OSX&lt;/li&gt;
&lt;li&gt;IDE: Xcode v5.11 and Eclipse ADT v22.3&lt;/li&gt;
&lt;li&gt;Android SDK:4.0 &lt;/li&gt;
&lt;li&gt;Adnroid NDK:r9d&lt;/li&gt;
&lt;li&gt;Cocos2d-x 3.2release&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;创建Cocos2d-x工程&quot;&gt;&lt;a href=&quot;#创建Cocos2d-x工程&quot; class=&quot;headerlink&quot; title=&quot;创建Cocos2d-x工程&quot;&gt;&lt;/a&gt;创建Cocos2d-x工程&lt;/h3&gt;&lt;p&gt;这里不再详述，网上的资料多如牛毛了。这里我按自己习惯的方式来。&lt;/p&gt;
    
    </summary>
    
      <category term="cocos2d-x" scheme="http://fusijie.github.io/categories/cocos2d-x/"/>
    
    
      <category term="微信SDK集成" scheme="http://fusijie.github.io/tags/%E5%BE%AE%E4%BF%A1SDK%E9%9B%86%E6%88%90/"/>
    
  </entry>
  
  <entry>
    <title>【玩转cocos2d-x之三十六】Earth Warrior 3D 大揭秘</title>
    <link href="http://fusijie.github.io/2014/07/10/play-cocos2dx-36/"/>
    <id>http://fusijie.github.io/2014/07/10/play-cocos2dx-36/</id>
    <published>2014-07-09T16:13:00.000Z</published>
    <updated>2016-04-24T13:22:18.000Z</updated>
    
    <content type="html">&lt;p&gt;3D游戏现在玩起来门槛还是挺高的。不过如果在Cocos2d-x引擎加入3D扩展，实现2.5D游戏效果又会怎么样？&lt;/p&gt;
&lt;h3 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h3&gt;&lt;p&gt;先上大会现场演示图：&lt;/p&gt;
&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;http://www-fusijie-com.qiniudn.com/4196_140316183412_1.JPG&quot; alt=&quot;&quot; border=&quot;0&quot; title=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;

&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;Apk下载：&lt;a href=&quot;http://pan.baidu.com/s/1ntM75bV&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://pan.baidu.com/s/1ntM75bV&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;源码下载：&lt;a href=&quot;https://github.com/chukong/EarthWarrior3D.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/chukong/EarthWarrior3D.git&lt;/a&gt;，给个star不费电。。。&lt;/p&gt;
&lt;p&gt;开发环境：Cocos2d-x v3.0 + Sprite3D扩展&lt;/p&gt;
&lt;p&gt;适用平台：Mac/iOS/Android&lt;/p&gt;
&lt;h3 id=&quot;Sprite3D扩展&quot;&gt;&lt;a href=&quot;#Sprite3D扩展&quot; class=&quot;headerlink&quot; title=&quot;Sprite3D扩展&quot;&gt;&lt;/a&gt;Sprite3D扩展&lt;/h3&gt;&lt;h4 id=&quot;Sprite3D&quot;&gt;&lt;a href=&quot;#Sprite3D&quot; class=&quot;headerlink&quot; title=&quot;Sprite3D&quot;&gt;&lt;/a&gt;Sprite3D&lt;/h4&gt;&lt;p&gt;sprite3D扩展目前可以支持加载静态obj模型。&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;figcaption&gt;&lt;span&gt;Sprite3D使用&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;auto&lt;/span&gt; model = Sprite3D::create(&lt;span class=&quot;string&quot;&gt;&quot;3dmodel.obj&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;texture.png&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;Toon-Shading&quot;&gt;&lt;a href=&quot;#Toon-Shading&quot; class=&quot;headerlink&quot; title=&quot;Toon Shading&quot;&gt;&lt;/a&gt;Toon Shading&lt;/h4&gt;&lt;p&gt;Cocos2d-x精灵不能做发光效果，而Sprite3D中加入了发光函数，指定outline width和color就行了。&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;figcaption&gt;&lt;span&gt;设置边缘发光&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;model-&amp;gt;setOutline(&lt;span class=&quot;number&quot;&gt;1.5&lt;/span&gt;, Color3B(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)); &lt;span class=&quot;comment&quot;&gt;// 设置发光宽度1.5，黑色&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;3D-API&quot;&gt;&lt;a href=&quot;#3D-API&quot; class=&quot;headerlink&quot; title=&quot;3D API&quot;&gt;&lt;/a&gt;3D API&lt;/h4&gt;&lt;p&gt;3D API是Cocos2d-x v3.0就具有的属性，源码可以到Node上看。&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;figcaption&gt;&lt;span&gt;设置位置和旋转&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;node-&amp;gt;setPosition3D(Vertex3F(x,y,z));&lt;span class=&quot;comment&quot;&gt;//设置位置  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Vertex3F pos = node-&amp;gt;getPosition3D();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;node-&amp;gt;setRotation3D(Vertex3F(x,y,z));&lt;span class=&quot;comment&quot;&gt;//设置旋转  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Vertex3F rot = node-&amp;gt;getRotation3D();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;其中Vertex3F当然就是指定了三维空间。而3D API同样也移植到了一些动作中，比如：&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;figcaption&gt;&lt;span&gt;3D旋转&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;node-&amp;gt;runAction(RotateBy::create(Vertex3F(x,y,z)));&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;完全没问题。&lt;/p&gt;
&lt;h3 id=&quot;EarthWarrior&quot;&gt;&lt;a href=&quot;#EarthWarrior&quot; class=&quot;headerlink&quot; title=&quot;EarthWarrior&quot;&gt;&lt;/a&gt;EarthWarrior&lt;/h3&gt;&lt;p&gt;Classes/3d文件夹包含了Sprite3D。其余文件为游戏逻辑控制，游戏总共三个场景&lt;/p&gt;
&lt;h4 id=&quot;主菜单界面（MainMenuScene）&quot;&gt;&lt;a href=&quot;#主菜单界面（MainMenuScene）&quot; class=&quot;headerlink&quot; title=&quot;主菜单界面（MainMenuScene）&quot;&gt;&lt;/a&gt;主菜单界面（MainMenuScene）&lt;/h4&gt;&lt;p&gt;包含：主菜单场景（MainMenuScene），飞机模型（Plane），License和Credits层（LicenseLayer）。&lt;/p&gt;
&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;http://www-fusijie-com.qiniudn.com/20140328095139203.png&quot; alt=&quot;&quot; border=&quot;0&quot; title=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;

&lt;p&gt;关键点：&lt;/p&gt;
&lt;p&gt;&lt;em&gt;①主界面3D飞机的实现&lt;/em&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;figcaption&gt;&lt;span&gt;主界面3D飞机的实现&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//Plane.cpp  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;_Model = Sprite3D::create(&lt;span class=&quot;string&quot;&gt;&quot;playerv002.obj&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;playerv002_256.png&quot;&lt;/span&gt;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(_Model)&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	_Model-&amp;gt;setScale(&lt;span class=&quot;number&quot;&gt;55&lt;/span&gt;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	((Sprite3D*)_Model)-&amp;gt;setOutline(&lt;span class=&quot;number&quot;&gt;0.035&lt;/span&gt;, Color3B::BLACK);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	_Model-&amp;gt;setRotation3D(Vertex3F(originX,originY,originZ));  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;-&amp;gt;setRotation3D(Vertex3F(originX, originY, originZ));  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;-&amp;gt;addChild(_Model);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;-&amp;gt;scheduleUpdate();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;em&gt;②对数学感兴趣的可以研究一下scheduleUpdate怎样让飞机晃啊晃。。。粒子系统这里就不再重复了。&lt;/em&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;figcaption&gt;&lt;span&gt;设置飞机摇晃&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; Plane::update(&lt;span class=&quot;keyword&quot;&gt;float&lt;/span&gt; dt)  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	pRate+=&lt;span class=&quot;number&quot;&gt;0.01&lt;/span&gt;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	_Model-&amp;gt;setRotation3D(Vertex3F(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;-pXA*sin(pXW*pRate),&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;-pZA*sin(pZW*pRate)));  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;载入界面（LoadingScene）&quot;&gt;&lt;a href=&quot;#载入界面（LoadingScene）&quot; class=&quot;headerlink&quot; title=&quot;载入界面（LoadingScene）&quot;&gt;&lt;/a&gt;载入界面（LoadingScene）&lt;/h4&gt;&lt;p&gt;包含：载入场景（LoadingScene）,粒子管理器(ParticleManager)&lt;/p&gt;
&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;http://www-fusijie-com.qiniudn.com/20140328095149734.png&quot; alt=&quot;&quot; border=&quot;0&quot; title=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;

&lt;p&gt;关键点：&lt;/p&gt;
&lt;p&gt;&lt;em&gt;①Loading界面实现资源的预加载，包括音乐，纹理，粒子效果，其中纹理使用异步加载，粒子效果在ParticleManager（单例类）中加载。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;②同时Loading界面也实现了游戏元素的预创建并保存在全局池中，避免游戏过程中的卡顿现象和反复create的低效，包括四类敌机和导弹Missile，在update中实现每帧创建一个，避免LoadingScene的卡顿。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;③cocos Logo的旋转动画&lt;/em&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;figcaption&gt;&lt;span&gt;cocos Logo旋转动画&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; LoadingScene::InitCoco()  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	Size visibleSize = Director::getInstance()-&amp;gt;getVisibleSize();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;keyword&quot;&gt;auto&lt;/span&gt; coco = Sprite3D::create(&lt;span class=&quot;string&quot;&gt;&quot;coconut.obj&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;coco.png&quot;&lt;/span&gt;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(coco)  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       	coco-&amp;gt;setPosition(Point(visibleSize.width/&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, visibleSize.height/&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-150&lt;/span&gt;));  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       	coco-&amp;gt;setOutline(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;,Color3B(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;));  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       	addChild(coco,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       	coco-&amp;gt;runAction(RepeatForever::create(RotateBy::create(&lt;span class=&quot;number&quot;&gt;0.8f&lt;/span&gt;,Vertex3F(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;360&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;))));  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;游戏界面（HelloWorldScene）&quot;&gt;&lt;a href=&quot;#游戏界面（HelloWorldScene）&quot; class=&quot;headerlink&quot; title=&quot;游戏界面（HelloWorldScene）&quot;&gt;&lt;/a&gt;游戏界面（HelloWorldScene）&lt;/h4&gt;&lt;p&gt;包含：游戏层（GameLayer），游戏元素基类（GameEntity），飞机类（AirCraft），玩家类（Player），敌机类（Enemies，又包括Fodder，FodderLeader，BigDude，Boss四类敌机），子弹类（Bullet，又包括PlayerBullet，Missile两类子弹），效果管理类（EffectManager），爆炸类（Explosion，又包括SmallExplosion，BigExplosion，BulletExplosion），游戏控制层（GameController，又包括BulletController，EnemyController和GameController），游戏结束层（GameOverLayer）&lt;/p&gt;
&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;http://www-fusijie-com.qiniudn.com/20140328095145093.png&quot; alt=&quot;&quot; border=&quot;0&quot; title=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;

&lt;p&gt;关键点：&lt;/p&gt;
&lt;p&gt;&lt;em&gt;①玩家和敌机的子弹控制统一在BulletController::spawnBullet中处理。如上述游戏元素保存在全局池中，可回收利用，避免反复创建，spawnBullet会先从这个池中取出，如果该池为空才会创建对于的子弹。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;②敌机的处理也是采用相同的方式，在EnemyController::spawnEnemy中处理，如果该池为空才会创建对于的敌机。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;③GameLayer::gameMaster管理敌机的出现的频率。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;④GameController::update管理游戏的碰撞检测。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;除了一些数学上的计算比较羞涩意外，整个游戏的逻辑还是比较简单的。。。这里就不细说了，大家直接看源码吧。。。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;3D游戏现在玩起来门槛还是挺高的。不过如果在Cocos2d-x引擎加入3D扩展，实现2.5D游戏效果又会怎么样？&lt;/p&gt;
&lt;h3 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h3&gt;&lt;p&gt;先上大会现场演示图：&lt;/p&gt;
&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;http://www-fusijie-com.qiniudn.com/4196_140316183412_1.JPG&quot; alt=&quot;&quot; border=&quot;0&quot; title=&quot;&quot; /&gt;&lt;br&gt;&lt;/br&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="cocos2d-x" scheme="http://fusijie.github.io/categories/cocos2d-x/"/>
    
    
      <category term="EarthWarrior3D" scheme="http://fusijie.github.io/tags/EarthWarrior3D/"/>
    
  </entry>
  
  <entry>
    <title>【玩转cocos2d-x之三十五】《我叫MT offline》Demo</title>
    <link href="http://fusijie.github.io/2014/02/25/play-cocos2dx-35/"/>
    <id>http://fusijie.github.io/2014/02/25/play-cocos2dx-35/</id>
    <published>2014-02-25T11:43:00.000Z</published>
    <updated>2016-04-24T14:52:14.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h3&gt;&lt;h4 id=&quot;这是怎样一个游戏？&quot;&gt;&lt;a href=&quot;#这是怎样一个游戏？&quot; class=&quot;headerlink&quot; title=&quot;这是怎样一个游戏？&quot;&gt;&lt;/a&gt;这是怎样一个游戏？&lt;/h4&gt;&lt;p&gt;这是一个最好的时代。软件跑在硬件之前，而创意跑在软件之前。除去那些跨时代的作品（现在还没出，比如体感，识别等等和硬件强相关的游戏），现在的手游对技术的要求门槛已经大大降低了。这是个创意决定市场的时代。&lt;/p&gt;
&lt;p&gt;（1）比如早些时候的愤怒小鸟，植物僵尸，水果忍者，这些是智能机刚刚诞生的时候出来的，可以说是借iphone引领的触屏之风顺势而行火了一把，这种机会可遇不可求。&lt;/p&gt;
&lt;p&gt;（2）再如飞机大战，FlappyBird，这些是利用怀旧风，无差别竞技以及用户口碑营销堆起来的游戏，这靠的要么后台硬有干爹，要么祖坟正运气好，如果都没有，想火也很难。&lt;/p&gt;
&lt;p&gt;（3）又如卡牌，COC，横版格斗，这些靠的是真正的创意。由此引来的一堆跟风之作就能看出来，几千万的月流水也证明了这一点，第一个想到创意，第一个抢到市场就是赢家。但是再来山寨就没意思了。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;MT就是这样一款一出现就让人眼前一亮的游戏，我期待手游市场天天都能出现不一样的作品，能抓住用户的游戏，而不是反复的换皮圈钱关服走人。&lt;/em&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h4 id=&quot;我为什么要写这么一个demo？&quot;&gt;&lt;a href=&quot;#我为什么要写这么一个demo？&quot; class=&quot;headerlink&quot; title=&quot;我为什么要写这么一个demo？&quot;&gt;&lt;/a&gt;我为什么要写这么一个demo？&lt;/h4&gt;&lt;p&gt;对于一个游戏狂热份子，当《我叫MT》出来的时候，新奇的玩法，酷炫的卡牌，流畅的动画，以及WOW情结，让我找不到理由拒绝它（虽然到现在蛋疼的用户体验和反人类设计还有不少）。每个游戏都有自己的生命周期，这些是跑不掉的，或许卓越的钱还没有赚够，但我希望这款游戏最后能有一个体面的结局。&lt;/p&gt;
&lt;p&gt;从MT ios一区开始，玩到现在也近一年半了。它陪伴我历经了很多事情，如人饮水冷暖自知。每个程序员都有一颗做游戏的心。在决定进入游戏行业后，我决定写个MT的demo出来，算是感谢也算是怀念。说来也巧，当初找来各种版本的《我叫MT》反编译拿游戏资源为的只是为了收集所有的卡牌图片，结果后面发现2.3以后的版本都做了资源加密处理。所以手上只有2.3版的资源，这个demo就按着2.3版做。&lt;/p&gt;
&lt;h4 id=&quot;《我叫MT-offline》这个游戏能做什么？&quot;&gt;&lt;a href=&quot;#《我叫MT-offline》这个游戏能做什么？&quot; class=&quot;headerlink&quot; title=&quot;《我叫MT offline》这个游戏能做什么？&quot;&gt;&lt;/a&gt;《我叫MT offline》这个游戏能做什么？&lt;/h4&gt;&lt;p&gt;其实它什么也做不了，只是游戏的整体框架以及所有动画的demo，由于写的比较赶，很多功能都没有来得及实现，代码也写的比较粗糙。接下来我会继续完善它，我的最终目的是把它改成单机版的《我叫MT offline》。它的工作量太大了，而且体力活占大部分，所以代码模块化复用和游戏内存优化显得很重要。如果不用赔60亿我会考虑把源码推上&lt;a href=&quot;https://github.com/fusijie&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Github&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;游戏采用VS2012+cocos2d-x v2.2.0开发。&lt;/p&gt;
&lt;h3 id=&quot;游戏结构和效果&quot;&gt;&lt;a href=&quot;#游戏结构和效果&quot; class=&quot;headerlink&quot; title=&quot;游戏结构和效果&quot;&gt;&lt;/a&gt;游戏结构和效果&lt;/h3&gt;&lt;h4 id=&quot;公告&quot;&gt;&lt;a href=&quot;#公告&quot; class=&quot;headerlink&quot; title=&quot;公告&quot;&gt;&lt;/a&gt;公告&lt;/h4&gt;&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;/images/posts/2014-02-25-play-cocos2dx-35/announcement.png&quot; alt=&quot;&quot; border=&quot;0&quot; title=&quot;4&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;

&lt;h4 id=&quot;游戏&quot;&gt;&lt;a href=&quot;#游戏&quot; class=&quot;headerlink&quot; title=&quot;游戏&quot;&gt;&lt;/a&gt;游戏&lt;/h4&gt;&lt;center&gt;&lt;embed src=&quot;http://player.youku.com/player.php/sid/XNjc3ODI3NjY0/v.swf&quot; allowfullscreen=&quot;true&quot; quality=&quot;high&quot; width=&quot;480&quot; height=&quot;400&quot; align=&quot;middle&quot; allowscriptaccess=&quot;always&quot; type=&quot;application/x-shockwave-flash&quot;&gt;&lt;/center&gt;

&lt;p&gt;录了个视频，我会尽快放出apk。&lt;/p&gt;
&lt;h4 id=&quot;开幕故事&quot;&gt;&lt;a href=&quot;#开幕故事&quot; class=&quot;headerlink&quot; title=&quot;开幕故事&quot;&gt;&lt;/a&gt;开幕故事&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;/images/posts/2014-02-25-play-cocos2dx-35/story.gif&quot;&gt;http://fusijie.github.io/images/posts/2014-02-25-play-cocos2dx-35/story.gif&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;游戏主场景&quot;&gt;&lt;a href=&quot;#游戏主场景&quot; class=&quot;headerlink&quot; title=&quot;游戏主场景&quot;&gt;&lt;/a&gt;游戏主场景&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;/images/posts/2014-02-25-play-cocos2dx-35/mainui.gif&quot;&gt;http://fusijie.github.io/images/posts/2014-02-25-play-cocos2dx-35/mainui.gif&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;英雄&quot;&gt;&lt;a href=&quot;#英雄&quot; class=&quot;headerlink&quot; title=&quot;英雄&quot;&gt;&lt;/a&gt;英雄&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;/images/posts/2014-02-25-play-cocos2dx-35/card.gif&quot;&gt;http://fusijie.github.io/images/posts/2014-02-25-play-cocos2dx-35/card.gif&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;进化&quot;&gt;&lt;a href=&quot;#进化&quot; class=&quot;headerlink&quot; title=&quot;进化&quot;&gt;&lt;/a&gt;进化&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;/images/posts/2014-02-25-play-cocos2dx-35/evolve.gif&quot;&gt;http://fusijie.github.io/images/posts/2014-02-25-play-cocos2dx-35/evolve.gif&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;碎片&quot;&gt;&lt;a href=&quot;#碎片&quot; class=&quot;headerlink&quot; title=&quot;碎片&quot;&gt;&lt;/a&gt;碎片&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;/images/posts/2014-02-25-play-cocos2dx-35/chip.gif&quot;&gt;http://fusijie.github.io/images/posts/2014-02-25-play-cocos2dx-35/chip.gif&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;升级&quot;&gt;&lt;a href=&quot;#升级&quot; class=&quot;headerlink&quot; title=&quot;升级&quot;&gt;&lt;/a&gt;升级&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;/images/posts/2014-02-25-play-cocos2dx-35/levelup.gif&quot;&gt;http://fusijie.github.io/images/posts/2014-02-25-play-cocos2dx-35/levelup.gif&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;奖励&quot;&gt;&lt;a href=&quot;#奖励&quot; class=&quot;headerlink&quot; title=&quot;奖励&quot;&gt;&lt;/a&gt;奖励&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;/images/posts/2014-02-25-play-cocos2dx-35/task.gif&quot;&gt;http://fusijie.github.io/images/posts/2014-02-25-play-cocos2dx-35/task.gif&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;技能学院&quot;&gt;&lt;a href=&quot;#技能学院&quot; class=&quot;headerlink&quot; title=&quot;技能学院&quot;&gt;&lt;/a&gt;技能学院&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;/images/posts/2014-02-25-play-cocos2dx-35/colleage.gif&quot;&gt;http://fusijie.github.io/images/posts/2014-02-25-play-cocos2dx-35/colleage.gif&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;副本列表&quot;&gt;&lt;a href=&quot;#副本列表&quot; class=&quot;headerlink&quot; title=&quot;副本列表&quot;&gt;&lt;/a&gt;副本列表&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;/images/posts/2014-02-25-play-cocos2dx-35/instance.gif&quot;&gt;http://fusijie.github.io/images/posts/2014-02-25-play-cocos2dx-35/instance.gif&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;副本战斗&quot;&gt;&lt;a href=&quot;#副本战斗&quot; class=&quot;headerlink&quot; title=&quot;副本战斗&quot;&gt;&lt;/a&gt;副本战斗&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;/images/posts/2014-02-25-play-cocos2dx-35/battle.gif&quot;&gt;http://fusijie.github.io/images/posts/2014-02-25-play-cocos2dx-35/battle.gif&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;竞技场&quot;&gt;&lt;a href=&quot;#竞技场&quot; class=&quot;headerlink&quot; title=&quot;竞技场&quot;&gt;&lt;/a&gt;竞技场&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;/images/posts/2014-02-25-play-cocos2dx-35/arena.gif&quot;&gt;http://fusijie.github.io/images/posts/2014-02-25-play-cocos2dx-35/arena.gif&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;商店&quot;&gt;&lt;a href=&quot;#商店&quot; class=&quot;headerlink&quot; title=&quot;商店&quot;&gt;&lt;/a&gt;商店&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;/images/posts/2014-02-25-play-cocos2dx-35/store.gif&quot;&gt;http://fusijie.github.io/images/posts/2014-02-25-play-cocos2dx-35/store.gif&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;单次抽奖&quot;&gt;&lt;a href=&quot;#单次抽奖&quot; class=&quot;headerlink&quot; title=&quot;单次抽奖&quot;&gt;&lt;/a&gt;单次抽奖&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;/images/posts/2014-02-25-play-cocos2dx-35/raffleone.gif&quot;&gt;http://fusijie.github.io/images/posts/2014-02-25-play-cocos2dx-35/raffleone.gif&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;十连抽&quot;&gt;&lt;a href=&quot;#十连抽&quot; class=&quot;headerlink&quot; title=&quot;十连抽&quot;&gt;&lt;/a&gt;十连抽&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;/images/posts/2014-02-25-play-cocos2dx-35/raffleten.gif&quot;&gt;http://fusijie.github.io/images/posts/2014-02-25-play-cocos2dx-35/raffleten.gif&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;好友&quot;&gt;&lt;a href=&quot;#好友&quot; class=&quot;headerlink&quot; title=&quot;好友&quot;&gt;&lt;/a&gt;好友&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;/images/posts/2014-02-25-play-cocos2dx-35/friend.gif&quot;&gt;http://fusijie.github.io/images/posts/2014-02-25-play-cocos2dx-35/friend.gif&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;攻略&quot;&gt;&lt;a href=&quot;#攻略&quot; class=&quot;headerlink&quot; title=&quot;攻略&quot;&gt;&lt;/a&gt;攻略&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;/images/posts/2014-02-25-play-cocos2dx-35/more.gif&quot;&gt;http://fusijie.github.io/images/posts/2014-02-25-play-cocos2dx-35/more.gif&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h3&gt;&lt;h4 id=&quot;这是怎样一个游戏？&quot;&gt;&lt;a href=&quot;#这是怎样一个游戏？&quot; class=&quot;headerlink&quot; title=&quot;这是怎样一个游戏？&quot;&gt;&lt;/a&gt;这是怎样一个游戏？&lt;/h4&gt;&lt;p&gt;这是一个最好的时代。软件跑在硬件之前，而创意跑在软件之前。除去那些跨时代的作品（现在还没出，比如体感，识别等等和硬件强相关的游戏），现在的手游对技术的要求门槛已经大大降低了。这是个创意决定市场的时代。&lt;/p&gt;
&lt;p&gt;（1）比如早些时候的愤怒小鸟，植物僵尸，水果忍者，这些是智能机刚刚诞生的时候出来的，可以说是借iphone引领的触屏之风顺势而行火了一把，这种机会可遇不可求。&lt;/p&gt;
&lt;p&gt;（2）再如飞机大战，FlappyBird，这些是利用怀旧风，无差别竞技以及用户口碑营销堆起来的游戏，这靠的要么后台硬有干爹，要么祖坟正运气好，如果都没有，想火也很难。&lt;/p&gt;
&lt;p&gt;（3）又如卡牌，COC，横版格斗，这些靠的是真正的创意。由此引来的一堆跟风之作就能看出来，几千万的月流水也证明了这一点，第一个想到创意，第一个抢到市场就是赢家。但是再来山寨就没意思了。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;MT就是这样一款一出现就让人眼前一亮的游戏，我期待手游市场天天都能出现不一样的作品，能抓住用户的游戏，而不是反复的换皮圈钱关服走人。&lt;/em&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="cocos2d-x" scheme="http://fusijie.github.io/categories/cocos2d-x/"/>
    
    
      <category term="我叫MT" scheme="http://fusijie.github.io/tags/%E6%88%91%E5%8F%ABMT/"/>
    
  </entry>
  
  <entry>
    <title>【玩转cocos2d-x之三十四】绘图：CCDrawingPrimitives和CCDrawNode</title>
    <link href="http://fusijie.github.io/2014/02/08/play-cocos2dx-34/"/>
    <id>http://fusijie.github.io/2014/02/08/play-cocos2dx-34/</id>
    <published>2014-02-08T08:10:00.000Z</published>
    <updated>2016-04-24T13:02:11.000Z</updated>
    
    <content type="html">&lt;p&gt;最近忙出翔了，这年过的也揪心。好久没来更新博客了，今天就来写一写cocos2d-x中图形的绘制。&lt;/p&gt;
&lt;h3 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h3&gt;&lt;p&gt;其实cocos2d-x封装了大量的opengl的绘图函数，我们可以很轻松的在游戏中调用。但是实际上我们很少会这么做，因为编码绘图的方式效率实在太低了，尤其是诸如一些高阶贝塞尔曲线之类的，官方也不建议这么做，使用图像能更有效的提高绘图效率，同时也会更为的美观，也减少了一些精灵遮挡问题和边缘锯齿问题。cocos2d-x中绘图主要有两种方式：CCDrawingPrimitives和CCDrawNode。它们都在cocos2dx\draw_nodes目录下。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;CCDrawingPrimitives（原生绘图）&quot;&gt;&lt;a href=&quot;#CCDrawingPrimitives（原生绘图）&quot; class=&quot;headerlink&quot; title=&quot;CCDrawingPrimitives（原生绘图）&quot;&gt;&lt;/a&gt;CCDrawingPrimitives（原生绘图）&lt;/h3&gt;&lt;h4 id=&quot;特点&quot;&gt;&lt;a href=&quot;#特点&quot; class=&quot;headerlink&quot; title=&quot;特点&quot;&gt;&lt;/a&gt;特点&lt;/h4&gt;&lt;p&gt;CCDrawingPrimitives必须在节点的draw函数中调用，draw函数每帧被调用一次，主要做一些绘制的工作。但这并不意味着它就是静态不可改变的，我们完全可以通过修改描绘内容的方式来动态绘图。比如可以直接在用触摸的方式在屏幕上绘图。&lt;/p&gt;
&lt;p&gt;另外，使用CCDrawingPrimitives绘图默认的Z-Order是0，所以可能会被其他节点覆盖，因为它无法设置Z-Order，所以只能通过设置其他节点的Z-Order为负值使得绘图在最前端得以看见。&lt;/p&gt;
&lt;h4 id=&quot;API&quot;&gt;&lt;a href=&quot;#API&quot; class=&quot;headerlink&quot; title=&quot;API&quot;&gt;&lt;/a&gt;API&lt;/h4&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;figcaption&gt;&lt;span&gt;CCDrawingPrimitives API&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//绘制一个给定x，y值的点  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; CC_DLL &lt;span class=&quot;title&quot;&gt;ccDrawPoint&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;( &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; CCPoint&amp;amp; point )&lt;/span&gt;&lt;/span&gt;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//绘制一组点  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; CC_DLL &lt;span class=&quot;title&quot;&gt;ccDrawPoints&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;( &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; CCPoint *points, &lt;span class=&quot;keyword&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; numberOfPoints )&lt;/span&gt;&lt;/span&gt;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//绘制一条给定起始点和目标点的直线  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; CC_DLL &lt;span class=&quot;title&quot;&gt;ccDrawLine&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;( &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; CCPoint&amp;amp; origin, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; CCPoint&amp;amp; destination )&lt;/span&gt;&lt;/span&gt;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//绘制一个给定起始点和目标点的矩形  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; CC_DLL &lt;span class=&quot;title&quot;&gt;ccDrawRect&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;( CCPoint origin, CCPoint destination )&lt;/span&gt;&lt;/span&gt;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//绘制一个给定起始点和目标点和颜色的矩形  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; CC_DLL &lt;span class=&quot;title&quot;&gt;ccDrawSolidRect&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;( CCPoint origin, CCPoint destination, ccColor4F color )&lt;/span&gt;&lt;/span&gt;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//绘制一个给定一组点的多边形，可以是闭合或开放  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; CC_DLL &lt;span class=&quot;title&quot;&gt;ccDrawPoly&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;( &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; CCPoint *vertices, &lt;span class=&quot;keyword&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; numOfVertices, &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; closePolygon )&lt;/span&gt;&lt;/span&gt;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//绘制一个给定一组点和颜色的多边形  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; CC_DLL &lt;span class=&quot;title&quot;&gt;ccDrawSolidPoly&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;( &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; CCPoint *poli, &lt;span class=&quot;keyword&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; numberOfPoints, ccColor4F color )&lt;/span&gt;&lt;/span&gt;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//绘制一个给定中心，半径，分段数的圆  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; CC_DLL &lt;span class=&quot;title&quot;&gt;ccDrawCircle&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;( &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; CCPoint&amp;amp; center, &lt;span class=&quot;keyword&quot;&gt;float&lt;/span&gt; radius, &lt;span class=&quot;keyword&quot;&gt;float&lt;/span&gt; angle, &lt;span class=&quot;keyword&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; segments, &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; drawLineToCenter, &lt;span class=&quot;keyword&quot;&gt;float&lt;/span&gt; scaleX, &lt;span class=&quot;keyword&quot;&gt;float&lt;/span&gt; scaleY)&lt;/span&gt;&lt;/span&gt;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; CC_DLL &lt;span class=&quot;title&quot;&gt;ccDrawCircle&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;( &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; CCPoint&amp;amp; center, &lt;span class=&quot;keyword&quot;&gt;float&lt;/span&gt; radius, &lt;span class=&quot;keyword&quot;&gt;float&lt;/span&gt; angle, &lt;span class=&quot;keyword&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; segments, &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; drawLineToCenter)&lt;/span&gt;&lt;/span&gt;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//绘制一个带一个控制点的贝塞尔曲线（二次）  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; CC_DLL &lt;span class=&quot;title&quot;&gt;ccDrawQuadBezier&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; CCPoint&amp;amp; origin, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; CCPoint&amp;amp; control, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; CCPoint&amp;amp; destination, &lt;span class=&quot;keyword&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; segments)&lt;/span&gt;&lt;/span&gt;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//绘制一个带两个控制点的贝塞尔曲线（高阶）  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; CC_DLL &lt;span class=&quot;title&quot;&gt;ccDrawCubicBezier&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; CCPoint&amp;amp; origin, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; CCPoint&amp;amp; control1, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; CCPoint&amp;amp; control2, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; CCPoint&amp;amp; destination, &lt;span class=&quot;keyword&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; segments)&lt;/span&gt;&lt;/span&gt;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//绘制默认曲率的基数样条  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; CC_DLL &lt;span class=&quot;title&quot;&gt;ccDrawCatmullRom&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;( CCPointArray *arrayOfControlPoints, &lt;span class=&quot;keyword&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; segments )&lt;/span&gt;&lt;/span&gt;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//绘制指定曲率的基数样条  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; CC_DLL &lt;span class=&quot;title&quot;&gt;ccDrawCardinalSpline&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;( CCPointArray *config, &lt;span class=&quot;keyword&quot;&gt;float&lt;/span&gt; tension,  &lt;span class=&quot;keyword&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; segments )&lt;/span&gt;&lt;/span&gt;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//设置绘制颜色，4个byte型  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; CC_DLL &lt;span class=&quot;title&quot;&gt;ccDrawColor4B&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;( GLubyte r, GLubyte g, GLubyte b, GLubyte a )&lt;/span&gt;&lt;/span&gt;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//设置绘制颜色，4个float型  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; CC_DLL &lt;span class=&quot;title&quot;&gt;ccDrawColor4F&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;( GLfloat r, GLfloat g, GLfloat b, GLfloat a )&lt;/span&gt;&lt;/span&gt;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//设置点大小，默认为1  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; CC_DLL &lt;span class=&quot;title&quot;&gt;ccPointSize&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;( GLfloat pointSize )&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;示例&quot;&gt;&lt;a href=&quot;#示例&quot; class=&quot;headerlink&quot; title=&quot;示例&quot;&gt;&lt;/a&gt;示例&lt;/h4&gt;&lt;p&gt;代码使用的是TestCpp中代码。&lt;/p&gt;
&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;http://img.blog.csdn.net/20140207170619906?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvamFja3lzdHVkaW8=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast&quot; alt=&quot;&quot; border=&quot;0&quot; title=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;

&lt;h3 id=&quot;CCDrawNode（绘图节点）&quot;&gt;&lt;a href=&quot;#CCDrawNode（绘图节点）&quot; class=&quot;headerlink&quot; title=&quot;CCDrawNode（绘图节点）&quot;&gt;&lt;/a&gt;CCDrawNode（绘图节点）&lt;/h3&gt;&lt;h4 id=&quot;特点-1&quot;&gt;&lt;a href=&quot;#特点-1&quot; class=&quot;headerlink&quot; title=&quot;特点&quot;&gt;&lt;/a&gt;特点&lt;/h4&gt;&lt;p&gt;CCDrawNode从CCNode继承而来，是一个图形绘制的节点类，它提供了几个常用的点线面函数方便绘图，其实在之前的游戏遮罩一文中就有写过。相较于CCDrawingPrimitives，这里更推荐使用CCDrawNode。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;（1）它将绘图封装为普通节点的方式进行处理，符合cocos2d-x树状编程的思想，同时也避免了一些遮盖的问题。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;（2）不需要在draw函数中调用。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;（3）使用批处理绘图，提高了绘图效率。&lt;/em&gt;&lt;/p&gt;
&lt;h4 id=&quot;API-1&quot;&gt;&lt;a href=&quot;#API-1&quot; class=&quot;headerlink&quot; title=&quot;API&quot;&gt;&lt;/a&gt;API&lt;/h4&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;figcaption&gt;&lt;span&gt;CCDrawNode API&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//绘制一个指定位置，大小，颜色的点  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;drawDot&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; CCPoint &amp;amp;pos, &lt;span class=&quot;keyword&quot;&gt;float&lt;/span&gt; radius, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; ccColor4F &amp;amp;color)&lt;/span&gt;&lt;/span&gt;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//绘制一个指定起点终点，大小，颜色的点  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;drawSegment&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; CCPoint &amp;amp;from, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; CCPoint &amp;amp;to, &lt;span class=&quot;keyword&quot;&gt;float&lt;/span&gt; radius, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; ccColor4F &amp;amp;color)&lt;/span&gt;&lt;/span&gt;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//绘制一个指定点，填充颜色，边框颜色的，边框宽度的多边形  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;drawPolygon&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(CCPoint *verts, &lt;span class=&quot;keyword&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; count, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; ccColor4F &amp;amp;fillColor, &lt;span class=&quot;keyword&quot;&gt;float&lt;/span&gt; borderWidth, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; ccColor4F &amp;amp;borderColor)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;示例-1&quot;&gt;&lt;a href=&quot;#示例-1&quot; class=&quot;headerlink&quot; title=&quot;示例&quot;&gt;&lt;/a&gt;示例&lt;/h4&gt;&lt;p&gt;代码也是TestCpp中的代码。&lt;/p&gt;
&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;http://img.blog.csdn.net/20140207170658078?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvamFja3lzdHVkaW8=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast&quot; alt=&quot;&quot; border=&quot;0&quot; title=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;

&lt;h3 id=&quot;源码下载&quot;&gt;&lt;a href=&quot;#源码下载&quot; class=&quot;headerlink&quot; title=&quot;源码下载&quot;&gt;&lt;/a&gt;源码下载&lt;/h3&gt;&lt;p&gt;可以自己看TestCpp示例，也可以从&lt;a href=&quot;http://download.csdn.net/detail/jackyvincefu/6903357&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt;下载。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;最近忙出翔了，这年过的也揪心。好久没来更新博客了，今天就来写一写cocos2d-x中图形的绘制。&lt;/p&gt;
&lt;h3 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h3&gt;&lt;p&gt;其实cocos2d-x封装了大量的opengl的绘图函数，我们可以很轻松的在游戏中调用。但是实际上我们很少会这么做，因为编码绘图的方式效率实在太低了，尤其是诸如一些高阶贝塞尔曲线之类的，官方也不建议这么做，使用图像能更有效的提高绘图效率，同时也会更为的美观，也减少了一些精灵遮挡问题和边缘锯齿问题。cocos2d-x中绘图主要有两种方式：CCDrawingPrimitives和CCDrawNode。它们都在cocos2dx\draw_nodes目录下。&lt;/p&gt;
    
    </summary>
    
      <category term="cocos2d-x" scheme="http://fusijie.github.io/categories/cocos2d-x/"/>
    
    
      <category term="绘图" scheme="http://fusijie.github.io/tags/%E7%BB%98%E5%9B%BE/"/>
    
      <category term="CCDrawingPrimitives" scheme="http://fusijie.github.io/tags/CCDrawingPrimitives/"/>
    
      <category term="CCDrawNode" scheme="http://fusijie.github.io/tags/CCDrawNode/"/>
    
  </entry>
  
  <entry>
    <title>【玩转cocos2d-x之三十三】游戏嵌入Webview网页</title>
    <link href="http://fusijie.github.io/2013/12/26/play-cocos2dx-33/"/>
    <id>http://fusijie.github.io/2013/12/26/play-cocos2dx-33/</id>
    <published>2013-12-26T06:11:00.000Z</published>
    <updated>2016-04-24T13:32:31.000Z</updated>
    
    <content type="html">&lt;p&gt;手游《我叫MT》一开始会弹出一个游戏公告，有玩过的肯定都蛮熟悉的，这就是webview，就是一个网页。由于webview和平台相关，这里就介绍下cocos2d-x如何嵌入andorid的webview控件，在cocos2d-x中显示网页。&lt;/p&gt;
&lt;h3 id=&quot;Jni&quot;&gt;&lt;a href=&quot;#Jni&quot; class=&quot;headerlink&quot; title=&quot;Jni&quot;&gt;&lt;/a&gt;Jni&lt;/h3&gt;&lt;p&gt;Jni这里我就不再多说了。可用参考&lt;a href=&quot;http://en.wikipedia.org/wiki/Java_Native_Interface&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;wikipedia&lt;/a&gt;，或者&lt;a href=&quot;http://blog.csdn.net/jackystudio/article/details/12150907&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;微信飞机大战的移植篇&lt;/a&gt;。通过Jni，可以实现在cocos2d-x中调用Android的API，当然也可以进行传值。&lt;/p&gt;
&lt;h3 id=&quot;Android使用webview&quot;&gt;&lt;a href=&quot;#Android使用webview&quot; class=&quot;headerlink&quot; title=&quot;Android使用webview&quot;&gt;&lt;/a&gt;Android使用webview&lt;/h3&gt;&lt;p&gt;直接上代码。主要是处理布局和webview使用的问题。这里采用代码布局。以下操作在android的主类（cocos2dxActivity）中处理。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h4 id=&quot;添加成员变量&quot;&gt;&lt;a href=&quot;#添加成员变量&quot; class=&quot;headerlink&quot; title=&quot;添加成员变量&quot;&gt;&lt;/a&gt;添加成员变量&lt;/h4&gt;&lt;p&gt;整个布局的结构是最底层一个FrameLayout，ImageView控件放置在FrameLayout上。然后之上是一个LinearLayout用来放置关闭按钮，LinearLayout往下是Webview控件。&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;figcaption&gt;&lt;span&gt;成员变量&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; Test test  = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;span class=&quot;comment&quot;&gt;//Test实例&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;WebView m_webView;&lt;span class=&quot;comment&quot;&gt;//WebView控件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ImageView m_imageView;&lt;span class=&quot;comment&quot;&gt;//ImageView控件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;FrameLayout m_webLayout;&lt;span class=&quot;comment&quot;&gt;//FrameLayout布局&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;LinearLayout m_topLayout;&lt;span class=&quot;comment&quot;&gt;//LinearLayout布局&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Button m_backButton;&lt;span class=&quot;comment&quot;&gt;//关闭按钮&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;OnCreate中添加FrameLayout布局&quot;&gt;&lt;a href=&quot;#OnCreate中添加FrameLayout布局&quot; class=&quot;headerlink&quot; title=&quot;OnCreate中添加FrameLayout布局&quot;&gt;&lt;/a&gt;OnCreate中添加FrameLayout布局&lt;/h4&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;figcaption&gt;&lt;span&gt;添加FrameLayout布局&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Bundle savedInstanceState)&lt;/span&gt;&lt;/span&gt;&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.onCreate(savedInstanceState);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    test=&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//初始化一个空布局  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    m_webLayout = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; FrameLayout(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    FrameLayout.LayoutParams lytp = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; FrameLayout.LayoutParams(&lt;span class=&quot;number&quot;&gt;800&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;640&lt;/span&gt;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    lytp .gravity = Gravity.CENTER;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    addContentView(m_webLayout, lytp);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;返回实例&quot;&gt;&lt;a href=&quot;#返回实例&quot; class=&quot;headerlink&quot; title=&quot;返回实例&quot;&gt;&lt;/a&gt;返回实例&lt;/h4&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;figcaption&gt;&lt;span&gt;返回实例&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; Test &lt;span class=&quot;title&quot;&gt;getInstance&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Log.v(&lt;span class=&quot;string&quot;&gt;&quot;TestJacky&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;getInstance&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; test;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;显示webview&quot;&gt;&lt;a href=&quot;#显示webview&quot; class=&quot;headerlink&quot; title=&quot;显示webview&quot;&gt;&lt;/a&gt;显示webview&lt;/h4&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;figcaption&gt;&lt;span&gt;显示webview&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;openWebview&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	Log.v(&lt;span class=&quot;string&quot;&gt;&quot;TestJacky&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;openWebView&quot;&lt;/span&gt;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.runOnUiThread(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Runnable() &amp;#123;&lt;span class=&quot;comment&quot;&gt;//在主线程里添加别的控件  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;     &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           	&lt;span class=&quot;comment&quot;&gt;//初始化webView  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           	m_webView = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; WebView(test);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           	&lt;span class=&quot;comment&quot;&gt;//设置webView能够执行javascript脚本  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           	m_webView.getSettings().setJavaScriptEnabled(&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);              &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           	&lt;span class=&quot;comment&quot;&gt;//设置可以支持缩放  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           	m_webView.getSettings().setSupportZoom(&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;span class=&quot;comment&quot;&gt;//设置出现缩放工具  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           	m_webView.getSettings().setBuiltInZoomControls(&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           	&lt;span class=&quot;comment&quot;&gt;//载入URL  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           	m_webView.loadUrl(&lt;span class=&quot;string&quot;&gt;&quot;http://m.blog.csdn.net/blog/jackyvincefu/&quot;&lt;/span&gt;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           	&lt;span class=&quot;comment&quot;&gt;//使页面获得焦点  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           	m_webView.requestFocus();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           	&lt;span class=&quot;comment&quot;&gt;//如果页面中链接，如果希望点击链接继续在当前browser中响应  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           	m_webView.setWebViewClient(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; WebViewClient()&amp;#123;         &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;shouldOverrideUrlLoading&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(WebView view, String url)&lt;/span&gt; &lt;/span&gt;&amp;#123;     &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                   	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(url.indexOf(&lt;span class=&quot;string&quot;&gt;&quot;tel:&quot;&lt;/span&gt;)&amp;lt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                       	view.loadUrl(url);   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                   &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                   &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;         &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               &amp;#125;      &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &amp;#125;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;comment&quot;&gt;//背景图  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           m_imageView = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ImageView(test);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           m_imageView.setImageResource(R.drawable.bkgnd);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           m_imageView.setScaleType(ImageView.ScaleType.FIT_XY);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;comment&quot;&gt;//初始化线性布局 里面加按钮和webView  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           m_topLayout = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; LinearLayout(test);        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           m_topLayout.setOrientation(LinearLayout.VERTICAL);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;comment&quot;&gt;//初始化返回按钮  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           m_backButton = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Button(test);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           m_backButton.setBackgroundResource(R.drawable.btn);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           LinearLayout.LayoutParams lypt=&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; LinearLayout.LayoutParams(LinearLayout.LayoutParams.WRAP_CONTENT, LinearLayout.LayoutParams.WRAP_CONTENT);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           lypt.gravity=Gravity.RIGHT;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           m_backButton.setLayoutParams(lypt);              &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           m_backButton.setOnClickListener(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; OnClickListener() &amp;#123;                      &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onClick&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(View v)&lt;/span&gt; &lt;/span&gt;&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                   removeWebView();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &amp;#125;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;comment&quot;&gt;//把image加到主布局里  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           m_webLayout.addView(m_imageView);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;comment&quot;&gt;//把webView加入到线性布局  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           m_topLayout.addView(m_backButton);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           m_topLayout.addView(m_webView);                  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;comment&quot;&gt;//再把线性布局加入到主布局  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           m_webLayout.addView(m_topLayout);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       	&amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&amp;#125;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;移除webview&quot;&gt;&lt;a href=&quot;#移除webview&quot; class=&quot;headerlink&quot; title=&quot;移除webview&quot;&gt;&lt;/a&gt;移除webview&lt;/h4&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;figcaption&gt;&lt;span&gt;移除webview&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;removeWebView&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;                &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	m_webLayout.removeView(m_imageView);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	m_imageView.destroyDrawingCache();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	m_webLayout.removeView(m_topLayout);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	m_topLayout.destroyDrawingCache();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	m_topLayout.removeView(m_webView);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	m_webView.destroy();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	m_topLayout.removeView(m_backButton);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	m_backButton.destroyDrawingCache();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;重写返回键&quot;&gt;&lt;a href=&quot;#重写返回键&quot; class=&quot;headerlink&quot; title=&quot;重写返回键&quot;&gt;&lt;/a&gt;重写返回键&lt;/h4&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;figcaption&gt;&lt;span&gt;重写返回键&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onKeyDown&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; keyCoder,KeyEvent event)&lt;/span&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;comment&quot;&gt;//如果网页能回退则后退，如果不能后退移除WebView  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(m_webView.canGoBack() &amp;amp;&amp;amp; keyCoder == KeyEvent.KEYCODE_BACK)&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       	m_webView.goBack();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&amp;#125;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       	removeWebView();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;cocos2d-x使用Jni&quot;&gt;&lt;a href=&quot;#cocos2d-x使用Jni&quot; class=&quot;headerlink&quot; title=&quot;cocos2d-x使用Jni&quot;&gt;&lt;/a&gt;cocos2d-x使用Jni&lt;/h3&gt;&lt;p&gt;这里直接使用HelloWorld的示例，修改了close按钮的回调函数。&lt;/p&gt;
&lt;h4 id=&quot;jni头文件&quot;&gt;&lt;a href=&quot;#jni头文件&quot; class=&quot;headerlink&quot; title=&quot;jni头文件&quot;&gt;&lt;/a&gt;jni头文件&lt;/h4&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;figcaption&gt;&lt;span&gt;jni头文件&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;if&lt;/span&gt; (CC_TARGET_PLATFORM == CC_PLATFORM_ANDROID)  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;jni.h&amp;gt;&lt;/span&gt;  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;platform/android/jni/JniHelper.h&quot;&lt;/span&gt;  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;endif&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;Jni调用打开webview&quot;&gt;&lt;a href=&quot;#Jni调用打开webview&quot; class=&quot;headerlink&quot; title=&quot;Jni调用打开webview&quot;&gt;&lt;/a&gt;Jni调用打开webview&lt;/h4&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;figcaption&gt;&lt;span&gt;Jni调用打开webview&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; HelloWorld::menuCloseCallback(CCObject* pSender)  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;if&lt;/span&gt; (CC_TARGET_PLATFORM == CC_PLATFORM_ANDROID)  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	JniMethodInfo minfo;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;comment&quot;&gt;//getStaticMethodInfo，判断Java静态函数是否存在，并且把信息保存到minfo里  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;comment&quot;&gt;//参数1：JniMethodInfo  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;comment&quot;&gt;//参数2：Java类包名+类名  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;comment&quot;&gt;//参数3：Java函数名称  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;comment&quot;&gt;//参数4：函数参数类型和返回值类型  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; isHave = JniHelper::getStaticMethodInfo(minfo,&lt;span class=&quot;string&quot;&gt;&quot;com/jacky/test/Test&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;getInstance&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;()Lcom/jacky/test/Test;&quot;&lt;/span&gt;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	jobject jobj;&lt;span class=&quot;comment&quot;&gt;//存对象  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (isHave) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       	&lt;span class=&quot;comment&quot;&gt;//这里的调用getInstance，返回Test类的对象。  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       	jobj = minfo.env-&amp;gt;CallStaticObjectMethod(minfo.classID, minfo.methodID);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       	isHave = JniHelper::getMethodInfo(minfo,&lt;span class=&quot;string&quot;&gt;&quot;com/jacky/test/Test&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;openWebview&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;()V&quot;&lt;/span&gt;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (isHave) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           	&lt;span class=&quot;comment&quot;&gt;//调用openWebview, 参数1：Test对象   参数2：方法ID  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           	minfo.env-&amp;gt;CallVoidMethod(jobj, minfo.methodID);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       	&amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;else&lt;/span&gt;  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   		CCDirector::sharedDirector()-&amp;gt;end();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;if&lt;/span&gt; (CC_TARGET_PLATFORM == CC_PLATFORM_IOS)  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   		&lt;span class=&quot;built_in&quot;&gt;exit&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;endif&lt;/span&gt;  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;endif&lt;/span&gt;  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;效果图&quot;&gt;&lt;a href=&quot;#效果图&quot; class=&quot;headerlink&quot; title=&quot;效果图&quot;&gt;&lt;/a&gt;效果图&lt;/h3&gt;&lt;p&gt;爪机截屏的。&lt;/p&gt;
&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;http://img.blog.csdn.net/20131226095754125?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvamFja3lzdHVkaW8=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast&quot; alt=&quot;&quot; border=&quot;0&quot; title=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;

&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;http://img.blog.csdn.net/20131226095821781?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvamFja3lzdHVkaW8=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast&quot; alt=&quot;&quot; border=&quot;0&quot; title=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;

&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;http://img.blog.csdn.net/20131226095849921?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvamFja3lzdHVkaW8=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast&quot; alt=&quot;&quot; border=&quot;0&quot; title=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;


&lt;p&gt;&lt;em&gt;ps：这里没有处理多次打开webview的情况。可以采用Jni方法来通知cocos2d-x，也可以直接在主类中设置一个成员变量标志位，调用openWebview时设置为true，removeWebView时设置为false，在调用openWebview时检测这个标志位来决定是否打开即可。&lt;/em&gt;&lt;/p&gt;
&lt;h3 id=&quot;源码下载&quot;&gt;&lt;a href=&quot;#源码下载&quot; class=&quot;headerlink&quot; title=&quot;源码下载&quot;&gt;&lt;/a&gt;源码下载&lt;/h3&gt;&lt;p&gt;包含win32，android代码，拿掉了android交叉编译生成的obj，保留so和apk文件。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://download.csdn.net/detail/jackyvincefu/6770315&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;下载地址&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;手游《我叫MT》一开始会弹出一个游戏公告，有玩过的肯定都蛮熟悉的，这就是webview，就是一个网页。由于webview和平台相关，这里就介绍下cocos2d-x如何嵌入andorid的webview控件，在cocos2d-x中显示网页。&lt;/p&gt;
&lt;h3 id=&quot;Jni&quot;&gt;&lt;a href=&quot;#Jni&quot; class=&quot;headerlink&quot; title=&quot;Jni&quot;&gt;&lt;/a&gt;Jni&lt;/h3&gt;&lt;p&gt;Jni这里我就不再多说了。可用参考&lt;a href=&quot;http://en.wikipedia.org/wiki/Java_Native_Interface&quot;&gt;wikipedia&lt;/a&gt;，或者&lt;a href=&quot;http://blog.csdn.net/jackystudio/article/details/12150907&quot;&gt;微信飞机大战的移植篇&lt;/a&gt;。通过Jni，可以实现在cocos2d-x中调用Android的API，当然也可以进行传值。&lt;/p&gt;
&lt;h3 id=&quot;Android使用webview&quot;&gt;&lt;a href=&quot;#Android使用webview&quot; class=&quot;headerlink&quot; title=&quot;Android使用webview&quot;&gt;&lt;/a&gt;Android使用webview&lt;/h3&gt;&lt;p&gt;直接上代码。主要是处理布局和webview使用的问题。这里采用代码布局。以下操作在android的主类（cocos2dxActivity）中处理。&lt;/p&gt;
    
    </summary>
    
      <category term="cocos2d-x" scheme="http://fusijie.github.io/categories/cocos2d-x/"/>
    
    
      <category term="webview" scheme="http://fusijie.github.io/tags/webview/"/>
    
      <category term="Android" scheme="http://fusijie.github.io/tags/Android/"/>
    
      <category term="JNI" scheme="http://fusijie.github.io/tags/JNI/"/>
    
  </entry>
  
  <entry>
    <title>【玩转cocos2d-x之三十二】xml的解析</title>
    <link href="http://fusijie.github.io/2013/12/18/play-cocos2dx-32/"/>
    <id>http://fusijie.github.io/2013/12/18/play-cocos2dx-32/</id>
    <published>2013-12-18T01:30:00.000Z</published>
    <updated>2016-04-24T13:33:34.000Z</updated>
    
    <content type="html">&lt;p&gt;cocos2d-x中对xml的解析是采用的TinyXML库，而对plist的解析同时结合了CCDictionary来处理，这里简单介绍下cocos2d-x中解析xml的两种方式，也是常用的xml两个C++解析库：TinyXML和RapidXML。xml被设计用于数据存储和传输，重点是数据内容本身，而不像html，用于表现数据。&lt;/p&gt;
&lt;h3 id=&quot;TinyXML&quot;&gt;&lt;a href=&quot;#TinyXML&quot; class=&quot;headerlink&quot; title=&quot;TinyXML&quot;&gt;&lt;/a&gt;TinyXML&lt;/h3&gt;&lt;h4 id=&quot;概况&quot;&gt;&lt;a href=&quot;#概况&quot; class=&quot;headerlink&quot; title=&quot;概况&quot;&gt;&lt;/a&gt;概况&lt;/h4&gt;&lt;p&gt;TinyXML的&lt;a href=&quot;http://www.grinninglizard.com/tinyxml/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;主页&lt;/a&gt;，本来不打算介绍这个库的，因为它的解析效率并不高，但是鉴于cocos2d-x采用的就是它，所以也稍微写一下它的用法，cocos2d-x使用的是TinyXML2，Github地址&lt;a href=&quot;https://github.com/leethomason/tinyxml2&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;在这里&lt;/a&gt;。就是对TinyXML重新进行了封装，具体的区别在其github上也写的很清楚了。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h4 id=&quot;示例&quot;&gt;&lt;a href=&quot;#示例&quot; class=&quot;headerlink&quot; title=&quot;示例&quot;&gt;&lt;/a&gt;示例&lt;/h4&gt;&lt;p&gt;这里不介绍API，因为太多了，在线手册也都有。首先下载TinyXML库，将4个cpp文件和2个h文件加入cocos2d-x中。添加头文件时只需添加”&lt;em&gt;tinyxml.h&lt;/em&gt;“即可。&lt;/p&gt;
&lt;h5 id=&quot;xml的创建&quot;&gt;&lt;a href=&quot;#xml的创建&quot; class=&quot;headerlink&quot; title=&quot;xml的创建&quot;&gt;&lt;/a&gt;xml的创建&lt;/h5&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;figcaption&gt;&lt;span&gt;xml的创建&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; TestLayer::writeTinyXML()  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	TiXmlDocument* myTinyXMLDoc=new TiXmlDocument();&lt;span class=&quot;comment&quot;&gt;//创建文档对象  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	TiXmlElement* rootElement=new TiXmlElement(&lt;span class=&quot;string&quot;&gt;&quot;Jacky&quot;&lt;/span&gt;);&lt;span class=&quot;comment&quot;&gt;//创建根节点并连接到文档  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	myTinyXMLDoc-&amp;gt;LinkEndChild(rootElement);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	TiXmlElement* infoElement=new TiXmlElement(&lt;span class=&quot;string&quot;&gt;&quot;Info&quot;&lt;/span&gt;);&lt;span class=&quot;comment&quot;&gt;//创建info节点并连接到根节点  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	rootElement-&amp;gt;LinkEndChild(infoElement);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	infoElement-&amp;gt;SetAttribute(&lt;span class=&quot;string&quot;&gt;&quot;Name&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;Jacky&quot;&lt;/span&gt;);&lt;span class=&quot;comment&quot;&gt;//为info节点设置属性  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	infoElement-&amp;gt;SetAttribute(&lt;span class=&quot;string&quot;&gt;&quot;QQ&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;754505629&quot;&lt;/span&gt;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	infoElement-&amp;gt;SetAttribute(&lt;span class=&quot;string&quot;&gt;&quot;E-mail&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;Geek.Jacky@Gmail.com&quot;&lt;/span&gt;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	TiXmlElement* blogElement=new TiXmlElement(&lt;span class=&quot;string&quot;&gt;&quot;blog&quot;&lt;/span&gt;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	infoElement-&amp;gt;LinkEndChild(blogElement);&lt;span class=&quot;comment&quot;&gt;//创建blog节点并连接到info节点  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	TiXmlText* blogtext=new TiXmlText(&lt;span class=&quot;string&quot;&gt;&quot;http://blog.csdn.net/jackystudio&quot;&lt;/span&gt;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	blogElement-&amp;gt;LinkEndChild(blogtext);&lt;span class=&quot;comment&quot;&gt;//为blog节点添加文本值  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	TiXmlElement* websiteElenment=new TiXmlElement(&lt;span class=&quot;string&quot;&gt;&quot;website&quot;&lt;/span&gt;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	infoElement-&amp;gt;LinkEndChild(websiteElenment);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	TiXmlText* websitetext=new TiXmlText(&lt;span class=&quot;string&quot;&gt;&quot;http://fusijie.github.io&quot;&lt;/span&gt;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	websiteElenment-&amp;gt;LinkEndChild(websitetext);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	myTinyXMLDoc-&amp;gt;SaveFile(CCFileUtils::sharedFileUtils()-&amp;gt;fullPathForFilename(&lt;span class=&quot;string&quot;&gt;&quot;testTiny.xml&quot;&lt;/span&gt;).c_str());&lt;span class=&quot;comment&quot;&gt;//保存xml  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;delete&lt;/span&gt; myTinyXMLDoc;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;是不是很奇怪为什么new了那么多内存，但最后只delete TixmlDocument呢？其实在TinyXML中，子节点的内存管理都由父节点进行维护，所以不必在释放内存时对每个子节点都进行释放，而只需要释放父节点即可。&lt;/p&gt;
&lt;h5 id=&quot;xml的读取&quot;&gt;&lt;a href=&quot;#xml的读取&quot; class=&quot;headerlink&quot; title=&quot;xml的读取&quot;&gt;&lt;/a&gt;xml的读取&lt;/h5&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;figcaption&gt;&lt;span&gt;xml的读取&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; TestLayer::readTinyXML()  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	TiXmlDocument* myTinyXMLDoc=new TiXmlDocument(CCFileUtils::sharedFileUtils()-&amp;gt;fullPathForFilename(&lt;span class=&quot;string&quot;&gt;&quot;testTiny.xml&quot;&lt;/span&gt;).c_str());  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	myTinyXMLDoc-&amp;gt;LoadFile();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	TiXmlElement* rootElement = myTinyXMLDoc-&amp;gt;RootElement();  &lt;span class=&quot;comment&quot;&gt;//获取根节点  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	TiXmlElement* infoElement = rootElement-&amp;gt;FirstChildElement();  &lt;span class=&quot;comment&quot;&gt;// 获取Info节点    &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (infoElement)   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	TiXmlAttribute* attributeOfinfo = infoElement-&amp;gt;FirstAttribute();  &lt;span class=&quot;comment&quot;&gt;//获得info的属性    &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; ( attributeOfinfo )   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#123;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		CCLOG(&lt;span class=&quot;string&quot;&gt;&quot;%s : %s&quot;&lt;/span&gt;,attributeOfinfo-&amp;gt;Name(),attributeOfinfo-&amp;gt;Value());&lt;span class=&quot;comment&quot;&gt;//获取所有属性  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		attributeOfinfo = attributeOfinfo-&amp;gt;Next();    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	TiXmlElement* blogElement = infoElement-&amp;gt;FirstChildElement();&lt;span class=&quot;comment&quot;&gt;//获得blog  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	CCLOG(&lt;span class=&quot;string&quot;&gt;&quot;blog : %s&quot;&lt;/span&gt;,blogElement-&amp;gt;GetText());    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	TiXmlElement* websiteElement = blogElement-&amp;gt;NextSiblingElement();&lt;span class=&quot;comment&quot;&gt;//获取website    &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	CCLOG(&lt;span class=&quot;string&quot;&gt;&quot;website : %s&quot;&lt;/span&gt;,websiteElement-&amp;gt;GetText());    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	infoElement = infoElement-&amp;gt;NextSiblingElement();&lt;span class=&quot;comment&quot;&gt;//查找下一节点    &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;delete&lt;/span&gt; myTinyXMLDoc;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;RapidXML&quot;&gt;&lt;a href=&quot;#RapidXML&quot; class=&quot;headerlink&quot; title=&quot;RapidXML&quot;&gt;&lt;/a&gt;RapidXML&lt;/h3&gt;&lt;h4 id=&quot;概况-1&quot;&gt;&lt;a href=&quot;#概况-1&quot; class=&quot;headerlink&quot; title=&quot;概况&quot;&gt;&lt;/a&gt;概况&lt;/h4&gt;&lt;p&gt;RapidXML的&lt;a href=&quot;http://rapidxml.sourceforge.net/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;主页&lt;/a&gt;。在其手册中第四节&lt;a href=&quot;http://rapidxml.sourceforge.net/manual.html#namespacerapidxml_1performance&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;comparison with others parsers&lt;/a&gt;可以看到在同等条件下它的解析效率是TinyXML的30到60倍，所以如果需要解析大文件的话，RapidXML是不二之选。&lt;/p&gt;
&lt;h4 id=&quot;示例-1&quot;&gt;&lt;a href=&quot;#示例-1&quot; class=&quot;headerlink&quot; title=&quot;示例&quot;&gt;&lt;/a&gt;示例&lt;/h4&gt;&lt;p&gt;首先下载RapidXML库，将四个hpp文件都加入cocos2d-x中，在包含头文件时，4个hpp都要进行包含。&lt;/p&gt;
&lt;h5 id=&quot;xml的创建-1&quot;&gt;&lt;a href=&quot;#xml的创建-1&quot; class=&quot;headerlink&quot; title=&quot;xml的创建&quot;&gt;&lt;/a&gt;xml的创建&lt;/h5&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;figcaption&gt;&lt;span&gt;xml的创建&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;void TestLayer::writeRapidXML()  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	rapidxml::xml_document&amp;lt;&amp;gt; myRapidXMLDoc;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	rapidxml::xml_node&amp;lt;&amp;gt;* root = myRapidXMLDoc.allocate_node(rapidxml::node_element,&quot;Jacky&quot;,NULL);//创建根节点  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	myRapidXMLDoc.append_node(root);//追加根节点  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	rapidxml::xml_node&amp;lt;&amp;gt;* info = myRapidXMLDoc.allocate_node(rapidxml::node_element,&quot;Info&quot;,NULL);//创建info节点  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	info-&amp;gt;append_attribute(myRapidXMLDoc.allocate_attribute(&quot;Name&quot;,&quot;Jacky&quot;));  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	info-&amp;gt;append_attribute(myRapidXMLDoc.allocate_attribute(&quot;QQ&quot;,&quot;754505629&quot;));  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	info-&amp;gt;append_attribute(myRapidXMLDoc.allocate_attribute(&quot;E-mail&quot;,&quot;Geek.Jacky@Gmail.com&quot;));  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	root-&amp;gt;append_node(info);//追加info节点到root  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	//创建blog和website节点并追加到root  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	rapidxml::xml_node&amp;lt;&amp;gt;* blog = myRapidXMLDoc.allocate_node(rapidxml::node_element,&quot;blog&quot;,&quot;http://blog.csdn.net/jackystudio&quot;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	info-&amp;gt;append_node(blog);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	rapidxml::xml_node&amp;lt;&amp;gt;* website = myRapidXMLDoc.allocate_node(rapidxml::node_element,&quot;website&quot;,&quot;http://fusijie.github.io&quot;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	info-&amp;gt;append_node(website);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	//保存xml文档  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	std::string text;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	rapidxml::print(std::back_inserter(text), myRapidXMLDoc, 0);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	CCLog(text.c_str());  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	std::ofstream out(CCFileUtils::sharedFileUtils()-&amp;gt;fullPathForFilename(&quot;testRapid.xml&quot;));  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	out &amp;lt;&amp;lt; myRapidXMLDoc;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&quot;xml的读取-1&quot;&gt;&lt;a href=&quot;#xml的读取-1&quot; class=&quot;headerlink&quot; title=&quot;xml的读取&quot;&gt;&lt;/a&gt;xml的读取&lt;/h5&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;figcaption&gt;&lt;span&gt;xml的读取&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; TestLayer::readRapidXML()  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	rapidxml::file&amp;lt;&amp;gt; fdoc(CCFileUtils::sharedFileUtils()-&amp;gt;fullPathForFilename(&lt;span class=&quot;string&quot;&gt;&quot;testRapid.xml&quot;&lt;/span&gt;).c_str());&lt;span class=&quot;comment&quot;&gt;//读取数据  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	CCLog(fdoc.data());  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	rapidxml::xml_document&amp;lt;&amp;gt; myRapidXMLDoc;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	myRapidXMLDoc.parse&amp;lt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&amp;gt;(fdoc.data());&lt;span class=&quot;comment&quot;&gt;//将数据写入xml_document  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	rapidxml::xml_node&amp;lt;&amp;gt;* root = myRapidXMLDoc.first_node();&lt;span class=&quot;comment&quot;&gt;//获取根节点  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	rapidxml::xml_node&amp;lt;&amp;gt;* info = root-&amp;gt;first_node();&lt;span class=&quot;comment&quot;&gt;//获取Info节点  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	rapidxml::xml_attribute&amp;lt;&amp;gt;* info_attr = info-&amp;gt;first_attribute();&lt;span class=&quot;comment&quot;&gt;//获取info属性  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	CCLog(&lt;span class=&quot;string&quot;&gt;&quot;%s:%s&quot;&lt;/span&gt;,info_attr-&amp;gt;name(),info_attr-&amp;gt;value());  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	CCLog(&lt;span class=&quot;string&quot;&gt;&quot;%s:%s&quot;&lt;/span&gt;,info_attr-&amp;gt;next_attribute()-&amp;gt;name(),info_attr-&amp;gt;next_attribute()-&amp;gt;value());  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	CCLog(&lt;span class=&quot;string&quot;&gt;&quot;%s:%s&quot;&lt;/span&gt;,info_attr-&amp;gt;next_attribute()-&amp;gt;next_attribute()-&amp;gt;name(),info_attr-&amp;gt;next_attribute()-&amp;gt;next_attribute()-&amp;gt;value());  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	rapidxml::xml_node&amp;lt;&amp;gt;* blog=info-&amp;gt;first_node();&lt;span class=&quot;comment&quot;&gt;//获取blog节点  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	CCLog(&lt;span class=&quot;string&quot;&gt;&quot;%s:%s&quot;&lt;/span&gt;,blog-&amp;gt;name(),blog-&amp;gt;value());  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	rapidxml::xml_node&amp;lt;&amp;gt;* website=blog-&amp;gt;next_sibling();&lt;span class=&quot;comment&quot;&gt;//获取website节点  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	CCLog(&lt;span class=&quot;string&quot;&gt;&quot;%s:%s&quot;&lt;/span&gt;,website-&amp;gt;name(),website-&amp;gt;value());  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;生成xml的文件&quot;&gt;&lt;a href=&quot;#生成xml的文件&quot; class=&quot;headerlink&quot; title=&quot;生成xml的文件&quot;&gt;&lt;/a&gt;生成xml的文件&lt;/h3&gt;&lt;p&gt;以上2种方式生成的xml文件内容如下：&lt;/p&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;figcaption&gt;&lt;span&gt;生成的xml文件&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;Jacky&lt;/span&gt;&amp;gt;&lt;/span&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;Info&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;Name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;Jacky&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;QQ&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;754505629&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;E-mail&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;Geek.Jacky@Gmail.com&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;blog&lt;/span&gt;&amp;gt;&lt;/span&gt;http://blog.csdn.net/jackystudio&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;blog&lt;/span&gt;&amp;gt;&lt;/span&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;website&lt;/span&gt;&amp;gt;&lt;/span&gt;http://fusijie.github.io&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;website&lt;/span&gt;&amp;gt;&lt;/span&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;Info&lt;/span&gt;&amp;gt;&lt;/span&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;Jacky&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;源码下载&quot;&gt;&lt;a href=&quot;#源码下载&quot; class=&quot;headerlink&quot; title=&quot;源码下载&quot;&gt;&lt;/a&gt;源码下载&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://download.csdn.net/detail/jackyvincefu/6732361&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;下载地址&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;cocos2d-x中对xml的解析是采用的TinyXML库，而对plist的解析同时结合了CCDictionary来处理，这里简单介绍下cocos2d-x中解析xml的两种方式，也是常用的xml两个C++解析库：TinyXML和RapidXML。xml被设计用于数据存储和传输，重点是数据内容本身，而不像html，用于表现数据。&lt;/p&gt;
&lt;h3 id=&quot;TinyXML&quot;&gt;&lt;a href=&quot;#TinyXML&quot; class=&quot;headerlink&quot; title=&quot;TinyXML&quot;&gt;&lt;/a&gt;TinyXML&lt;/h3&gt;&lt;h4 id=&quot;概况&quot;&gt;&lt;a href=&quot;#概况&quot; class=&quot;headerlink&quot; title=&quot;概况&quot;&gt;&lt;/a&gt;概况&lt;/h4&gt;&lt;p&gt;TinyXML的&lt;a href=&quot;http://www.grinninglizard.com/tinyxml/&quot;&gt;主页&lt;/a&gt;，本来不打算介绍这个库的，因为它的解析效率并不高，但是鉴于cocos2d-x采用的就是它，所以也稍微写一下它的用法，cocos2d-x使用的是TinyXML2，Github地址&lt;a href=&quot;https://github.com/leethomason/tinyxml2&quot;&gt;在这里&lt;/a&gt;。就是对TinyXML重新进行了封装，具体的区别在其github上也写的很清楚了。&lt;/p&gt;
    
    </summary>
    
      <category term="cocos2d-x" scheme="http://fusijie.github.io/categories/cocos2d-x/"/>
    
    
      <category term="xml解析" scheme="http://fusijie.github.io/tags/xml%E8%A7%A3%E6%9E%90/"/>
    
      <category term="TinyXML" scheme="http://fusijie.github.io/tags/TinyXML/"/>
    
      <category term="RapidXML" scheme="http://fusijie.github.io/tags/RapidXML/"/>
    
  </entry>
  
  <entry>
    <title>【玩转cocos2d-x之三十一】服务器的网络通信编程</title>
    <link href="http://fusijie.github.io/2013/12/17/play-cocos2dx-31/"/>
    <id>http://fusijie.github.io/2013/12/17/play-cocos2dx-31/</id>
    <published>2013-12-17T06:11:00.000Z</published>
    <updated>2016-04-24T13:35:50.000Z</updated>
    
    <content type="html">&lt;p&gt;这里采用Apache+php搭建了一个简易服务器，服务端用php语言，客户端采用cocos2d-x的CCHttpClient类通过http方式访问服务端资源。模拟了cocos2d-x提交账户和密码到服务端，服务端校验帐号密码，如果正确返回客户端成功登录，如果错误则返回错误信息，同时在服务端后台保存登录log。第一次接触php，语法上和C/C++还是蛮像的，主要是给出一个cocos2d-x网络实例，代码中并没有做一些防呆纠错措施。&lt;/p&gt;
&lt;h3 id=&quot;搭建Apache-php网页服务器&quot;&gt;&lt;a href=&quot;#搭建Apache-php网页服务器&quot; class=&quot;headerlink&quot; title=&quot;搭建Apache+php网页服务器&quot;&gt;&lt;/a&gt;搭建Apache+php网页服务器&lt;/h3&gt;&lt;p&gt;Apche2.2 x86版:&lt;a href=&quot;http://pan.baidu.com/s/1vNuLF&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;下载地址&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;php5.2.17版:&lt;a href=&quot;http://pan.baidu.com/s/17sFoN&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;下载地址&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;搭建过程参见&lt;a href=&quot;http://tech.163.com/06/0206/11/299AMBLT0009159K.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt;，这里就不安装MySQL了。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;搭建成功后，打开&lt;a href=&quot;http://127.0.0.1&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://127.0.0.1&lt;/a&gt;，就可以看到”&lt;em&gt;It’ works!&lt;/em&gt;“字样。同时打开Apache monitor监控Apache处于运行状态。我这里使用的80端口。&lt;/p&gt;
&lt;h3 id=&quot;php收集表单的方式&quot;&gt;&lt;a href=&quot;#php收集表单的方式&quot; class=&quot;headerlink&quot; title=&quot;php收集表单的方式&quot;&gt;&lt;/a&gt;php收集表单的方式&lt;/h3&gt;&lt;p&gt;Http定义了与服务器交互的不同方法，最基本的方法有4种，分别是GET，POST，PUT，DELETE，对应着查改增删，这里介绍GET和POST。&lt;/p&gt;
&lt;p&gt;用$_GET获取表单数据，表单数据对任何人都是可见的，比如&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;http://www.w3school.com.cn/welcome.php?username=jackystudio&amp;amp;password=123
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;用$_POST获取表单数据，表单数据则是不可见的，比如&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;http://www.w3school.com.cn/welcome.php
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;详细可见&lt;a href=&quot;http://www.w3school.com.cn/php&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;w3school有关php章节&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id=&quot;服务器php处理代码&quot;&gt;&lt;a href=&quot;#服务器php处理代码&quot; class=&quot;headerlink&quot; title=&quot;服务器php处理代码&quot;&gt;&lt;/a&gt;服务器php处理代码&lt;/h3&gt;&lt;p&gt;这里我直接修改了主页index.html。会C++应该都能看懂，先是打开一个log.txt，接收到username和password，如果是username是jackystudio，password是123的话，把username和password写入log.txt，并返回登录成功，如果username或password错误时返回登录失败。如果未接收到则返回没有用户名密码。&lt;/p&gt;
&lt;h4 id=&quot;采用get方式代码&quot;&gt;&lt;a href=&quot;#采用get方式代码&quot; class=&quot;headerlink&quot; title=&quot;采用get方式代码&quot;&gt;&lt;/a&gt;采用get方式代码&lt;/h4&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;figcaption&gt;&lt;span&gt;Get方式&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;lt;?php  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		$open=fopen(&quot;log.txt&quot;,&quot;a&quot; ); //Save password  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		if(isset($_GET[&quot;username&quot;]) &amp;amp;&amp;amp; isset($_GET[&quot;password&quot;]))  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			if($_GET[&quot;username&quot;]==&quot;jackystudio&quot; &amp;amp;&amp;amp; $_GET[&quot;password&quot;]==&quot;123&quot;)  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				fwrite($open,&quot;Username:&quot;.$_GET[&quot;username&quot;]);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				fwrite($open,&quot;\r\n&quot;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				fwrite($open,&quot;Password:&quot;.$_GET[&quot;password&quot;]);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				echo &quot;Login Success&quot;; //return to client  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			else  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				fwrite($open,&quot;Wrong Username or password!&quot;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				echo &quot;Login Failed&quot;; //return to client  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		else  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			fwrite($open,&quot;No password&quot;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			echo &quot;No Username or Password&quot;; //return to client  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		fclose($open);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		?&amp;gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;采用post方式代码&quot;&gt;&lt;a href=&quot;#采用post方式代码&quot; class=&quot;headerlink&quot; title=&quot;采用post方式代码&quot;&gt;&lt;/a&gt;采用post方式代码&lt;/h4&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;figcaption&gt;&lt;span&gt;Post方式&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;lt;?php  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		$open=fopen(&quot;log.txt&quot;,&quot;a&quot; ); //Save password  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		if(isset($_POST[&quot;username&quot;]) &amp;amp;&amp;amp; isset($_POST[&quot;password&quot;]))  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			if($_POST[&quot;username&quot;]==&quot;jackystudio&quot; &amp;amp;&amp;amp; $_POST[&quot;password&quot;]==&quot;123&quot;)  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				fwrite($open,&quot;Username:&quot;.$_POST[&quot;username&quot;]);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				fwrite($open,&quot;\r\n&quot;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				fwrite($open,&quot;Password:&quot;.$_POST[&quot;password&quot;]);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				echo &quot;Login Success&quot;; //return to client  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			else  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				fwrite($open,&quot;Wrong Username or password!&quot;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				echo &quot;Login Failed&quot;; //return to client  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		else  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			fwrite($open,&quot;No password&quot;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			echo &quot;No Username or Password&quot;; //return to client  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		fclose($open);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		?&amp;gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;cocos2d-x使用CCHttpClient类进行网络请求&quot;&gt;&lt;a href=&quot;#cocos2d-x使用CCHttpClient类进行网络请求&quot; class=&quot;headerlink&quot; title=&quot;cocos2d-x使用CCHttpClient类进行网络请求&quot;&gt;&lt;/a&gt;cocos2d-x使用CCHttpClient类进行网络请求&lt;/h3&gt;&lt;p&gt;CCHttpClient的使用这里也不赘述了，请移步官方文档How_to_use_CCHttpClient。这里在上文编辑框和点九图的基础上进行了修改。2个编辑框，分别是username和password。一个按钮点击发送请求。一个文本显示从服务器返回的结果。&lt;/p&gt;
&lt;h4 id=&quot;按钮请求处理&quot;&gt;&lt;a href=&quot;#按钮请求处理&quot; class=&quot;headerlink&quot; title=&quot;按钮请求处理&quot;&gt;&lt;/a&gt;按钮请求处理&lt;/h4&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;figcaption&gt;&lt;span&gt;按钮请求处理&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; TestLayer::btncallback( CCObject* pSender )  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; requestType_is_get=&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;span class=&quot;comment&quot;&gt;//采用get方式或者post方式  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (requestType_is_get)  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		CCHttpRequest* request = new CCHttpRequest();&lt;span class=&quot;comment&quot;&gt;//创建请求对象  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt; str1 = &lt;span class=&quot;string&quot;&gt;&quot;127.0.0.1:80/index.html?&quot;&lt;/span&gt;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt; str2 = p_User_EditBox-&amp;gt;getText();&lt;span class=&quot;comment&quot;&gt;//获取username编辑框内容  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt; str3 = p_Psw_EditBox-&amp;gt;getText();&lt;span class=&quot;comment&quot;&gt;//获取password编辑框内容  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt; struser=&lt;span class=&quot;string&quot;&gt;&quot;username=&quot;&lt;/span&gt;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt; strpsw=&lt;span class=&quot;string&quot;&gt;&quot;&amp;amp;password=&quot;&lt;/span&gt;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		str1=str1+struser+str2+strpsw+str3;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		request-&amp;gt;setUrl(str1.c_str());&lt;span class=&quot;comment&quot;&gt;//设置请求的url，username和password已经包含在url中  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		request-&amp;gt;setRequestType(CCHttpRequest::kHttpGet);&lt;span class=&quot;comment&quot;&gt;//设置为Get模式  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		request-&amp;gt;setResponseCallback(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;, httpresponse_selector(TestLayer::onHttpRequestCompleted));&lt;span class=&quot;comment&quot;&gt;//设置响应的回调  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		request-&amp;gt;setTag(&lt;span class=&quot;string&quot;&gt;&quot;GET test&quot;&lt;/span&gt;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		CCHttpClient::getInstance()-&amp;gt;send(request);&lt;span class=&quot;comment&quot;&gt;//发送请求  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		request-&amp;gt;release();&lt;span class=&quot;comment&quot;&gt;//释放请求  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		CCHttpRequest* request = new CCHttpRequest();&lt;span class=&quot;comment&quot;&gt;//创建请求对象  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt; str1 = &lt;span class=&quot;string&quot;&gt;&quot;127.0.0.1:80/index.html&quot;&lt;/span&gt;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt; str2 = p_User_EditBox-&amp;gt;getText();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt; str3 = p_Psw_EditBox-&amp;gt;getText();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt; struser=&lt;span class=&quot;string&quot;&gt;&quot;username=&quot;&lt;/span&gt;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt; strpsw=&lt;span class=&quot;string&quot;&gt;&quot;&amp;amp;password=&quot;&lt;/span&gt;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		str2=struser+str2+strpsw+str3;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		request-&amp;gt;setUrl(str1.c_str());&lt;span class=&quot;comment&quot;&gt;//设置请求的url，只是请求页面的url，并不包含username和password  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		request-&amp;gt;setRequestType(CCHttpRequest::kHttpPost);&lt;span class=&quot;comment&quot;&gt;//设置为Post模式  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		request-&amp;gt;setResponseCallback(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;, httpresponse_selector(TestLayer::onHttpRequestCompleted));&lt;span class=&quot;comment&quot;&gt;//设置响应的回调  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt;* postData = str2.c_str();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		request-&amp;gt;setRequestData(postData, &lt;span class=&quot;built_in&quot;&gt;strlen&lt;/span&gt;(postData));&lt;span class=&quot;comment&quot;&gt;//设置请求数据，也就是username和password  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		request-&amp;gt;setTag(&lt;span class=&quot;string&quot;&gt;&quot;POST test&quot;&lt;/span&gt;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		CCHttpClient::getInstance()-&amp;gt;send(request);&lt;span class=&quot;comment&quot;&gt;//发送请求  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		request-&amp;gt;release();&lt;span class=&quot;comment&quot;&gt;//释放请求  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;响应回调处理&quot;&gt;&lt;a href=&quot;#响应回调处理&quot; class=&quot;headerlink&quot; title=&quot;响应回调处理&quot;&gt;&lt;/a&gt;响应回调处理&lt;/h4&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;figcaption&gt;&lt;span&gt;响应回调处理&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; TestLayer::onHttpRequestCompleted( CCHttpClient* client, CCHttpResponse* response )  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!response-&amp;gt;isSucceed())&lt;span class=&quot;comment&quot;&gt;//如果响应失败，输出错误信息  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&amp;#123;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       	CCString strError;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       	strError.initWithFormat(&lt;span class=&quot;string&quot;&gt;&quot;Receive Error! \n%s\n&quot;&lt;/span&gt;,response-&amp;gt;getErrorBuffer());  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       	m_labelStatusCode-&amp;gt;setString(strError.getCString());  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       	return ;     &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&amp;#125;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;vector&lt;/span&gt;&amp;lt;&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt;&amp;gt; *buffer = response-&amp;gt;getResponseData();&lt;span class=&quot;comment&quot;&gt;//接收响应信息  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt; recieveData;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; buffer-&amp;gt;size(); i++)  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&amp;#123;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       	recieveData += (*buffer)[i];    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; begin= recieveData.find(&lt;span class=&quot;string&quot;&gt;&quot;&amp;lt;body&amp;gt;&quot;&lt;/span&gt;)+&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;;&lt;span class=&quot;comment&quot;&gt;//这里简单处理，获取&amp;lt;body&amp;gt;标签内数据，即是响应内容  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; end= recieveData.find(&lt;span class=&quot;string&quot;&gt;&quot;&amp;lt;/body&amp;gt;&quot;&lt;/span&gt;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(recieveData,begin,end-begin)&lt;/span&gt;&lt;/span&gt;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	m_labelStatusCode-&amp;gt;setString(result.c_str());  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;效果图&quot;&gt;&lt;a href=&quot;#效果图&quot; class=&quot;headerlink&quot; title=&quot;效果图&quot;&gt;&lt;/a&gt;效果图&lt;/h3&gt;&lt;h4 id=&quot;Apache运行（Get和Post两种效果都是一样的）&quot;&gt;&lt;a href=&quot;#Apache运行（Get和Post两种效果都是一样的）&quot; class=&quot;headerlink&quot; title=&quot;Apache运行（Get和Post两种效果都是一样的）&quot;&gt;&lt;/a&gt;Apache运行（Get和Post两种效果都是一样的）&lt;/h4&gt;&lt;p&gt;&lt;em&gt;（1）帐号密码正确时&lt;/em&gt;&lt;/p&gt;
&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;http://img.blog.csdn.net/20131214145727843&quot; alt=&quot;&quot; border=&quot;0&quot; title=&quot;登录成功&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;

&lt;p&gt;&lt;em&gt;（2）帐号密码错误时&lt;/em&gt;&lt;/p&gt;
&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;http://img.blog.csdn.net/20131214145557531&quot; alt=&quot;&quot; border=&quot;0&quot; title=&quot;登录失败&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;

&lt;h4 id=&quot;关闭Apache&quot;&gt;&lt;a href=&quot;#关闭Apache&quot; class=&quot;headerlink&quot; title=&quot;关闭Apache&quot;&gt;&lt;/a&gt;关闭Apache&lt;/h4&gt;&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;http://img.blog.csdn.net/20131214145740578&quot; alt=&quot;&quot; border=&quot;0&quot; title=&quot;服务器关闭&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;

&lt;h3 id=&quot;源码下载&quot;&gt;&lt;a href=&quot;#源码下载&quot; class=&quot;headerlink&quot; title=&quot;源码下载&quot;&gt;&lt;/a&gt;源码下载&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://download.csdn.net/detail/jackyvincefu/6713471&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;下载地址&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;这里采用Apache+php搭建了一个简易服务器，服务端用php语言，客户端采用cocos2d-x的CCHttpClient类通过http方式访问服务端资源。模拟了cocos2d-x提交账户和密码到服务端，服务端校验帐号密码，如果正确返回客户端成功登录，如果错误则返回错误信息，同时在服务端后台保存登录log。第一次接触php，语法上和C/C++还是蛮像的，主要是给出一个cocos2d-x网络实例，代码中并没有做一些防呆纠错措施。&lt;/p&gt;
&lt;h3 id=&quot;搭建Apache-php网页服务器&quot;&gt;&lt;a href=&quot;#搭建Apache-php网页服务器&quot; class=&quot;headerlink&quot; title=&quot;搭建Apache+php网页服务器&quot;&gt;&lt;/a&gt;搭建Apache+php网页服务器&lt;/h3&gt;&lt;p&gt;Apche2.2 x86版:&lt;a href=&quot;http://pan.baidu.com/s/1vNuLF&quot;&gt;下载地址&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;php5.2.17版:&lt;a href=&quot;http://pan.baidu.com/s/17sFoN&quot;&gt;下载地址&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;搭建过程参见&lt;a href=&quot;http://tech.163.com/06/0206/11/299AMBLT0009159K.html&quot;&gt;这里&lt;/a&gt;，这里就不安装MySQL了。&lt;/p&gt;
    
    </summary>
    
      <category term="cocos2d-x" scheme="http://fusijie.github.io/categories/cocos2d-x/"/>
    
    
      <category term="cocos2d-x联网" scheme="http://fusijie.github.io/tags/cocos2d-x%E8%81%94%E7%BD%91/"/>
    
      <category term="apache" scheme="http://fusijie.github.io/tags/apache/"/>
    
      <category term="php" scheme="http://fusijie.github.io/tags/php/"/>
    
      <category term="CCHttpClient" scheme="http://fusijie.github.io/tags/CCHttpClient/"/>
    
      <category term="服务器" scheme="http://fusijie.github.io/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>【玩转cocos2d-x之三十】点九图和输入框的使用</title>
    <link href="http://fusijie.github.io/2013/12/13/play-cocos2dx-30/"/>
    <id>http://fusijie.github.io/2013/12/13/play-cocos2dx-30/</id>
    <published>2013-12-13T03:53:00.000Z</published>
    <updated>2016-04-24T13:35:02.000Z</updated>
    
    <content type="html">&lt;p&gt;登录界面一个帐号/密码输入框或者主角命名框是少不了的。这节就来了解一下点九图的输入框的使用。这里只是介绍基础知识，并不进行平台的移植，也不处理跨平台可能出现的问题。&lt;/p&gt;
&lt;h3 id=&quot;点九图CCScale9Sprite&quot;&gt;&lt;a href=&quot;#点九图CCScale9Sprite&quot; class=&quot;headerlink&quot; title=&quot;点九图CCScale9Sprite&quot;&gt;&lt;/a&gt;点九图CCScale9Sprite&lt;/h3&gt;&lt;h4 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h4&gt;&lt;p&gt;点九图做过移动开发的肯定不会陌生。采用的是PNG点9图，PNG点9图可以自适应各种环境，同时保持伸缩不变形。移动端的UI基本上都是按这个来做的。点9图的制作很简单，用Android SDK的tool下的draw9patch.bat就可以制作。左为原理图，右为效果图。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;http://img.blog.csdn.net/20131213100101843?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvamFja3lzdHVkaW8=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast&quot; alt=&quot;&quot; border=&quot;0&quot; title=&quot;点九图&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;

&lt;h4 id=&quot;使用&quot;&gt;&lt;a href=&quot;#使用&quot; class=&quot;headerlink&quot; title=&quot;使用&quot;&gt;&lt;/a&gt;使用&lt;/h4&gt;&lt;p&gt;cocos2d-x采用CCScale9Sprite来处理点九图，CCScale9Sprite为扩展类，所以在使用前需加入如下声明。&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;figcaption&gt;&lt;span&gt;头文件和空间&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;cocos-ext.h&quot;&lt;/span&gt;  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;USING_NS_CC_EXT;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;CCScale9Sprite和CCSprite一样继承于CCNodeRGB，所以基本上可以像使用CCSprite一样使用CCScale9Sprite（有一点小差别CCSprite还继承了CCTextureProtocol接口）。以下用于创建一个二态点九图按钮。&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;figcaption&gt;&lt;span&gt;创建点九图按钮&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;CCScale9Sprite* confirmnormal=CCScale9Sprite::create(&lt;span class=&quot;string&quot;&gt;&quot;btn_style_alert_dialog_button_normal.9.png&quot;&lt;/span&gt;);&lt;span class=&quot;comment&quot;&gt;//normal态  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;confirmnormal-&amp;gt;setContentSize(CCSizeMake(&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;70&lt;/span&gt;));&lt;span class=&quot;comment&quot;&gt;//设置大小  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CCScale9Sprite* confirmpressd=CCScale9Sprite::create(&lt;span class=&quot;string&quot;&gt;&quot;btn_style_alert_dialog_button_pressed.9.png&quot;&lt;/span&gt;);&lt;span class=&quot;comment&quot;&gt;//pressd态  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;confirmpressd-&amp;gt;setContentSize(CCSizeMake(&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;70&lt;/span&gt;));&lt;span class=&quot;comment&quot;&gt;//设置大小  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CCMenuItemSprite* menuitem=CCMenuItemSprite::create(confirmnormal,confirmpressd,this,menu_selector(TestLayer::btncallback));  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CCMenu* menu=CCMenu::create(menuitem,NULL);&lt;span class=&quot;comment&quot;&gt;//创建menu  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;menu-&amp;gt;setPosition(visibleSize.width/&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,visibleSize.height/&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;-&amp;gt;addChild(menu);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;输入框CCEditBox&quot;&gt;&lt;a href=&quot;#输入框CCEditBox&quot; class=&quot;headerlink&quot; title=&quot;输入框CCEditBox&quot;&gt;&lt;/a&gt;输入框CCEditBox&lt;/h3&gt;&lt;h4 id=&quot;概述-1&quot;&gt;&lt;a href=&quot;#概述-1&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h4&gt;&lt;p&gt;CCEditBox也是cocos2d-x的扩展类，所以和上面一样要进行头文件包含和命名空间声明。另外由于要监控输入框的各种状态，所以还必须实现CCEditBoxDelegate类，该类声明了以下接口：&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;figcaption&gt;&lt;span&gt;CCEditBoxDelegate接口&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//当键盘弹出编辑框获得焦点时调用  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;virtual&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;editBoxEditingDidBegin&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(CCEditBox* editBox)&lt;/span&gt; &lt;/span&gt;&amp;#123;&amp;#125;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//当键盘消失编辑框失去焦点时调用  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;virtual&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;editBoxEditingDidEnd&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(CCEditBox* editBox)&lt;/span&gt; &lt;/span&gt;&amp;#123;&amp;#125;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//当编辑框文本改变时调用  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;virtual&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;editBoxTextChanged&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(CCEditBox* editBox, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt;&amp;amp; text)&lt;/span&gt; &lt;/span&gt;&amp;#123;&amp;#125;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//当返回键按下时或者点击了键盘以外的区域时调用  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;virtual&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;editBoxReturn&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(CCEditBox* editBox)&lt;/span&gt; &lt;/span&gt;= &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;使用-1&quot;&gt;&lt;a href=&quot;#使用-1&quot; class=&quot;headerlink&quot; title=&quot;使用&quot;&gt;&lt;/a&gt;使用&lt;/h4&gt;&lt;p&gt;在TestLayer.cpp的init()中创建编辑框。&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;figcaption&gt;&lt;span&gt;编辑框的使用&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//bool TestLayer::init()  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CCSize visibleSize=CCDirector::sharedDirector()-&amp;gt;getVisibleSize();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pEditBox = CCEditBox::create(CCSizeMake(&lt;span class=&quot;number&quot;&gt;250&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;50&lt;/span&gt;), CCScale9Sprite::create(&lt;span class=&quot;string&quot;&gt;&quot;login_edit_normal.9.png&quot;&lt;/span&gt;));  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pEditBox-&amp;gt;setPosition(ccp(visibleSize.width/&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, visibleSize.height*&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;/&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;));  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pEditBox-&amp;gt;setFontColor(ccRED);&lt;span class=&quot;comment&quot;&gt;//设置字体颜色  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pEditBox-&amp;gt;setPlaceHolder(&lt;span class=&quot;string&quot;&gt;&quot;please input:&quot;&lt;/span&gt;);&lt;span class=&quot;comment&quot;&gt;//设置预置文本  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pEditBox-&amp;gt;setMaxLength(&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;);&lt;span class=&quot;comment&quot;&gt;//设置最大长度  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//  kEditBoxInputModeAny: 开启任何文本的输入键盘,包括换行  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//  kEditBoxInputModeEmailAddr:   开启 邮件地址 输入类型键盘  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//  kEditBoxInputModeNumeric: 开启 数字符号 输入类型键盘  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//  kEditBoxInputModePhoneNumber: 开启 电话号码 输入类型键盘  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//  kEditBoxInputModeUrl: 开启 URL 输入类型键盘  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//  kEditBoxInputModeDecimal: 开启 数字 输入类型键盘，允许小数点  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//  kEditBoxInputModeSingleLine:  开启任何文本的输入键盘,不包括换行  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pEditBox-&amp;gt;setInputMode(kEditBoxInputModeAny);&lt;span class=&quot;comment&quot;&gt;//设置输入类型  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//kEditBoxInputFlagPassword:密码形式输入  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//kEditBoxInputFlagSensitive:   敏感数据输入、存储输入方案且预测自动完成  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//kEditBoxInputFlagInitialCapsWord: 每个单词首字母大写,并且伴有提示  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//kEditBoxInputFlagInitialCapsSentence: 第一句首字母大写,并且伴有提示  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//kEditBoxInputFlagInitialCapsAllCharacters:所有字符自动大写  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pEditBox-&amp;gt;setInputFlag(kEditBoxInputFlagPassword);&lt;span class=&quot;comment&quot;&gt;//设置输入标志位  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//  kKeyboardReturnTypeDefault:  默认使用键盘return 类型  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//  kKeyboardReturnTypeDone: 默认使用键盘return类型为“Done”字样  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//  kKeyboardReturnTypeSend: 默认使用键盘return类型为“Send”字样  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//  kKeyboardReturnTypeSearch:   默认使用键盘return类型为“Search”字样  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//  kKeyboardReturnTypeGo:   默认使用键盘return类型为“Go”字样  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pEditBox-&amp;gt;setReturnType(kKeyboardReturnTypeDone);&lt;span class=&quot;comment&quot;&gt;//设置返回类型  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pEditBox-&amp;gt;setDelegate(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;span class=&quot;comment&quot;&gt;//当前类继承CCEditBoxDelegate类  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;addChild(pEditBox);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;当前类继承于CCEditBoxDelegate，实现其所有接口如下：&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;figcaption&gt;&lt;span&gt;CCEditBoxDelegate接口实现&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; TestLayer::editBoxEditingDidBegin(CCEditBox *editBox)  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	CCLOG(&lt;span class=&quot;string&quot;&gt;&quot;start edit&quot;&lt;/span&gt;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; TestLayer::editBoxEditingDidEnd(CCEditBox *editBox)  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	CCLOG(&lt;span class=&quot;string&quot;&gt;&quot;end edit&quot;&lt;/span&gt;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; TestLayer::editBoxReturn(CCEditBox *editBox)  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	CCLOG(&lt;span class=&quot;string&quot;&gt;&quot;editbox return&quot;&lt;/span&gt;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; TestLayer::editBoxTextChanged(CCEditBox *editBox, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt; &amp;amp;text)  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	CCLOG(&lt;span class=&quot;string&quot;&gt;&quot;text changed&quot;&lt;/span&gt;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;结合点九图按钮的使用&quot;&gt;&lt;a href=&quot;#结合点九图按钮的使用&quot; class=&quot;headerlink&quot; title=&quot;结合点九图按钮的使用&quot;&gt;&lt;/a&gt;结合点九图按钮的使用&lt;/h3&gt;&lt;p&gt;效果图如下：&lt;/p&gt;
&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;http://img.blog.csdn.net/20131213102619421&quot; alt=&quot;&quot; border=&quot;0&quot; title=&quot;效果&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;

&lt;h3 id=&quot;源码下载&quot;&gt;&lt;a href=&quot;#源码下载&quot; class=&quot;headerlink&quot; title=&quot;源码下载&quot;&gt;&lt;/a&gt;源码下载&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://download.csdn.net/detail/jackyvincefu/6707427&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;下载地址&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;登录界面一个帐号/密码输入框或者主角命名框是少不了的。这节就来了解一下点九图的输入框的使用。这里只是介绍基础知识，并不进行平台的移植，也不处理跨平台可能出现的问题。&lt;/p&gt;
&lt;h3 id=&quot;点九图CCScale9Sprite&quot;&gt;&lt;a href=&quot;#点九图CCScale9Sprite&quot; class=&quot;headerlink&quot; title=&quot;点九图CCScale9Sprite&quot;&gt;&lt;/a&gt;点九图CCScale9Sprite&lt;/h3&gt;&lt;h4 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h4&gt;&lt;p&gt;点九图做过移动开发的肯定不会陌生。采用的是PNG点9图，PNG点9图可以自适应各种环境，同时保持伸缩不变形。移动端的UI基本上都是按这个来做的。点9图的制作很简单，用Android SDK的tool下的draw9patch.bat就可以制作。左为原理图，右为效果图。&lt;/p&gt;
    
    </summary>
    
      <category term="cocos2d-x" scheme="http://fusijie.github.io/categories/cocos2d-x/"/>
    
    
      <category term="CCEditBox" scheme="http://fusijie.github.io/tags/CCEditBox/"/>
    
      <category term="CCScale9Sprite" scheme="http://fusijie.github.io/tags/CCScale9Sprite/"/>
    
      <category term="点九图" scheme="http://fusijie.github.io/tags/%E7%82%B9%E4%B9%9D%E5%9B%BE/"/>
    
      <category term="输入框" scheme="http://fusijie.github.io/tags/%E8%BE%93%E5%85%A5%E6%A1%86/"/>
    
  </entry>
  
  <entry>
    <title>【玩转cocos2d-x之二十九】利用CCClipingNode做游戏遮罩</title>
    <link href="http://fusijie.github.io/2013/12/06/play-cocos2dx-29/"/>
    <id>http://fusijie.github.io/2013/12/06/play-cocos2dx-29/</id>
    <published>2013-12-06T02:41:00.000Z</published>
    <updated>2016-04-24T13:36:47.000Z</updated>
    
    <content type="html">&lt;p&gt;新手引导是游戏中必备的（除了奇葩的MT用一段动画开始），也是玩家对游戏的第一印象，重要性不言而喻。一般采用的遮罩的形式来突出引导重点，同时屏蔽其他功能。这里简单的介绍一下游戏遮罩的实现，并给出一个示例。&lt;/p&gt;
&lt;h3 id=&quot;CCClipingNode&quot;&gt;&lt;a href=&quot;#CCClipingNode&quot; class=&quot;headerlink&quot; title=&quot;CCClipingNode&quot;&gt;&lt;/a&gt;CCClipingNode&lt;/h3&gt;&lt;p&gt;CCClipingNode是一个可裁剪节点，简单理解：&lt;/p&gt;
&lt;p&gt;&lt;em&gt;（1）首先它是一个节点，继承于CCNode，所以它可以像普通节点一样放入CCLayer，CCScene，CCNode中。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;（2）作为节点，它就可以用作容器，承载其他节点和精灵。我把它叫底板。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;（3）如果想要对一个节点进行裁剪，那需要给出裁剪的部分，这个裁剪区域，我把它叫模版。&lt;/em&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;所以CCClipingNode裁剪节点在组成上=底板+模版，而在显示上=底板-模版。不知道这样解释会不会好理解一点。&lt;/p&gt;
&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;http://img.blog.csdn.net/20131206093955500?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvamFja3lzdHVkaW8=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast&quot; alt=&quot;&quot; border=&quot;0&quot; title=&quot;CCClipingNode&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;

&lt;h3 id=&quot;API&quot;&gt;&lt;a href=&quot;#API&quot; class=&quot;headerlink&quot; title=&quot;API&quot;&gt;&lt;/a&gt;API&lt;/h3&gt;&lt;p&gt;CCClipingNode的使用还是比较简单的，至于显示底板还是模版，alpha值的设定，这些也不好说清楚，自己多试几次就知道是什么意思该怎么用了。&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;figcaption&gt;&lt;span&gt;CCClipingNode API&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//不带模版地创建一个裁剪节点  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; CCClippingNode* &lt;span class=&quot;title&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//使用一个节点作为模版创建裁剪节点  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; CCClippingNode* &lt;span class=&quot;title&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(CCNode *pStencil)&lt;/span&gt;&lt;/span&gt;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//不带模版地初始化一个裁剪节点  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;virtual&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//使用一个节点作为模版初始化裁剪节点  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;virtual&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(CCNode *pStencil)&lt;/span&gt;&lt;/span&gt;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//设置/获取模版，注意模版需要retain！  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;CCNode* &lt;span class=&quot;title&quot;&gt;getStencil&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt;&lt;/span&gt;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;setStencil&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(CCNode *pStencil)&lt;/span&gt;&lt;/span&gt;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//设置alpha值（0~1），这个很重要，裁剪是按像素抠图的，所以只有大于这个alpha值的模版像素才会被画出来  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//默认是1，也就是完全裁剪。  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;GLfloat &lt;span class=&quot;title&quot;&gt;getAlphaThreshold&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt;&lt;/span&gt;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;setAlphaThreshold&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(GLfloat fAlphaThreshold)&lt;/span&gt;&lt;/span&gt;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//默认是false，用于设置显示底板还是模版  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;isInverted&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt;&lt;/span&gt;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;setInverted&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; bInverted)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;示例&quot;&gt;&lt;a href=&quot;#示例&quot; class=&quot;headerlink&quot; title=&quot;示例&quot;&gt;&lt;/a&gt;示例&lt;/h3&gt;&lt;p&gt;在init中实现：&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;figcaption&gt;&lt;span&gt;CCClipingNode的使用&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;CCSize visibleSize=CCDirector::sharedDirector()-&amp;gt;getVisibleSize();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CCSprite* background = CCSprite::create(&lt;span class=&quot;string&quot;&gt;&quot;HelloWorld.png&quot;&lt;/span&gt;);&lt;span class=&quot;comment&quot;&gt;//创建背景  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;background-&amp;gt;setPosition(ccp(visibleSize.width/&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,visibleSize.height/&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;));  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;-&amp;gt;addChild(background,kTagBackground);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;clip=CCClippingNode::create();&lt;span class=&quot;comment&quot;&gt;//创建裁剪节点，成员变量  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;clip-&amp;gt;setInverted(&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;);&lt;span class=&quot;comment&quot;&gt;//设置底板可见  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;clip-&amp;gt;setAlphaThreshold(&lt;span class=&quot;number&quot;&gt;0.0f&lt;/span&gt;);&lt;span class=&quot;comment&quot;&gt;//设置alpha为0  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;-&amp;gt;addChild(clip,kTagClipNode);&lt;span class=&quot;comment&quot;&gt;//添加裁剪节点  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CCLayerColor* back=CCLayerColor::create(ccc4(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;200&lt;/span&gt;));  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;clip-&amp;gt;addChild(back);&lt;span class=&quot;comment&quot;&gt;//为裁剪节点添加一个黑色带透明（看起了是灰色）的底板  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//模版如果要在其他地方使用要记得retain！  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//第一种：以下模型是drawnode遮罩  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//CCDrawNode* front=CCDrawNode::create();  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//ccColor4F yellow = &amp;#123;1, 1, 0, 1&amp;#125;;  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//CCPoint rect[4]=&amp;#123;ccp(-30,30),ccp(30,30),ccp(30,-30),ccp(-30,-30)&amp;#125;;  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//front-&amp;gt;drawPolygon(rect, 4, yellow, 0, yellow);  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//front-&amp;gt;setPosition(ccp(visibleSize.width/2, visibleSize.height/2));  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//clip-&amp;gt;setStencil(front);  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//第二种：以下模型是带图像遮罩  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CCNode* nodef=CCNode::create();&lt;span class=&quot;comment&quot;&gt;//创建模版  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CCSprite* close=CCSprite::create(&lt;span class=&quot;string&quot;&gt;&quot;CloseSelected.png&quot;&lt;/span&gt;);&lt;span class=&quot;comment&quot;&gt;//这里使用的是close的那个图标，所以注意观察效果图2  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;nodef-&amp;gt;addChild(close);&lt;span class=&quot;comment&quot;&gt;//在模版上添加精灵  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;nodef-&amp;gt;setPosition(ccp(visibleSize.width/&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,visibleSize.height/&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;));  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;clip-&amp;gt;setStencil(nodef);&lt;span class=&quot;comment&quot;&gt;//设置模版  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tip = CCSprite::create(&lt;span class=&quot;string&quot;&gt;&quot;tip.png&quot;&lt;/span&gt;);&lt;span class=&quot;comment&quot;&gt;//一些引导提示  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tip-&amp;gt;setScale(&lt;span class=&quot;number&quot;&gt;0.5f&lt;/span&gt;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tip-&amp;gt;setRotation(&lt;span class=&quot;number&quot;&gt;60&lt;/span&gt;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tip-&amp;gt;setPosition(ccp(visibleSize.width/&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-70&lt;/span&gt;,visibleSize.height/&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;+&lt;span class=&quot;number&quot;&gt;50&lt;/span&gt;));  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;-&amp;gt;addChild(tip,kTagTip);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tip-&amp;gt;runAction(CCRepeatForever::create(CCSequence::create(CCScaleBy::create(&lt;span class=&quot;number&quot;&gt;0.25f&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0.95f&lt;/span&gt;),CCScaleTo::create(&lt;span class=&quot;number&quot;&gt;0.25f&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0.5&lt;/span&gt;),NULL)));  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;-&amp;gt;setTouchEnabled(&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;);&lt;span class=&quot;comment&quot;&gt;//触摸有效，落点正确时移除裁剪节点和提示，相关处理请看源码&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;效果&quot;&gt;&lt;a href=&quot;#效果&quot; class=&quot;headerlink&quot; title=&quot;效果&quot;&gt;&lt;/a&gt;效果&lt;/h3&gt;&lt;p&gt;两种效果：&lt;/p&gt;
&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;http://img.blog.csdn.net/20131206102326578&quot; alt=&quot;&quot; border=&quot;0&quot; title=&quot;1&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;

&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;http://img.blog.csdn.net/20131206102337937&quot; alt=&quot;&quot; border=&quot;0&quot; title=&quot;2&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;

&lt;h3 id=&quot;源码&quot;&gt;&lt;a href=&quot;#源码&quot; class=&quot;headerlink&quot; title=&quot;源码&quot;&gt;&lt;/a&gt;源码&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://download.csdn.net/detail/jackyvincefu/6667189&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;下载地址&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;新手引导是游戏中必备的（除了奇葩的MT用一段动画开始），也是玩家对游戏的第一印象，重要性不言而喻。一般采用的遮罩的形式来突出引导重点，同时屏蔽其他功能。这里简单的介绍一下游戏遮罩的实现，并给出一个示例。&lt;/p&gt;
&lt;h3 id=&quot;CCClipingNode&quot;&gt;&lt;a href=&quot;#CCClipingNode&quot; class=&quot;headerlink&quot; title=&quot;CCClipingNode&quot;&gt;&lt;/a&gt;CCClipingNode&lt;/h3&gt;&lt;p&gt;CCClipingNode是一个可裁剪节点，简单理解：&lt;/p&gt;
&lt;p&gt;&lt;em&gt;（1）首先它是一个节点，继承于CCNode，所以它可以像普通节点一样放入CCLayer，CCScene，CCNode中。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;（2）作为节点，它就可以用作容器，承载其他节点和精灵。我把它叫底板。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;（3）如果想要对一个节点进行裁剪，那需要给出裁剪的部分，这个裁剪区域，我把它叫模版。&lt;/em&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="cocos2d-x" scheme="http://fusijie.github.io/categories/cocos2d-x/"/>
    
    
      <category term="cocos2d-x" scheme="http://fusijie.github.io/tags/cocos2d-x/"/>
    
      <category term="CCClipingNode" scheme="http://fusijie.github.io/tags/CCClipingNode/"/>
    
      <category term="游戏遮罩" scheme="http://fusijie.github.io/tags/%E6%B8%B8%E6%88%8F%E9%81%AE%E7%BD%A9/"/>
    
      <category term="游戏引导" scheme="http://fusijie.github.io/tags/%E6%B8%B8%E6%88%8F%E5%BC%95%E5%AF%BC/"/>
    
      <category term="裁剪节点" scheme="http://fusijie.github.io/tags/%E8%A3%81%E5%89%AA%E8%8A%82%E7%82%B9/"/>
    
  </entry>
  
  <entry>
    <title>【玩转cocos2d-x之二十八】cocos2d-x的消息和数据传递</title>
    <link href="http://fusijie.github.io/2013/12/03/play-cocos2dx-28/"/>
    <id>http://fusijie.github.io/2013/12/03/play-cocos2dx-28/</id>
    <published>2013-12-03T01:57:00.000Z</published>
    <updated>2016-04-24T13:37:48.000Z</updated>
    
    <content type="html">&lt;p&gt;如何在层间或者场景间进行消息传递，大概是每个初学者都要面对的问题吧。这里介绍cocos2d-x的一种消息/数据传递方式，内置的观察者模式，也称消息通知中心，CCNotificationCenter。&lt;/p&gt;
&lt;h3 id=&quot;CCNotificationCenter&quot;&gt;&lt;a href=&quot;#CCNotificationCenter&quot; class=&quot;headerlink&quot; title=&quot;CCNotificationCenter&quot;&gt;&lt;/a&gt;CCNotificationCenter&lt;/h3&gt;&lt;p&gt;CCNotificationCenter是cocos2d-x提供的一个消息中心，类似于观察者模式，是一个单例类，用于辅助控制消息传递。大概工作原理如下图。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;http://img.blog.csdn.net/20131203084104765?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvamFja3lzdHVkaW8=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast&quot; alt=&quot;&quot; border=&quot;0&quot; title=&quot;CCNotificationCenter&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;

&lt;p&gt;这里以A，B通讯为例，A，B可以是层间或者场景间。假如A要向B发送带数据的消息。那么&lt;/p&gt;
&lt;p&gt;&lt;em&gt;（1）B向小心中心注册一个bMsg的消息，告知消息中心，如果消息中心接收到bMsg，必须通知B，以便B采取相应的措施。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;（2）A向消息中心发送bMsg消息。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;（3）消息中心接收到bMsg，查询有谁在它这里注册了这个消息，发现是B，就通知B有人发送了bMsg。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;（4）当然这个消息带有A要传递的数据，而B也不知道到底是谁给它发了bMsg这条消息，除非在传递的数据中指出。&lt;/em&gt;&lt;/p&gt;
&lt;h3 id=&quot;相关API&quot;&gt;&lt;a href=&quot;#相关API&quot; class=&quot;headerlink&quot; title=&quot;相关API&quot;&gt;&lt;/a&gt;相关API&lt;/h3&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;figcaption&gt;&lt;span&gt;CCNotificationCenter API&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//获得消息通知中心的一个单例对象  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; CCNotificationCenter *&lt;span class=&quot;title&quot;&gt;sharedNotificationCenter&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//销毁通知中心的单例对象  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;purgeNotificationCenter&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//添加观察者  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;addObserver&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(CCObject *target,   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                	SEL_CallFuncO selector,  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                	&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *name,  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                	CCObject *obj)&lt;/span&gt;&lt;/span&gt;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;comment&quot;&gt;//移除观察者  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;removeObserver&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(CCObject *target,&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *name)&lt;/span&gt;&lt;/span&gt;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;comment&quot;&gt;//移除所有观察者  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;removeAllObservers&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(CCObject *target)&lt;/span&gt;&lt;/span&gt;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;comment&quot;&gt;//发送消息  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;postNotification&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *name)&lt;/span&gt;&lt;/span&gt;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;comment&quot;&gt;//发送带数据的消息  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;postNotification&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *name, CCObject *object)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;观察者的意思即是等待获取消息的对象，比如上图的B。&lt;/p&gt;
&lt;h3 id=&quot;原理&quot;&gt;&lt;a href=&quot;#原理&quot; class=&quot;headerlink&quot; title=&quot;原理&quot;&gt;&lt;/a&gt;原理&lt;/h3&gt;&lt;p&gt;CCNotificationCenter的实现比较简单，它的内部维护了一个CCArray数组，数组的元素是CCNotificationObserver类型的对象，CCNotificationObserver封装了回调的执行者，回调函数，消息名称以及传递的数据。每次注册，也就是添加观察者，其实就是把这个CCNotificationObserver对象加入通知中心的CCArray数组，而每次的消息发送就是将消息传递给通知中心，由通知中心遍历这个数组，找到一致的消息，调用这些回调函数。其实这样看起来，就像是A在调用B的函数。具体的就自己看下源码吧。&lt;/p&gt;
&lt;h3 id=&quot;示例&quot;&gt;&lt;a href=&quot;#示例&quot; class=&quot;headerlink&quot; title=&quot;示例&quot;&gt;&lt;/a&gt;示例&lt;/h3&gt;&lt;p&gt;这里做了一个场景，包含了2个层，目的是层A向层B发送带数据的消息，层B收到后打印出这条数据。&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;figcaption&gt;&lt;span&gt;CCNotificationCenter的示例&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//ALayer  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; ALayer::init()  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; bRet=&lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt;   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       	CC_BREAK_IF(!CCLayer::init());  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       	CCSize visibleSize = CCDirector::sharedDirector()-&amp;gt;getVisibleSize();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       	CCMenuItemImage *pCloseItem = CCMenuItemImage::create(  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           	&lt;span class=&quot;string&quot;&gt;&quot;CloseNormal.png&quot;&lt;/span&gt;,  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           	&lt;span class=&quot;string&quot;&gt;&quot;CloseSelected.png&quot;&lt;/span&gt;,  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           	this,  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           	menu_selector(ALayer::PostMessage));&lt;span class=&quot;comment&quot;&gt;//按钮用于点击发送消息  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       	pCloseItem-&amp;gt;setAnchorPoint(ccp(&lt;span class=&quot;number&quot;&gt;0.5&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0.5&lt;/span&gt;));  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       	pCloseItem-&amp;gt;setPosition(ccp(visibleSize.width/&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,visibleSize.height/&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;));  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       	CCMenu* pMenu = CCMenu::create(pCloseItem, NULL);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       	pMenu-&amp;gt;setPosition(CCPointZero);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       	&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;-&amp;gt;addChild(pMenu, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       	bRet=&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&amp;#125; &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	return bRet;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; ALayer::PostMessage(CCObject* pSender)  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	CCString* str=CCString::create(&lt;span class=&quot;string&quot;&gt;&quot;Hello BLayer!&quot;&lt;/span&gt;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	CCNotificationCenter::sharedNotificationCenter()-&amp;gt;postNotification(&lt;span class=&quot;string&quot;&gt;&quot;BMessage&quot;&lt;/span&gt;,str);&lt;span class=&quot;comment&quot;&gt;//发送带str的消息BMessage  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//BLayer  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; BLayer::init()  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; bRet=&lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt;   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       	CC_BREAK_IF(!CCLayer::init());  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       	CCNotificationCenter::sharedNotificationCenter()-&amp;gt;addObserver(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;,callfuncO_selector(BLayer::getMessage),&lt;span class=&quot;string&quot;&gt;&quot;BMessage&quot;&lt;/span&gt;,&lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;);&lt;span class=&quot;comment&quot;&gt;//注册BMessage，如果接收到了，执行getMessage  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       	bRet=&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&amp;#125; &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	return bRet;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; BLayer::getMessage(CCObject* obj)  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	CCString* str=&lt;span class=&quot;keyword&quot;&gt;static_cast&lt;/span&gt;&amp;lt;CCString*&amp;gt;(obj);&lt;span class=&quot;comment&quot;&gt;//打印出传递的数据  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	CCLog(str-&amp;gt;getCString());  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;BLayer::~BLayer(&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	CCNotificationCenter::sharedNotificationCenter()-&amp;gt;purgeNotificationCenter();&lt;span class=&quot;comment&quot;&gt;//释放通知中心单例对象  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;注意&quot;&gt;&lt;a href=&quot;#注意&quot; class=&quot;headerlink&quot; title=&quot;注意&quot;&gt;&lt;/a&gt;注意&lt;/h3&gt;&lt;p&gt;使用CCNotificationCenter需要注意以下几点：&lt;/p&gt;
&lt;p&gt;&lt;em&gt;（1）一个对象可以注册多个消息，一个消息也可以由多个消息注册。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;（2）传递参数，A可以向B传递参数，而B在注册的时候也可以带一个参数，如果这两个数据不是指向同一对象的话，消息不会传递。也就是说要么A传递NULL对象，要么B注册时带NULL对象，要么都不是NULL但必须是同一对象，消息传递才会成功。以下是发送消息执行的判断：&lt;/em&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;figcaption&gt;&lt;span&gt;消息发送的判断&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!&lt;span class=&quot;built_in&quot;&gt;strcmp&lt;/span&gt;(name,observer-&amp;gt;getName()) &amp;amp;&amp;amp; (observer-&amp;gt;getObject() == object || observer-&amp;gt;getObject() == NULL || object == NULL))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;em&gt;（3）局部变量的传递，注意到上例，传递的是CCString的一个局部变量（但还是要autorelease），从CCNotificationCenter的实现上来看，这是没有问题的，因为数据是在postNotification被调用的，也就是整个函数体并没结束，数据不会被销毁。&lt;/em&gt;&lt;/p&gt;
&lt;h3 id=&quot;效果图&quot;&gt;&lt;a href=&quot;#效果图&quot; class=&quot;headerlink&quot; title=&quot;效果图&quot;&gt;&lt;/a&gt;效果图&lt;/h3&gt;&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;http://img.blog.csdn.net/20131204150850171&quot; alt=&quot;&quot; border=&quot;0&quot; title=&quot;效果&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;

&lt;h3 id=&quot;源码下载&quot;&gt;&lt;a href=&quot;#源码下载&quot; class=&quot;headerlink&quot; title=&quot;源码下载&quot;&gt;&lt;/a&gt;源码下载&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://download.csdn.net/detail/jackyvincefu/6647453&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;下载地址&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;如何在层间或者场景间进行消息传递，大概是每个初学者都要面对的问题吧。这里介绍cocos2d-x的一种消息/数据传递方式，内置的观察者模式，也称消息通知中心，CCNotificationCenter。&lt;/p&gt;
&lt;h3 id=&quot;CCNotificationCenter&quot;&gt;&lt;a href=&quot;#CCNotificationCenter&quot; class=&quot;headerlink&quot; title=&quot;CCNotificationCenter&quot;&gt;&lt;/a&gt;CCNotificationCenter&lt;/h3&gt;&lt;p&gt;CCNotificationCenter是cocos2d-x提供的一个消息中心，类似于观察者模式，是一个单例类，用于辅助控制消息传递。大概工作原理如下图。&lt;/p&gt;
    
    </summary>
    
      <category term="cocos2d-x" scheme="http://fusijie.github.io/categories/cocos2d-x/"/>
    
    
      <category term="回调函数" scheme="http://fusijie.github.io/tags/%E5%9B%9E%E8%B0%83%E5%87%BD%E6%95%B0/"/>
    
      <category term="消息传递" scheme="http://fusijie.github.io/tags/%E6%B6%88%E6%81%AF%E4%BC%A0%E9%80%92/"/>
    
      <category term="数据传递" scheme="http://fusijie.github.io/tags/%E6%95%B0%E6%8D%AE%E4%BC%A0%E9%80%92/"/>
    
      <category term="CCNotificationCenter" scheme="http://fusijie.github.io/tags/CCNotificationCenter/"/>
    
      <category term="观察者模式" scheme="http://fusijie.github.io/tags/%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>【玩转cocos2d-x之二十七】CCSequence不能执行CCRepeatForever</title>
    <link href="http://fusijie.github.io/2013/11/28/play-cocos2dx-27/"/>
    <id>http://fusijie.github.io/2013/11/28/play-cocos2dx-27/</id>
    <published>2013-11-28T01:25:00.000Z</published>
    <updated>2016-04-24T13:38:50.000Z</updated>
    
    <content type="html">&lt;p&gt;之前在遇到这么一个问题，在CCSequence中加入CCRepeatForever，发现其他动作执行没问题，就是CCRepeatForever无法执行。代码并没有问题，很奇怪。&lt;/p&gt;
&lt;h3 id=&quot;示例&quot;&gt;&lt;a href=&quot;#示例&quot; class=&quot;headerlink&quot; title=&quot;示例&quot;&gt;&lt;/a&gt;示例&lt;/h3&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;figcaption&gt;&lt;span&gt;示例&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;CCBlink* blink=CCBlink::create(&lt;span class=&quot;number&quot;&gt;0.5f&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;);&lt;span class=&quot;comment&quot;&gt;//创建闪烁动画，duration=0.5s  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CCAnimation* animation=CCAnimation::create();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;animation-&amp;gt;addSpriteFrameWithFileName(&lt;span class=&quot;string&quot;&gt;&quot;CloseNormal.png&quot;&lt;/span&gt;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;animation-&amp;gt;addSpriteFrameWithFileName(&lt;span class=&quot;string&quot;&gt;&quot;CloseSelected.png&quot;&lt;/span&gt;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;animation-&amp;gt;setDelayPerUnit(&lt;span class=&quot;number&quot;&gt;1.0f&lt;/span&gt;);&lt;span class=&quot;comment&quot;&gt;//帧间间隔1s  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CCAnimate* animate=CCAnimate::create(animation);&lt;span class=&quot;comment&quot;&gt;//创建帧动画  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CCRepeatForever* repeat=CCRepeatForever::create(animate);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CCSequence* sequence=CCSequence::create(blink,repeat,NULL);&lt;span class=&quot;comment&quot;&gt;//创建连续动画  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CCSprite* close=CCSprite::create(&lt;span class=&quot;string&quot;&gt;&quot;CloseNormal.png&quot;&lt;/span&gt;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;close-&amp;gt;setPosition(ccp(&lt;span class=&quot;number&quot;&gt;240&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;160&lt;/span&gt;));  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;-&amp;gt;addChild(close);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;close-&amp;gt;runAction(sequence);&lt;span class=&quot;comment&quot;&gt;//执行连续动画&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;结果精灵闪烁10次以后，帧动画不执行了。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;原因&quot;&gt;&lt;a href=&quot;#原因&quot; class=&quot;headerlink&quot; title=&quot;原因&quot;&gt;&lt;/a&gt;原因&lt;/h3&gt;&lt;p&gt;先了解一下CCSequence的创建和执行原理。&lt;/p&gt;
&lt;h4 id=&quot;CCSequence的创建&quot;&gt;&lt;a href=&quot;#CCSequence的创建&quot; class=&quot;headerlink&quot; title=&quot;CCSequence的创建&quot;&gt;&lt;/a&gt;CCSequence的创建&lt;/h4&gt;&lt;p&gt;创建CCSequence调用&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;figcaption&gt;&lt;span&gt;创建CCSequence&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;CCSequence* CCSequence::create(CCFiniteTimeAction *pAction1, ...)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;内部调用了createWithVariableList，从实现可以看出这是一个递归调用。&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;figcaption&gt;&lt;span&gt;createWithVariableList&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//获取动作列表，创建CCSequence  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CCSequence* CCSequence::createWithVariableList(CCFiniteTimeAction *pAction1, va_list args)  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	CCFiniteTimeAction *pNow;&lt;span class=&quot;comment&quot;&gt;//当前动作  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	CCFiniteTimeAction *pPrev = pAction1;&lt;span class=&quot;comment&quot;&gt;//第一个动作  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; bOneAction = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;span class=&quot;comment&quot;&gt;//只有一个动作的标志位  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (pAction1)  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		pNow = va_arg(args, CCFiniteTimeAction*);&lt;span class=&quot;comment&quot;&gt;//获取当前动作  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (pNow)&lt;span class=&quot;comment&quot;&gt;//如果存在  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			pPrev = createWithTwoActions(pPrev, pNow);&lt;span class=&quot;comment&quot;&gt;//用前两个动作创建CCSequence并赋给第一个动作  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			bOneAction = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;span class=&quot;comment&quot;&gt;//置false  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;//如果不存在  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;comment&quot;&gt;// If only one action is added to CCSequence, make up a CCSequence by adding a simplest finite time action.  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (bOneAction)&lt;span class=&quot;comment&quot;&gt;//如果只有一个动作  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				pPrev = createWithTwoActions(pPrev, ExtraAction::create());  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;span class=&quot;comment&quot;&gt;//跳出循环  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	return ((CCSequence*)pPrev);&lt;span class=&quot;comment&quot;&gt;//返回第一个动作  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;假如有3个动作要被串联，则先把第1个和第2个串联一个CCSequence，再把这个CCSequence和第3个动作串联成最终的CCSequence，然后返回。从CCSequence的成员变量可以看到：&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;figcaption&gt;&lt;span&gt;动作对象指针成员变量&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;CCFiniteTimeAction *m_pActions[&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;];&lt;span class=&quot;comment&quot;&gt;//表明只包含2个动作对象指针&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;使用递归多少会降低程序的运行效率，但是却可以换来代码的简洁性，同样的CCSpawn也是这么实现的。&lt;br&gt;在createWithTwoActions中，调用了initWithTwoActions函数，实现了把两个动作串成一个CCSequence，关键代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;figcaption&gt;&lt;span&gt;initWithTwoActions&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;float&lt;/span&gt; d = pActionOne-&amp;gt;getDuration() + pActionTwo-&amp;gt;getDuration();&lt;span class=&quot;comment&quot;&gt;//获取两个动作的duration  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CCActionInterval::initWithDuration(d);&lt;span class=&quot;comment&quot;&gt;//赋给新的CCSequence  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;m_pActions[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] = pActionOne;&lt;span class=&quot;comment&quot;&gt;//同时把两个动作赋给m_pActions指针数组  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pActionOne-&amp;gt;retain();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;m_pActions[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;] = pActionTwo;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pActionTwo-&amp;gt;retain();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;duration&quot;&gt;&lt;a href=&quot;#duration&quot; class=&quot;headerlink&quot; title=&quot;duration&quot;&gt;&lt;/a&gt;duration&lt;/h4&gt;&lt;p&gt;从示例可以看出，闪烁动画blink的duration是0.5s，那CCRepeatForever呢？1s？当然不是，1s只是帧动画animate的帧间间隔，每个帧动画包含2帧，而CCRepeatForever的duration是0。因此，当示例中的闪烁动画blink和重复动画repeat串联成CCSequence sequence的时候，sequence的duration就变成0.5+0=0.5s，这很重要。&lt;/p&gt;
&lt;h4 id=&quot;m-split&quot;&gt;&lt;a href=&quot;#m-split&quot; class=&quot;headerlink&quot; title=&quot;m_split&quot;&gt;&lt;/a&gt;m_split&lt;/h4&gt;&lt;p&gt;CCSequence中有这么一个成员变量&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;figcaption&gt;&lt;span&gt;m_split&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;float&lt;/span&gt; m_split;&lt;span class=&quot;comment&quot;&gt;//记录了第一个动画时长占总时长的比例，也就是2个动画的时长分界&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;当执行runAction的时候，CCSequence会调用&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;figcaption&gt;&lt;span&gt;startWithTarget&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; CCSequence::startWithTarget(CCNode *pTarget)  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	CCActionInterval::startWithTarget(pTarget);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	m_split = m_pActions[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]-&amp;gt;getDuration() / m_fDuration;&lt;span class=&quot;comment&quot;&gt;//获取第一个动画占总时长的比例  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	m_last = &lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;而这里由于blink占了0.5s，repeat占了0s，总时长0.5s，所以m_split是0.5/0.5=1。blink占满了整个CCSequence，所以CCSequence无法执行repeat。&lt;/p&gt;
&lt;p&gt;这时候再来看CCSequence::update(float dt)函数的执行，就会恍然大悟了。&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;figcaption&gt;&lt;span&gt;update&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; found = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;span class=&quot;comment&quot;&gt;//当前播放动作索引  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new_t&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;0.0f&lt;/span&gt;;&lt;span class=&quot;comment&quot;&gt;//新播放进度  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;( t &amp;lt; m_split ) &amp;#123;&lt;span class=&quot;comment&quot;&gt;//播放进度&amp;lt;分界进度  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	found = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;span class=&quot;comment&quot;&gt;//设置当前播放的是第一个动作  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;( m_split != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; )&lt;span class=&quot;comment&quot;&gt;//如果第一个动作时长占比!=0  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       	&lt;span class=&quot;keyword&quot;&gt;new_t&lt;/span&gt; = t / m_split;&lt;span class=&quot;comment&quot;&gt;//计算出第一个动作新的播放进度  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       	&lt;span class=&quot;keyword&quot;&gt;new_t&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;span class=&quot;comment&quot;&gt;//设置第一个已播放完毕  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;span class=&quot;comment&quot;&gt;//播放进度&amp;gt;=分界进度  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	found = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;span class=&quot;comment&quot;&gt;//设置当前播放的是第二个动作  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ( m_split == &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; )&lt;span class=&quot;comment&quot;&gt;//如果第一个动作时长占比==1  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       	&lt;span class=&quot;keyword&quot;&gt;new_t&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;span class=&quot;comment&quot;&gt;//设置第二个动作已完成  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       	&lt;span class=&quot;keyword&quot;&gt;new_t&lt;/span&gt; = (t-m_split) / (&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; - m_split );&lt;span class=&quot;comment&quot;&gt;//计算出第二个动作新的播放进度  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;注意&quot;&gt;&lt;a href=&quot;#注意&quot; class=&quot;headerlink&quot; title=&quot;注意&quot;&gt;&lt;/a&gt;注意&lt;/h3&gt;&lt;p&gt;&lt;em&gt;（1）CCSpawn也会有这个问题，所以CCSpawn也无法执行加入其中的CCRepeatForever动作。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;（2）CCRepeatForever的反转动作也是无效了，一个不会停止的动作从什么地方开始反转？当然你可以先把动作反转了再加入CCRepeatForever中，这是没问题的。&lt;/em&gt;&lt;/p&gt;
&lt;h3 id=&quot;解决方案&quot;&gt;&lt;a href=&quot;#解决方案&quot; class=&quot;headerlink&quot; title=&quot;解决方案&quot;&gt;&lt;/a&gt;解决方案&lt;/h3&gt;&lt;p&gt;&lt;em&gt;（1）对于同时动作，不使用CCSpawn，采用分别执行&lt;/em&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;figcaption&gt;&lt;span&gt;分别执行&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;close-&amp;gt;runAction(blink);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;close-&amp;gt;runAction(repeat);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;em&gt;（2）对于连续动作，不直接往CCSequence中加入CCRepeatForever，而是把CCRepeatForever放入瞬时动作CCCallFunc中，再把CCCallFunc加入CCSequence中执行。&lt;/em&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;figcaption&gt;&lt;span&gt;CCSequence串联&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;close=CCSprite::create(&lt;span class=&quot;string&quot;&gt;&quot;CloseNormal.png&quot;&lt;/span&gt;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CCBlink* blink=CCBlink::create(&lt;span class=&quot;number&quot;&gt;0.5f&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CCCallFunc* callFunc=CCCallFunc::create(this,callfunc_selector(TestScene::repeatFunc));&lt;span class=&quot;comment&quot;&gt;//创建CCCallFunc对象  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CCSequence* sequence=CCSequence::create(blink,callFunc,NULL);&lt;span class=&quot;comment&quot;&gt;//把CCCallFunc对象加入CCSequence中  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;close-&amp;gt;setPosition(ccp(&lt;span class=&quot;number&quot;&gt;240&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;160&lt;/span&gt;));  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;-&amp;gt;addChild(close);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;close-&amp;gt;runAction(sequence);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; TestScene::repeatFunc()  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	CCAnimation* animation=CCAnimation::create();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	animation-&amp;gt;addSpriteFrameWithFileName(&lt;span class=&quot;string&quot;&gt;&quot;CloseNormal.png&quot;&lt;/span&gt;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	animation-&amp;gt;addSpriteFrameWithFileName(&lt;span class=&quot;string&quot;&gt;&quot;CloseSelected.png&quot;&lt;/span&gt;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	animation-&amp;gt;setDelayPerUnit(&lt;span class=&quot;number&quot;&gt;1.0f&lt;/span&gt;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	CCAnimate* animate=CCAnimate::create(animation);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	CCRepeatForever* repeat=CCRepeatForever::create(animate);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	close-&amp;gt;runAction(repeat);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;em&gt;（3）对于CCAnimation帧动画，可以设置循环属性，而不使用CCRepeatForever。&lt;/em&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;figcaption&gt;&lt;span&gt;setLoops&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;animation-&amp;gt;setLoops(&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;总结&quot;&gt;&lt;a href=&quot;#总结&quot; class=&quot;headerlink&quot; title=&quot;总结&quot;&gt;&lt;/a&gt;总结&lt;/h3&gt;&lt;p&gt;虽然CCRepeatForever也同样继承于CCActionInterval，理论上是延时动作的子类，但是和一般的延时动作又有很大的不同，所以平时在使用的时候必须很小心，不能当成一般的CCActionInterval使用。而在cocos2d-x动作的分类上是不是应该把它从CCAction继承出来会比较好一点？&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;之前在遇到这么一个问题，在CCSequence中加入CCRepeatForever，发现其他动作执行没问题，就是CCRepeatForever无法执行。代码并没有问题，很奇怪。&lt;/p&gt;
&lt;h3 id=&quot;示例&quot;&gt;&lt;a href=&quot;#示例&quot; class=&quot;headerlink&quot; title=&quot;示例&quot;&gt;&lt;/a&gt;示例&lt;/h3&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;figcaption&gt;&lt;span&gt;示例&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;CCBlink* blink=CCBlink::create(&lt;span class=&quot;number&quot;&gt;0.5f&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;);&lt;span class=&quot;comment&quot;&gt;//创建闪烁动画，duration=0.5s  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CCAnimation* animation=CCAnimation::create();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;animation-&amp;gt;addSpriteFrameWithFileName(&lt;span class=&quot;string&quot;&gt;&quot;CloseNormal.png&quot;&lt;/span&gt;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;animation-&amp;gt;addSpriteFrameWithFileName(&lt;span class=&quot;string&quot;&gt;&quot;CloseSelected.png&quot;&lt;/span&gt;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;animation-&amp;gt;setDelayPerUnit(&lt;span class=&quot;number&quot;&gt;1.0f&lt;/span&gt;);&lt;span class=&quot;comment&quot;&gt;//帧间间隔1s  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CCAnimate* animate=CCAnimate::create(animation);&lt;span class=&quot;comment&quot;&gt;//创建帧动画  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CCRepeatForever* repeat=CCRepeatForever::create(animate);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CCSequence* sequence=CCSequence::create(blink,repeat,NULL);&lt;span class=&quot;comment&quot;&gt;//创建连续动画  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CCSprite* close=CCSprite::create(&lt;span class=&quot;string&quot;&gt;&quot;CloseNormal.png&quot;&lt;/span&gt;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;close-&amp;gt;setPosition(ccp(&lt;span class=&quot;number&quot;&gt;240&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;160&lt;/span&gt;));  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;-&amp;gt;addChild(close);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;close-&amp;gt;runAction(sequence);&lt;span class=&quot;comment&quot;&gt;//执行连续动画&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;结果精灵闪烁10次以后，帧动画不执行了。&lt;/p&gt;
    
    </summary>
    
      <category term="cocos2d-x" scheme="http://fusijie.github.io/categories/cocos2d-x/"/>
    
    
      <category term="CCSequence" scheme="http://fusijie.github.io/tags/CCSequence/"/>
    
      <category term="CCRepeatForever" scheme="http://fusijie.github.io/tags/CCRepeatForever/"/>
    
      <category term="无法执行" scheme="http://fusijie.github.io/tags/%E6%97%A0%E6%B3%95%E6%89%A7%E8%A1%8C/"/>
    
      <category term="解决方案" scheme="http://fusijie.github.io/tags/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    
  </entry>
  
</feed>
